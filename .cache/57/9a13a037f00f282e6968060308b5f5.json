{"id":"node_modules/webcola/dist/src/batch.js","dependencies":[{"name":"/Users/reza/Documents/Meteor/Force Directed Graph/Graph/node_modules/webcola/dist/src/batch.js.map","includedInParent":true,"mtime":1517462217000},{"name":"/Users/reza/Documents/Meteor/Force Directed Graph/Graph/node_modules/webcola/WebCola/src/batch.ts","includedInParent":true,"mtime":1516884256000},{"name":"/Users/reza/Documents/Meteor/Force Directed Graph/Graph/package.json","includedInParent":true,"mtime":1550967406043},{"name":"/Users/reza/Documents/Meteor/Force Directed Graph/Graph/node_modules/webcola/package.json","includedInParent":true,"mtime":1550967405642},{"name":"./layout","loc":{"line":3,"column":23},"parent":"/Users/reza/Documents/Meteor/Force Directed Graph/Graph/node_modules/webcola/dist/src/batch.js","resolved":"/Users/reza/Documents/Meteor/Force Directed Graph/Graph/node_modules/webcola/dist/src/layout.js"},{"name":"./gridrouter","loc":{"line":4,"column":27},"parent":"/Users/reza/Documents/Meteor/Force Directed Graph/Graph/node_modules/webcola/dist/src/batch.js","resolved":"/Users/reza/Documents/Meteor/Force Directed Graph/Graph/node_modules/webcola/dist/src/gridrouter.js"}],"generated":{"js":"\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar layout_1 = require(\"./layout\");\r\nvar gridrouter_1 = require(\"./gridrouter\");\r\nfunction gridify(pgLayout, nudgeGap, margin, groupMargin) {\r\n    pgLayout.cola.start(0, 0, 0, 10, false);\r\n    var gridrouter = route(pgLayout.cola.nodes(), pgLayout.cola.groups(), margin, groupMargin);\r\n    return gridrouter.routeEdges(pgLayout.powerGraph.powerEdges, nudgeGap, function (e) { return e.source.routerNode.id; }, function (e) { return e.target.routerNode.id; });\r\n}\r\nexports.gridify = gridify;\r\nfunction route(nodes, groups, margin, groupMargin) {\r\n    nodes.forEach(function (d) {\r\n        d.routerNode = {\r\n            name: d.name,\r\n            bounds: d.bounds.inflate(-margin)\r\n        };\r\n    });\r\n    groups.forEach(function (d) {\r\n        d.routerNode = {\r\n            bounds: d.bounds.inflate(-groupMargin),\r\n            children: (typeof d.groups !== 'undefined' ? d.groups.map(function (c) { return nodes.length + c.id; }) : [])\r\n                .concat(typeof d.leaves !== 'undefined' ? d.leaves.map(function (c) { return c.index; }) : [])\r\n        };\r\n    });\r\n    var gridRouterNodes = nodes.concat(groups).map(function (d, i) {\r\n        d.routerNode.id = i;\r\n        return d.routerNode;\r\n    });\r\n    return new gridrouter_1.GridRouter(gridRouterNodes, {\r\n        getChildren: function (v) { return v.children; },\r\n        getBounds: function (v) { return v.bounds; }\r\n    }, margin - groupMargin);\r\n}\r\nfunction powerGraphGridLayout(graph, size, grouppadding) {\r\n    var powerGraph;\r\n    graph.nodes.forEach(function (v, i) { return v.index = i; });\r\n    new layout_1.Layout()\r\n        .avoidOverlaps(false)\r\n        .nodes(graph.nodes)\r\n        .links(graph.links)\r\n        .powerGraphGroups(function (d) {\r\n        powerGraph = d;\r\n        powerGraph.groups.forEach(function (v) { return v.padding = grouppadding; });\r\n    });\r\n    var n = graph.nodes.length;\r\n    var edges = [];\r\n    var vs = graph.nodes.slice(0);\r\n    vs.forEach(function (v, i) { return v.index = i; });\r\n    powerGraph.groups.forEach(function (g) {\r\n        var sourceInd = g.index = g.id + n;\r\n        vs.push(g);\r\n        if (typeof g.leaves !== 'undefined')\r\n            g.leaves.forEach(function (v) { return edges.push({ source: sourceInd, target: v.index }); });\r\n        if (typeof g.groups !== 'undefined')\r\n            g.groups.forEach(function (gg) { return edges.push({ source: sourceInd, target: gg.id + n }); });\r\n    });\r\n    powerGraph.powerEdges.forEach(function (e) {\r\n        edges.push({ source: e.source.index, target: e.target.index });\r\n    });\r\n    new layout_1.Layout()\r\n        .size(size)\r\n        .nodes(vs)\r\n        .links(edges)\r\n        .avoidOverlaps(false)\r\n        .linkDistance(30)\r\n        .symmetricDiffLinkLengths(5)\r\n        .convergenceThreshold(1e-4)\r\n        .start(100, 0, 0, 0, false);\r\n    return {\r\n        cola: new layout_1.Layout()\r\n            .convergenceThreshold(1e-3)\r\n            .size(size)\r\n            .avoidOverlaps(true)\r\n            .nodes(graph.nodes)\r\n            .links(graph.links)\r\n            .groupCompactness(1e-4)\r\n            .linkDistance(30)\r\n            .symmetricDiffLinkLengths(5)\r\n            .powerGraphGroups(function (d) {\r\n            powerGraph = d;\r\n            powerGraph.groups.forEach(function (v) {\r\n                v.padding = grouppadding;\r\n            });\r\n        }).start(50, 0, 100, 0, false),\r\n        powerGraph: powerGraph\r\n    };\r\n}\r\nexports.powerGraphGridLayout = powerGraphGridLayout;\r\n","map":{"version":3,"file":"batch.js","sourceRoot":"","sources":["../../WebCola/src/batch.ts"],"names":[],"mappings":"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","sourcesContent":["import {Node, Link, Layout} from './layout'\r\nimport {GridRouter} from './gridrouter'\r\nimport {Point} from './geom'\r\n\r\n/**\r\n * @property nudgeGap spacing between parallel edge segments\r\n * @property margin space around nodes\r\n * @property groupMargin space around groups\r\n */\r\nexport function gridify(pgLayout, nudgeGap: number, margin: number, groupMargin: number) {\r\n    pgLayout.cola.start(0, 0, 0, 10, false);\r\n    let gridrouter = route(pgLayout.cola.nodes(), pgLayout.cola.groups(), margin, groupMargin);\r\n    return gridrouter.routeEdges<any>(pgLayout.powerGraph.powerEdges, nudgeGap, e=> e.source.routerNode.id, e=> e.target.routerNode.id);\r\n}\r\n\r\nfunction route(nodes, groups, margin: number, groupMargin: number) {\r\n    nodes.forEach(d => {\r\n        d.routerNode = <any>{\r\n            name: d.name,\r\n            bounds: d.bounds.inflate(-margin)\r\n        };\r\n    });\r\n    groups.forEach(d => {\r\n        d.routerNode = <any>{\r\n            bounds: d.bounds.inflate(-groupMargin),\r\n            children: (typeof d.groups !== 'undefined' ? d.groups.map(c=> nodes.length + c.id) : [])\r\n                .concat(typeof d.leaves !== 'undefined' ? d.leaves.map(c=> c.index) : [])\r\n        };\r\n    });\r\n    let gridRouterNodes = nodes.concat(groups).map((d, i) => {\r\n        d.routerNode.id = i;\r\n        return d.routerNode;\r\n    });\r\n    return new GridRouter(gridRouterNodes, {\r\n        getChildren: (v: any) => v.children,\r\n        getBounds: v => v.bounds\r\n    }, margin - groupMargin);\r\n}\r\n\r\nexport function powerGraphGridLayout(\r\n    graph: { nodes: Node[], links: Link<Node>[] },\r\n    size: number[],\r\n    grouppadding: number)\r\n{\r\n    // compute power graph\r\n    var powerGraph;\r\n    graph.nodes.forEach((v,i) => (<any>v).index = i);\r\n    new Layout()\r\n        .avoidOverlaps(false)\r\n        .nodes(graph.nodes)\r\n        .links(graph.links)\r\n        .powerGraphGroups(function (d) {\r\n            powerGraph = d;\r\n            powerGraph.groups.forEach(v=> v.padding = grouppadding);\r\n        });\r\n\r\n    // construct a flat graph with dummy nodes for the groups and edges connecting group dummy nodes to their children\r\n    // power edges attached to groups are replaced with edges connected to the corresponding group dummy node\r\n    var n = graph.nodes.length;\r\n    var edges = [];\r\n    var vs = graph.nodes.slice(0);\r\n    vs.forEach((v, i) => (<any>v).index = i);\r\n    powerGraph.groups.forEach(g => {\r\n        var sourceInd = g.index = g.id + n;\r\n        vs.push(g);\r\n        if (typeof g.leaves !== 'undefined')\r\n            g.leaves.forEach(v => edges.push({ source: sourceInd, target: v.index }));\r\n        if (typeof g.groups !== 'undefined')\r\n            g.groups.forEach(gg => edges.push({ source: sourceInd, target: gg.id + n }));\r\n    });\r\n    powerGraph.powerEdges.forEach(e=> {\r\n        edges.push({ source: e.source.index, target: e.target.index });\r\n    });\r\n\r\n    // layout the flat graph with dummy nodes and edges\r\n    new Layout()\r\n        .size(size)\r\n        .nodes(vs)\r\n        .links(edges)\r\n        .avoidOverlaps(false)\r\n        .linkDistance(30)\r\n        .symmetricDiffLinkLengths(5)\r\n        .convergenceThreshold(1e-4)\r\n        .start(100, 0, 0, 0, false);\r\n\r\n    // final layout taking node positions from above as starting positions\r\n    // subject to group containment constraints\r\n    // and then gridifying the layout\r\n    return {\r\n        cola:\r\n            new Layout()\r\n            .convergenceThreshold(1e-3)\r\n            .size(size)\r\n            .avoidOverlaps(true)\r\n            .nodes(graph.nodes)\r\n            .links(graph.links)\r\n        //.flowLayout('y', 30)\r\n            .groupCompactness(1e-4)\r\n            .linkDistance(30)\r\n            .symmetricDiffLinkLengths(5)\r\n            .powerGraphGroups(function (d) {\r\n                powerGraph = d;\r\n                powerGraph.groups.forEach(function (v) {\r\n                    v.padding = grouppadding\r\n                });\r\n            }).start(50, 0, 100, 0, false),\r\n        powerGraph: powerGraph\r\n    };\r\n}\r\n"]}},"hash":"36d03604dadb3e75e76b72d73b8482d2","cacheData":{"env":{}}}