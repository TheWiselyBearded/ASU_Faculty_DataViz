{"id":"node_modules/webcola/dist/src/d3v3adaptor.js","dependencies":[{"name":"/Users/reza/Documents/Meteor/Force Directed Graph/Graph/node_modules/webcola/dist/src/d3v3adaptor.js.map","includedInParent":true,"mtime":1517462217000},{"name":"/Users/reza/Documents/Meteor/Force Directed Graph/Graph/node_modules/webcola/WebCola/src/d3v3adaptor.ts","includedInParent":true,"mtime":1516884256000},{"name":"/Users/reza/Documents/Meteor/Force Directed Graph/Graph/package.json","includedInParent":true,"mtime":1550967406043},{"name":"/Users/reza/Documents/Meteor/Force Directed Graph/Graph/node_modules/webcola/package.json","includedInParent":true,"mtime":1550967405642},{"name":"./layout","loc":{"line":13,"column":23},"parent":"/Users/reza/Documents/Meteor/Force Directed Graph/Graph/node_modules/webcola/dist/src/d3v3adaptor.js","resolved":"/Users/reza/Documents/Meteor/Force Directed Graph/Graph/node_modules/webcola/dist/src/layout.js"}],"generated":{"js":"\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar layout_1 = require(\"./layout\");\r\nvar D3StyleLayoutAdaptor = (function (_super) {\r\n    __extends(D3StyleLayoutAdaptor, _super);\r\n    function D3StyleLayoutAdaptor() {\r\n        var _this = _super.call(this) || this;\r\n        _this.event = d3.dispatch(layout_1.EventType[layout_1.EventType.start], layout_1.EventType[layout_1.EventType.tick], layout_1.EventType[layout_1.EventType.end]);\r\n        var d3layout = _this;\r\n        var drag;\r\n        _this.drag = function () {\r\n            if (!drag) {\r\n                var drag = d3.behavior.drag()\r\n                    .origin(layout_1.Layout.dragOrigin)\r\n                    .on(\"dragstart.d3adaptor\", layout_1.Layout.dragStart)\r\n                    .on(\"drag.d3adaptor\", function (d) {\r\n                    layout_1.Layout.drag(d, d3.event);\r\n                    d3layout.resume();\r\n                })\r\n                    .on(\"dragend.d3adaptor\", layout_1.Layout.dragEnd);\r\n            }\r\n            if (!arguments.length)\r\n                return drag;\r\n            this\r\n                .call(drag);\r\n        };\r\n        return _this;\r\n    }\r\n    D3StyleLayoutAdaptor.prototype.trigger = function (e) {\r\n        var d3event = { type: layout_1.EventType[e.type], alpha: e.alpha, stress: e.stress };\r\n        this.event[d3event.type](d3event);\r\n    };\r\n    D3StyleLayoutAdaptor.prototype.kick = function () {\r\n        var _this = this;\r\n        d3.timer(function () { return _super.prototype.tick.call(_this); });\r\n    };\r\n    D3StyleLayoutAdaptor.prototype.on = function (eventType, listener) {\r\n        if (typeof eventType === 'string') {\r\n            this.event.on(eventType, listener);\r\n        }\r\n        else {\r\n            this.event.on(layout_1.EventType[eventType], listener);\r\n        }\r\n        return this;\r\n    };\r\n    return D3StyleLayoutAdaptor;\r\n}(layout_1.Layout));\r\nexports.D3StyleLayoutAdaptor = D3StyleLayoutAdaptor;\r\nfunction d3adaptor() {\r\n    return new D3StyleLayoutAdaptor();\r\n}\r\nexports.d3adaptor = d3adaptor;\r\n","map":{"version":3,"file":"d3v3adaptor.js","sourceRoot":"","sources":["../../WebCola/src/d3v3adaptor.ts"],"names":[],"mappings":";;;;;;;;;;;;AAMA,mCAAkD;AAG9C;IAA0C,wCAAM;IAgB5C;QAAA,YACI,iBAAO,SAuBV;QAvCD,WAAK,GAAG,EAAE,CAAC,QAAQ,CAAC,kBAAS,CAAC,kBAAS,CAAC,KAAK,CAAC,EAAE,kBAAS,CAAC,kBAAS,CAAC,IAAI,CAAC,EAAE,kBAAS,CAAC,kBAAS,CAAC,GAAG,CAAC,CAAC,CAAC;QAkBjG,IAAI,QAAQ,GAAG,KAAI,CAAC;QACpB,IAAI,IAAI,CAAC;QACT,KAAI,CAAC,IAAI,GAAG;YACR,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;gBACR,IAAI,IAAI,GAAG,EAAE,CAAC,QAAQ,CAAC,IAAI,EAAE;qBACxB,MAAM,CAAC,eAAM,CAAC,UAAU,CAAC;qBACzB,EAAE,CAAC,qBAAqB,EAAE,eAAM,CAAC,SAAS,CAAC;qBAC3C,EAAE,CAAC,gBAAgB,EAAE,UAAA,CAAC;oBACnB,eAAM,CAAC,IAAI,CAAC,CAAC,EAAO,EAAE,CAAC,KAAK,CAAC,CAAC;oBAC9B,QAAQ,CAAC,MAAM,EAAE,CAAC;gBACtB,CAAC,CAAC;qBACD,EAAE,CAAC,mBAAmB,EAAE,eAAM,CAAC,OAAO,CAAC,CAAC;YACjD,CAAC;YAED,EAAE,CAAC,CAAC,CAAC,SAAS,CAAC,MAAM,CAAC;gBAAC,MAAM,CAAC,IAAI,CAAC;YAGnC,IAAI;iBAEC,IAAI,CAAC,IAAI,CAAC,CAAC;QACpB,CAAC,CAAA;;IACL,CAAC;IArCD,sCAAO,GAAP,UAAQ,CAAQ;QACZ,IAAI,OAAO,GAAG,EAAE,IAAI,EAAE,kBAAS,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,EAAE,MAAM,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC;QAC5E,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,CAAC;IACtC,CAAC;IAGD,mCAAI,GAAJ;QAAA,iBAEC;QADG,EAAE,CAAC,KAAK,CAAC,cAAM,OAAA,iBAAM,IAAI,YAAE,EAAZ,CAAY,CAAC,CAAC;IACjC,CAAC;IAgCD,iCAAE,GAAF,UAAG,SAA6B,EAAE,QAAoB;QAClD,EAAE,CAAC,CAAC,OAAO,SAAS,KAAK,QAAQ,CAAC,CAAC,CAAC;YAChC,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,SAAS,EAAE,QAAQ,CAAC,CAAC;QACvC,CAAC;QAAC,IAAI,CAAC,CAAC;YACJ,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,kBAAS,CAAC,SAAS,CAAC,EAAE,QAAQ,CAAC,CAAC;QAClD,CAAC;QACD,MAAM,CAAC,IAAI,CAAC;IAChB,CAAC;IACL,2BAAC;AAAD,CAAC,AAnDD,CAA0C,eAAM,GAmD/C;AAnDY,oDAAoB;AAiEjC;IACI,MAAM,CAAC,IAAI,oBAAoB,EAAE,CAAC;AACtC,CAAC;AAFD,8BAEC","sourcesContent":["////<reference path=\"../extern/d3v3.d.ts\"/>\r\n////commented out the reference, because the path ended up in the typings, which\r\n////makes it impossible import in other projects.\r\ndeclare const d3;\r\n\r\n\r\nimport {Layout, EventType, Event} from './layout';\r\nimport {ID3StyleLayoutAdaptor} from './d3adaptor'\r\n\r\n    export class D3StyleLayoutAdaptor extends Layout implements ID3StyleLayoutAdaptor {\r\n        event = d3.dispatch(EventType[EventType.start], EventType[EventType.tick], EventType[EventType.end]);\r\n\r\n        trigger(e: Event) {\r\n            var d3event = { type: EventType[e.type], alpha: e.alpha, stress: e.stress };\r\n            this.event[d3event.type](d3event); // via d3 dispatcher, e.g. event.start(e);\r\n        }\r\n\r\n        // iterate layout using a d3.timer, which queues calls to tick repeatedly until tick returns true\r\n        kick() {\r\n            d3.timer(() => super.tick());\r\n        }\r\n\r\n        // a function to allow for dragging of nodes\r\n        drag: () => any;\r\n\r\n        constructor() {\r\n            super();\r\n            // bit of trickyness remapping 'this' so we can reference it in the function body.\r\n            var d3layout = this;\r\n            var drag;\r\n            this.drag = function () {\r\n                if (!drag) {\r\n                    var drag = d3.behavior.drag()\r\n                        .origin(Layout.dragOrigin)\r\n                        .on(\"dragstart.d3adaptor\", Layout.dragStart)\r\n                        .on(\"drag.d3adaptor\", d => {\r\n                            Layout.drag(d, <any>d3.event);\r\n                            d3layout.resume(); // restart annealing\r\n                        })\r\n                        .on(\"dragend.d3adaptor\", Layout.dragEnd);\r\n                }\r\n\r\n                if (!arguments.length) return drag;\r\n\r\n                // this is the context of the function, i.e. the d3 selection\r\n                this//.on(\"mouseover.adaptor\", colaMouseover)\r\n                //.on(\"mouseout.adaptor\", colaMouseout)\r\n                    .call(drag);\r\n            }\r\n        }\r\n\r\n        // a function for binding to events on the adapter\r\n        on(eventType: EventType | string, listener: () => void): this {\r\n            if (typeof eventType === 'string') {\r\n                this.event.on(eventType, listener);\r\n            } else {\r\n                this.event.on(EventType[eventType], listener);\r\n            }\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * provides an interface for use with d3:\r\n     * - uses the d3 event system to dispatch layout events such as:\r\n     *   o \"start\" (start layout process)\r\n     *   o \"tick\" (after each layout iteration)\r\n     *   o \"end\" (layout converged and complete).\r\n     * - uses the d3 timer to queue layout iterations.\r\n     * - sets up d3.behavior.drag to drag nodes\r\n     *   o use `node.call(<the returned instance of Layout>.drag)` to make nodes draggable\r\n     * returns an instance of the cola.Layout itself with which the user\r\n     * can interact directly.\r\n     */\r\n    export function d3adaptor(): D3StyleLayoutAdaptor {\r\n        return new D3StyleLayoutAdaptor();\r\n    }\r\n"]}},"hash":"46394bd800169ea266a4a18a949d952d","cacheData":{"env":{}}}