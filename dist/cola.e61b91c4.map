{"version":3,"sources":["../../WebCola/src/powergraph.ts","../../WebCola/src/linklengths.ts","../../WebCola/src/descent.ts","../../WebCola/src/vpsc.ts","../../WebCola/src/rbtree.ts","../../WebCola/src/rectangle.ts","../../WebCola/src/pqueue.ts","../../WebCola/src/shortestpaths.ts","../../WebCola/src/geom.ts","../../WebCola/src/handledisconnected.ts","../../WebCola/src/layout.ts","../../WebCola/src/adaptor.ts","../../WebCola/src/d3v3adaptor.ts","../../WebCola/src/d3v4adaptor.ts","../../WebCola/src/d3adaptor.ts","../../WebCola/src/gridrouter.ts","../../WebCola/src/layout3d.ts","../../WebCola/src/batch.ts","../WebCola/index.ts","node_modules/cytoscape-cola/cytoscape-cola.js","js/cola.js"],"names":["cola","require","packingOptions","PADDING","GOLDEN_SECTION","Math","sqrt","FLOAT_EPSILON","MAX_INERATIONS","applyPacking","graphs","w","h","node_size","desired_ratio","init_x","init_y","svg_width","svg_height","real_width","real_height","min_width","global_bottom","line","length","calculate_bb","apply","put_nodes_to_right_positions","forEach","g","calculate_single_bb","graph","min_x","Number","MAX_VALUE","min_y","max_x","max_y","array","v","width","height","max","x","min","y","center","node","corner","offset","data","curr_best_f","POSITIVE_INFINITY","curr_best","sort","a","b","reduce","left","x1","right","x2","get_entire_width","iterationCounter","f_x1","f_x2","flag","dx","df","step","abs","max_width","i","o","put_rect","get_real_ratio","rect","parent","undefined","space_left","push","bottom","d","separateGraphs","nodes","links","marks","ways","clusters","link","n1","source","n2","target","index","explore_node","n","is_new","adjacent","j","vpsc","PositionStats","scale","AB","AD","A2","prototype","addVariable","ai","bi","wi","weight","desiredPosition","getPosn","Constraint","gap","equality","active","unsatisfiable","slack","position","Variable","dfdv","block","ps","posn","visitNeighbours","prev","f","ff","c","next","cOut","cIn","Block","vars","updateWeightedPosition","compute_lm","u","postAction","_this","_dfdv","lm","populateSplitBlock","traverse","visit","acc","findMinLM","m","findMinLMBetween","lv","rv","findPath","to","endFound","isActiveDirectedPathBetween","split","createSplitBlock","startVar","splitBetween","vl","vr","bs","constraint","lb","rb","mergeAcross","dist","cost","sum","Blocks","vs","list","Array","blockInd","insert","remove","last","swapBlock","merge","l","r","updateBlockPositions","inactive","Solver","LAGRANGIAN_TOLERANCE","nb","cs","map","setStartingPositions","setDesiredPositions","mostViolated","minSlack","deletePoint","ZERO_UPPERBOUND","satisfy","solve","lastcost","removeOverlapInOneDimension","spans","lowerBound","upperBound","s","desiredCenter","size","leftMost","rightMost","leftMostSize","rightMostSize","vLower","vUpper","solver","newCenters","slice","__extends","p","hasOwnProperty","__","constructor","Object","create","TreeBase","findIter","res","_root","iter","iterator","_comparator","_cursor","_ancestors","get_child","clear","find","_bound","cmp","reverse_cmp","Iterator","each","cb","it","reach","cur","tree","_tree","root","_minNode","save","pop","_maxNode","start","Node","red","dir","set_child","val","RBTree","_super","comparator","call","ret","head","gp","ggp","is_red","dir2","single_rotate","double_rotate","found","sr","sibling","gpc","computeGroupBounds","bounds","leaves","union","Rectangle","empty","groups","inflate","padding","X","Y","NEGATIVE_INFINITY","cx","cy","overlapX","ux","vx","overlapY","uy","vy","setXCentre","setYCentre","dy","lineIntersections","y1","y2","sides","intersections","lineIntersection","rayIntersection","ints","vertices","x3","y3","x4","y4","dx12","dx34","dy12","dy34","denominator","dx31","dy31","numa","numb","pad","makeEdgeBetween","ah","si","ti","al","sourceIntersection","targetIntersection","arrowStart","makeEdgeTo","pos","makeRBTree","Event","isOpen","compareEvents","xRect","getCentre","getOpen","getClose","getSize","makeRect","open","close","findNeighbours","findXNeighbours","yRect","findYNeighbours","generateGroupConstraints","minSep","isContained","gn","ln","childConstraints","ccs","concat","rs","add","minVar","maxVar","variable","generateConstraints","gapAdjustment","N","console","assert","events","scanline","e","makeConstraint","sep","forward","reverse","mkcon","uovervX","generateXConstraints","generateYConstraints","generateXGroupConstraints","generateYGroupConstraints","removeOverlaps","IndexedVariable","Projection","rootGroup","constraints","avoidOverlaps","variables","createConstraints","w2","h2","stiffness","createSeparation","makeFeasible","axis","dim","offsets","createAlignment","xConstraints","yConstraints","isSep","type","filter","setupVariablesAndBounds","x0","y0","desired","getDesired","fixed","fixedWeight","ix","iy","xProject","project","px","xmin","xmax","p2","yProject","py","ymin","ymax","projectFunctions","updateNodeBounds","updateGroupBounds","starting","geom","Point","LineSegment","PolyPoint","arguments","isLeft","P0","P1","P2","above","vi","vj","below","ConvexHull","S","P","minmin","minmax","H","maxmin","maxmax","bot","clockwiseRadialSweep","atan2","nextPolyPoint","polyIndex","prevPolyPoint","tangent_PointPolyC","V","rtan","Rtangent_PointPolyC","ltan","Ltangent_PointPolyC","upA","dnC","floor","dnA","tangent_PolyPolyC","W","t1","t2","cmp1","cmp2","ix1","ix2","done","LRtangent_PolyPolyC","rl","RLtangent_PolyPolyC","LLtangent_PolyPolyC","RRtangent_PolyPolyC","BiTangent","BiTangents","TVGPoint","VisibilityVertex","id","polyid","polyvertid","vv","VisibilityEdge","TangentVisibilityGraph","g0","E","pj","Pi","Pj","t","tangents","q","addEdgeIfVisible","i1","i2","intersectsPolys","addPoint","poly","intersects","int","bt","v1","v2","v3","w1","w3","v1v2w2","v2w1w2","v2w2w3","w1w2v2","w2v1v2","w2v2v3","ll","rr","lr","isPointInsidePoly","isAnyPInQ","every","polysOverlap","Locks","locks","isEmpty","Descent","D","G","threshold","numGridSnapNodes","snapGridSize","snapStrength","scaleSnapByMaxH","random","PseudoRandom","k","Hd","ia","ib","xtmp","minD","createSquareMatrix","M","offsetDir","getNextBetween","computeDerivatives","d2","Huu","maxH","maxDisplaces","sd2","rd","isFinite","D2","gs","l3","hs","log","numNodes","xiu","dotProd","rightMultiply","computeStepSize","numerator","reduceStress","alpha","takeDescentStep","computeStress","copy","stepAndProject","stepSize","mApply","matrixApply","computeNextPosition","beta","run","iterations","stress","converged","rungeKutta","mid","disp","nMinus1","zeroDistance","seed","range","getNext","powergraph","PowerEdge","Configuration","edges","linkAccessor","modules","roots","initModulesFromGroup","ModuleSet","Module","R","getSourceIndex","getTargetIndex","getType","outgoing","incoming","group","moduleSet","module","child","definition","prop","LinkSets","inInt","intersection","outInt","children","update","forAll","ms","linktype","nls","count","rootMerges","merges","ctr","i_","nEdges","greedyMerge","getGroupHierarchy","retargetedEdges","toGroups","es","allEdges","gid","getEdges","isLeaf","isIsland","isPredefined","edgetype","table","keys","other","result","intersectionCount","contains","sets","forAllModules","lt","getGroups","la","powerEdges","end","unionCount","getNeighbours","neighbours","addNeighbours","computeLinkLengths","setLength","symmetricDiffLinkLengths","jaccardLinkLengths","generateDirectedEdgeConstraints","components","stronglyConnectedComponents","ui","getMinSeparation","numVertices","stack","strongConnect","lowlink","onStack","_i","_a","out","component","v_1","PairingHeap","elem","subheaps","toString","selector","str","needComma","subheap","isHeap","lessThan","obj","heap2","removeMin","mergePairs","firstPair","remaining","decreaseKey","newValue","setHeapNode","newHeap","pairingNode","PriorityQueue","top","args","arg","reduceKey","heapNode","newKey","shortestpaths","Neighbour","distance","QueueEntry","Calculator","getLength","DistanceMatrix","dijkstraNeighbours","DistancesFromNode","PathFromNodeToNode","PathFromNodeToNodeWithPrevCost","prevCost","qu","visitedFrom","neighbour","viduid","cc","path","dest","EventType","isGroup","Layout","_canvasSize","_linkDistance","_defaultNodeSize","_linkLengthCalculator","_linkType","_avoidOverlaps","_handleDisconnected","_running","_nodes","_groups","_rootGroup","_links","_constraints","_distanceMatrix","_descent","_directedLinkConstraints","_threshold","_visibilityGraph","_groupCompactness","event","setLinkLength","on","listener","trigger","kick","tick","_alpha","_lastStress","s1","updateNodePositions","gi","powerGraphGroups","handleDisconnected","flowLayout","minSeparation","distanceMatrix","defaultNodeSize","groupCompactness","linkDistance","linkType","convergenceThreshold","getLinkLength","getLinkType","idealLength","initialUnconstrainedIterations","initialUserConstraintIterations","initialAllConstraintsIterations","gridSnapIterations","keepRunning","ao","distances","addAttraction","strength","idealDistance","curConstraints","initialLayout","separateOverlappingComponents","G0","resume","gg","stop","prepareEdgeRouting","nodeMargin","routeEdge","edge","draw","lineData","vg2","port1","port2","sourceInd","targetInd","spCalc","shortestPath","route","innerBounds","linkId","dragStart","storeOffset","dragOrigin","stopNode","origin","_dragGroupOffsetX","_dragGroupOffsetY","drag","dragEnd","mouseOver","mouseOut","LayoutAdaptor","options","self","dragstart","dragend","eventType","adaptor","gridify","pgLayout","nudgeGap","margin","groupMargin","gridrouter","routeEdges","powerGraph","routerNode","name","gridRouterNodes","GridRouter","getChildren","getBounds","powerGraphGridLayout","grouppadding","D3StyleLayoutAdaptor","d3","dispatch","d3layout","behavior","d3event","timer","d3adaptor","NodeWrapper","leaf","Vert","LongestCommonSubsequence","mf","findMatch","tr","mr","reversed","match","getSequence","originalnodes","accessor","groupPadding","cols","getGridLines","rows","ports","backToFront","getDepth","frontToBackGroups","colMids","midPoints","rowMids","rowx","rowX","coly","colY","hlines","vlines","lines","verts","li","intersect","isHoriz","delta","avg","columns","ls","overlapping","toUpperCase","col","splice","indexOf","depth","mids","findLineage","lineage","findAncestorPathBetween","aa","ba","commonAncestor","lineages","siblingObstacles","lineageLookup","obstacles","getSegmentSets","routes","vsegments","ei","edgeid","sdx","vsegmentsets","segmentset","segments","nudgeSegs","leftOf","s2","e1","e2","lind","rind","nudgeSegments","ss","openCount","routePaths","order","orderEdges","makeSegments","unreverseEdges","segment","angleBetween2Lines","line1","line2","angle1","angle2","diff","PI","getOrder","pairs","edgeOrder","lcs","copyPoint","isStraight","obstacleLookup","passableEdges","getSource","getTarget","shortestPathCalculator","bendPenalty","pathPoints","getRoutePath","cornerradius","arrowwidth","arrowheight","routepath","arrowpath","angle","arrowtip","arrowcorner1","arrowcorner2","Link3D","actualLength","Node3D","z","Layout3D","idealLinkLength","useJaccardLinkLengths","dims","linkLength","LinkAccessor","descent","exports"],"mappings":"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","file":"cola.e61b91c4.map","sourceRoot":"..","sourcesContent":["import {LinkAccessor} from './linklengths'\r\n\r\nexport interface LinkTypeAccessor<Link> extends LinkAccessor<Link> {\r\n        // return a unique identifier for the type of the link\r\n        getType(l: Link): number;\r\n    }\r\n\r\n    export class PowerEdge {\r\n        constructor(\r\n            public source: any,\r\n            public target: any,\r\n            public type: number) { }\r\n    }\r\n\r\n    export class Configuration<Link> {\r\n        // canonical list of modules.\r\n        // Initialized to a module for each leaf node, such that the ids and indexes of the module in the array match the indexes of the nodes in links\r\n        // Modules created through merges are appended to the end of this.\r\n        modules: Module[];\r\n        // top level modules and candidates for merges\r\n        roots: ModuleSet[];\r\n        // remaining edge count\r\n        R: number;\r\n        constructor(n: number, edges: Link[], private linkAccessor: LinkTypeAccessor<Link>, rootGroup?: any[]) {\r\n            this.modules = new Array(n);\r\n            this.roots = [];\r\n            if (rootGroup) {\r\n                this.initModulesFromGroup(rootGroup);\r\n            } else {\r\n                this.roots.push(new ModuleSet());\r\n                for (var i = 0; i < n; ++i)\r\n                    this.roots[0].add(this.modules[i] = new Module(i));\r\n            }\r\n            this.R = edges.length;\r\n            edges.forEach(e => {\r\n                var s = this.modules[linkAccessor.getSourceIndex(e)],\r\n                    t = this.modules[linkAccessor.getTargetIndex(e)],\r\n                    type = linkAccessor.getType(e);\r\n                s.outgoing.add(type, t);\r\n                t.incoming.add(type, s);\r\n            });\r\n        }\r\n\r\n        private initModulesFromGroup(group): ModuleSet {\r\n            var moduleSet = new ModuleSet();\r\n            this.roots.push(moduleSet);\r\n            for (var i = 0; i < group.leaves.length; ++i) {\r\n                var node = group.leaves[i];\r\n                var module = new Module(node.id);\r\n                this.modules[node.id] = module;\r\n                moduleSet.add(module);\r\n            }\r\n            if (group.groups) {\r\n                for (var j = 0; j < group.groups.length; ++j) {\r\n                    var child = group.groups[j];\r\n                    // Propagate group properties (like padding, stiffness, ...) as module definition so that the generated power graph group will inherit it\r\n                    var definition = {};\r\n                    for (var prop in child)\r\n                        if (prop !== \"leaves\" && prop !== \"groups\" && child.hasOwnProperty(prop))\r\n                            definition[prop] = child[prop];\r\n                    // Use negative module id to avoid clashes between predefined and generated modules\r\n                    moduleSet.add(new Module(-1-j, new LinkSets(), new LinkSets(), this.initModulesFromGroup(child), definition));\r\n                }\r\n            }\r\n            return moduleSet;\r\n         }\r\n\r\n        // merge modules a and b keeping track of their power edges and removing the from roots\r\n        merge(a: Module, b: Module, k: number = 0): Module {\r\n            var inInt = a.incoming.intersection(b.incoming),\r\n                outInt = a.outgoing.intersection(b.outgoing);\r\n            var children = new ModuleSet();\r\n            children.add(a);\r\n            children.add(b);\r\n            var m = new Module(this.modules.length, outInt, inInt, children);\r\n            this.modules.push(m);\r\n            var update = (s: LinkSets, i: string, o: string) => {\r\n                s.forAll((ms, linktype) => {\r\n                    ms.forAll(n => {\r\n                        var nls = <LinkSets>n[i];\r\n                        nls.add(linktype, m);\r\n                        nls.remove(linktype, a);\r\n                        nls.remove(linktype, b);\r\n                        (<LinkSets>a[o]).remove(linktype, n);\r\n                        (<LinkSets>b[o]).remove(linktype, n);\r\n                    });\r\n                });\r\n            };\r\n            update(outInt, \"incoming\", \"outgoing\");\r\n            update(inInt, \"outgoing\", \"incoming\");\r\n            this.R -= inInt.count() + outInt.count();\r\n            this.roots[k].remove(a);\r\n            this.roots[k].remove(b);\r\n            this.roots[k].add(m);\r\n            return m;\r\n        }\r\n\r\n        private rootMerges(k: number = 0): {\r\n            id: number;\r\n            nEdges: number;\r\n            a: Module;\r\n            b: Module;\r\n        }[] {\r\n            var rs = this.roots[k].modules();\r\n            var n = rs.length;\r\n            var merges = new Array(n * (n - 1));\r\n            var ctr = 0;\r\n            for (var i = 0, i_ = n - 1; i < i_; ++i) {\r\n                for (var j = i+1; j < n; ++j) {\r\n                    var a = rs[i], b = rs[j];\r\n                    merges[ctr] = { id: ctr, nEdges: this.nEdges(a, b), a: a, b: b };\r\n                    ctr++;\r\n                }\r\n            }\r\n            return merges;\r\n        }\r\n\r\n        greedyMerge(): boolean {\r\n            for (var i = 0; i < this.roots.length; ++i) {\r\n                // Handle single nested module case\r\n                if (this.roots[i].modules().length < 2) continue;\r\n\r\n                // find the merge that allows for the most edges to be removed.  secondary ordering based on arbitrary id (for predictability)\r\n                var ms = this.rootMerges(i).sort((a, b) => a.nEdges == b.nEdges ? a.id - b.id : a.nEdges - b.nEdges);\r\n                var m = ms[0];\r\n                if (m.nEdges >= this.R) continue;\r\n                this.merge(m.a, m.b, i);\r\n                return true;\r\n            }\r\n        }\r\n\r\n        private nEdges(a: Module, b: Module): number {\r\n            var inInt = a.incoming.intersection(b.incoming),\r\n                outInt = a.outgoing.intersection(b.outgoing);\r\n            return this.R - inInt.count() - outInt.count();\r\n        }\r\n\r\n        getGroupHierarchy(retargetedEdges: PowerEdge[]): any[]{\r\n            var groups = [];\r\n            var root = {};\r\n            toGroups(this.roots[0], root, groups);\r\n            var es = this.allEdges();\r\n            es.forEach(e => {\r\n                var a = this.modules[e.source];\r\n                var b = this.modules[e.target];\r\n                retargetedEdges.push(new PowerEdge(\r\n                    typeof a.gid === \"undefined\" ? e.source : groups[a.gid],\r\n                    typeof b.gid === \"undefined\" ? e.target : groups[b.gid],\r\n                    e.type\r\n                ));\r\n            });\r\n            return groups;\r\n        }\r\n\r\n        allEdges(): PowerEdge[] {\r\n            var es = [];\r\n            Configuration.getEdges(this.roots[0], es);\r\n            return es;\r\n        }\r\n\r\n        static getEdges(modules: ModuleSet, es: PowerEdge[]) {\r\n            modules.forAll(m => {\r\n                m.getEdges(es);\r\n                Configuration.getEdges(m.children, es);\r\n            });\r\n        }\r\n    }\r\n\r\n    function toGroups(modules: ModuleSet, group, groups) {\r\n        modules.forAll(m => {\r\n            if (m.isLeaf()) {\r\n                if (!group.leaves) group.leaves = [];\r\n                group.leaves.push(m.id);\r\n            } else {\r\n                var g = group;\r\n                m.gid = groups.length;\r\n                if (!m.isIsland() || m.isPredefined()) {\r\n                    g = { id: m.gid };\r\n                    if (m.isPredefined())\r\n                        // Apply original group properties\r\n                        for (var prop in m.definition)\r\n                            g[prop] = m.definition[prop];\r\n                    if (!group.groups) group.groups = [];\r\n                    group.groups.push(m.gid);\r\n                    groups.push(g);\r\n                }\r\n                toGroups(m.children, g, groups);\r\n            }\r\n        });\r\n    }\r\n\r\n    export class Module {\r\n        gid: number;\r\n\r\n        constructor(\r\n            public id: number,\r\n            public outgoing: LinkSets = new LinkSets(),\r\n            public incoming: LinkSets = new LinkSets(),\r\n            public children: ModuleSet = new ModuleSet(),\r\n            public definition?: any) { }\r\n\r\n        getEdges(es: PowerEdge[]) {\r\n            this.outgoing.forAll((ms, edgetype) => {\r\n                ms.forAll(target => {\r\n                    es.push(new PowerEdge(this.id, target.id, edgetype));\r\n                });\r\n            });\r\n        }\r\n\r\n        isLeaf() {\r\n            return this.children.count() === 0;\r\n        }\r\n\r\n        isIsland() {\r\n            return this.outgoing.count() === 0 && this.incoming.count() === 0;\r\n        }\r\n\r\n        isPredefined(): boolean {\r\n            return typeof this.definition !== \"undefined\";\r\n        }\r\n    }\r\n\r\n    function intersection(m: any, n: any): any {\r\n        var i = {};\r\n        for (var v in m) if (v in n) i[v] = m[v];\r\n        return i;\r\n    }\r\n\r\n    export class ModuleSet {\r\n        table: any = {};\r\n        count() {\r\n            return Object.keys(this.table).length;\r\n        }\r\n        intersection(other: ModuleSet): ModuleSet {\r\n            var result = new ModuleSet();\r\n            result.table = intersection(this.table, other.table);\r\n            return result;\r\n        }\r\n        intersectionCount(other: ModuleSet): number {\r\n            return this.intersection(other).count();\r\n        }\r\n        contains(id: number): boolean {\r\n            return id in this.table;\r\n        }\r\n        add(m: Module): void {\r\n            this.table[m.id] = m;\r\n        }\r\n        remove(m: Module): void {\r\n            delete this.table[m.id];\r\n        }\r\n        forAll(f: (m: Module) => void) {\r\n            for (var mid in this.table) {\r\n                f(this.table[mid]);\r\n            }\r\n        }\r\n        modules(): Module[] {\r\n            var vs = [];\r\n            this.forAll(m => {\r\n                if (!m.isPredefined())\r\n                    vs.push(m);\r\n            });\r\n            return vs;\r\n        }\r\n    }\r\n\r\n    export class LinkSets {\r\n        sets: any = {};\r\n        n: number = 0;\r\n        count(): number {\r\n            return this.n;\r\n        }\r\n        contains(id: number) {\r\n            var result = false;\r\n            this.forAllModules(m => {\r\n                if (!result && m.id == id) {\r\n                    result = true;\r\n                }\r\n            });\r\n            return result;\r\n        }\r\n        add(linktype: number, m: Module) {\r\n            var s: ModuleSet = linktype in this.sets ? this.sets[linktype] : this.sets[linktype] = new ModuleSet();\r\n            s.add(m);\r\n            ++this.n;\r\n        }\r\n        remove(linktype: number, m: Module) {\r\n            var ms = <ModuleSet>this.sets[linktype];\r\n            ms.remove(m);\r\n            if (ms.count() === 0) {\r\n                delete this.sets[linktype];\r\n            }\r\n            --this.n;\r\n        }\r\n        forAll(f: (ms: ModuleSet, linktype: number) => void) {\r\n            for (var linktype in this.sets) {\r\n                f(<ModuleSet>this.sets[linktype], Number(linktype));\r\n            }\r\n        }\r\n        forAllModules(f: (m: Module) => void) {\r\n            this.forAll((ms, lt) => ms.forAll(f));\r\n        }\r\n        intersection(other: LinkSets): LinkSets {\r\n            var result: LinkSets = new LinkSets();\r\n            this.forAll((ms, lt) => {\r\n                if (lt in other.sets) {\r\n                    var i = ms.intersection(other.sets[lt]),\r\n                        n = i.count();\r\n                    if (n > 0) {\r\n                        result.sets[lt] = i;\r\n                        result.n += n;\r\n                    }\r\n                }\r\n            });\r\n            return result;\r\n        }\r\n    }\r\n\r\n    function intersectionCount(m: any, n: any): number {\r\n        return Object.keys(intersection(m, n)).length\r\n    }\r\n\r\n    export function getGroups<Link>(nodes: any[], links: Link[], la: LinkTypeAccessor<Link>, rootGroup?: any[]): { groups: any[]; powerEdges: PowerEdge[] } {\r\n        var n = nodes.length,\r\n            c = new Configuration(n, links, la, rootGroup);\r\n        while (c.greedyMerge());\r\n        var powerEdges: PowerEdge[] = [];\r\n        var g = c.getGroupHierarchy(powerEdges);\r\n        powerEdges.forEach(function (e) {\r\n            var f = (end) => {\r\n                var g = e[end];\r\n                if (typeof g == \"number\") e[end] = nodes[g];\r\n            };\r\n            f(\"source\");\r\n            f(\"target\");\r\n        });\r\n        return { groups: g, powerEdges: powerEdges };\r\n    }\r\n","    export interface LinkAccessor<Link> {\r\n        getSourceIndex(l: Link): number;\r\n        getTargetIndex(l: Link): number;\r\n    }\r\n\r\n    export interface LinkLengthAccessor<Link> extends LinkAccessor<Link> {\r\n        setLength(l: Link, value: number): void;\r\n    }\r\n\r\n    // compute the size of the union of two sets a and b\r\n    function unionCount(a: any, b: any): number {\r\n        var u = {};\r\n        for (var i in a) u[i] = {};\r\n        for (var i in b) u[i] = {};\r\n        return Object.keys(u).length;\r\n    }\r\n\r\n    // compute the size of the intersection of two sets a and b\r\n    function intersectionCount(a: number[], b: number[]): number {\r\n        var n = 0;\r\n        for (var i in a) if (typeof b[i] !== 'undefined') ++n;\r\n        return n;\r\n    }\r\n\r\n    function getNeighbours<Link>(links: Link[], la: LinkAccessor<Link>): any {\r\n        var neighbours = {};\r\n        var addNeighbours = (u, v) => {\r\n            if (typeof neighbours[u] === 'undefined')\r\n                neighbours[u] = {};\r\n            neighbours[u][v] = {};\r\n        };\r\n        links.forEach(e => {\r\n            var u = la.getSourceIndex(e), v = la.getTargetIndex(e);\r\n            addNeighbours(u, v);\r\n            addNeighbours(v, u);\r\n        });\r\n        return neighbours;\r\n    }\r\n\r\n    // modify the lengths of the specified links by the result of function f weighted by w\r\n    function computeLinkLengths<Link>(links: Link[], w: number, f: (a: any, b: any) => number, la: LinkLengthAccessor<Link>) {\r\n        var neighbours = getNeighbours(links, la);\r\n        links.forEach(l => {\r\n            var a = neighbours[la.getSourceIndex(l)];\r\n            var b = neighbours[la.getTargetIndex(l)];\r\n            la.setLength(l, 1 + w * f(a, b));\r\n        });\r\n    }\r\n\r\n    /** modify the specified link lengths based on the symmetric difference of their neighbours\r\n     * @class symmetricDiffLinkLengths\r\n     */\r\n    export function symmetricDiffLinkLengths<Link>(links: Link[], la: LinkLengthAccessor<Link>, w: number = 1) {\r\n        computeLinkLengths(links, w, (a, b) => Math.sqrt(unionCount(a, b) - intersectionCount(a, b)), la);\r\n    }\r\n\r\n    /** modify the specified links lengths based on the jaccard difference between their neighbours\r\n     * @class jaccardLinkLengths\r\n     */\r\n    export function jaccardLinkLengths<Link>(links: Link[], la: LinkLengthAccessor<Link>, w: number = 1) {\r\n        computeLinkLengths(links, w, (a, b) =>\r\n            Math.min(Object.keys(a).length, Object.keys(b).length) < 1.1 ? 0 : intersectionCount(a, b) / unionCount(a, b)\r\n            , la);\r\n    }\r\n\r\n    export interface IConstraint {\r\n        left: number;\r\n        right: number;\r\n        gap: number;\r\n    }\r\n\r\n    export interface DirectedEdgeConstraints {\r\n        axis: string;\r\n        gap: number;\r\n    }\r\n\r\n    export interface LinkSepAccessor<Link> extends LinkAccessor<Link> {\r\n        getMinSeparation(l: Link): number;\r\n    }\r\n\r\n    /** generate separation constraints for all edges unless both their source and sink are in the same strongly connected component\r\n     * @class generateDirectedEdgeConstraints\r\n     */\r\n    export function generateDirectedEdgeConstraints<Link>(n: number, links: Link[], axis: string,\r\n        la: LinkSepAccessor<Link>): IConstraint[]\r\n    {\r\n        var components = stronglyConnectedComponents(n, links, la);\r\n        var nodes = {};\r\n        components.forEach((c,i) =>\r\n            c.forEach(v => nodes[v] = i)\r\n        );\r\n        var constraints: any[] = [];\r\n        links.forEach(l => {\r\n            var ui = la.getSourceIndex(l), vi = la.getTargetIndex(l),\r\n                u = nodes[ui], v = nodes[vi];\r\n            if (u !== v) {\r\n                constraints.push({\r\n                    axis: axis,\r\n                    left: ui,\r\n                    right: vi,\r\n                    gap: la.getMinSeparation(l)\r\n                });\r\n            }\r\n        });\r\n        return constraints;\r\n    }\r\n\r\n    /**\r\n     * Tarjan's strongly connected components algorithm for directed graphs\r\n     * returns an array of arrays of node indicies in each of the strongly connected components.\r\n     * a vertex not in a SCC of two or more nodes is it's own SCC.\r\n     * adaptation of https://en.wikipedia.org/wiki/Tarjan%27s_strongly_connected_components_algorithm\r\n     */\r\n    export function stronglyConnectedComponents<Link>(numVertices: number, edges: Link[], la: LinkAccessor<Link>): number[][]{\r\n        var nodes = [];\r\n        var index = 0;\r\n        var stack = [];\r\n        var components = [];\r\n        function strongConnect(v) {\r\n            // Set the depth index for v to the smallest unused index\r\n            v.index = v.lowlink = index++;\r\n            stack.push(v);\r\n            v.onStack = true;\r\n\r\n            // Consider successors of v\r\n            for (var w of v.out) {\r\n                if (typeof w.index === 'undefined') {\r\n                    // Successor w has not yet been visited; recurse on it\r\n                    strongConnect(w);\r\n                    v.lowlink = Math.min(v.lowlink, w.lowlink);\r\n                } else if (w.onStack) {\r\n                    // Successor w is in stack S and hence in the current SCC\r\n                    v.lowlink = Math.min(v.lowlink, w.index);\r\n                }\r\n            }\r\n\r\n            // If v is a root node, pop the stack and generate an SCC\r\n            if (v.lowlink === v.index) {\r\n                // start a new strongly connected component\r\n                var component = [];\r\n                while (stack.length) {\r\n                    w = stack.pop();\r\n                    w.onStack = false;\r\n                    //add w to current strongly connected component\r\n                    component.push(w);\r\n                    if (w === v) break;\r\n                }\r\n                // output the current strongly connected component\r\n                components.push(component.map(v => v.id));\r\n            }\r\n        }\r\n        for (var i = 0; i < numVertices; i++) {\r\n            nodes.push({id: i, out: []});\r\n        }\r\n        for (var e of edges) {\r\n            let v = nodes[la.getSourceIndex(e)],\r\n                w = nodes[la.getTargetIndex(e)];\r\n            v.out.push(w);\r\n        }\r\n        for (var v of nodes) if (typeof v.index === 'undefined') strongConnect(v);\r\n        return components;\r\n    }\r\n","    /**\r\n     * Descent respects a collection of locks over nodes that should not move\r\n     * @class Locks\r\n     */\r\n    export class Locks {\r\n        locks: { [key:number]:number[]} = {};\r\n        /**\r\n         * add a lock on the node at index id\r\n         * @method add\r\n         * @param id index of node to be locked\r\n         * @param x required position for node\r\n         */\r\n        add(id: number, x: number[]) {\r\n/* DEBUG\r\n            if (isNaN(x[0]) || isNaN(x[1])) debugger;\r\nDEBUG */\r\n            this.locks[id] = x;\r\n        }\r\n        /**\r\n         * @method clear clear all locks\r\n         */\r\n        clear() {\r\n            this.locks = {};\r\n        }\r\n        /**\r\n         * @isEmpty\r\n         * @returns false if no locks exist\r\n         */\r\n        isEmpty(): boolean {\r\n            for (var l in this.locks) return false;\r\n            return true;\r\n        }\r\n        /**\r\n         * perform an operation on each lock\r\n         * @apply\r\n         */\r\n        apply(f: (id: number, x: number[]) => void) {\r\n            for (var l in this.locks) {\r\n                f(Number(l), this.locks[l]);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Uses a gradient descent approach to reduce a stress or p-stress goal function over a graph with specified ideal edge lengths or a square matrix of dissimilarities.\r\n     * The standard stress function over a graph nodes with position vectors x,y,z is (mathematica input):\r\n     *   stress[x_,y_,z_,D_,w_]:=Sum[w[[i,j]] (length[x[[i]],y[[i]],z[[i]],x[[j]],y[[j]],z[[j]]]-d[[i,j]])^2,{i,Length[x]-1},{j,i+1,Length[x]}]\r\n     * where: D is a square matrix of ideal separations between nodes, w is matrix of weights for those separations\r\n     *        length[x1_, y1_, z1_, x2_, y2_, z2_] = Sqrt[(x1 - x2)^2 + (y1 - y2)^2 + (z1 - z2)^2]\r\n     * below, we use wij = 1/(Dij^2)\r\n     *\r\n     * @class Descent\r\n     */\r\n    export class Descent {\r\n        public threshold: number = 0.0001;\r\n        /** Hessian Matrix\r\n         * @property H {number[][][]}\r\n         */\r\n        public H: number[][][];\r\n        /** gradient vector\r\n         * @property G {number[][]}\r\n         */\r\n        public g: number[][];\r\n        /** positions vector\r\n         * @property x {number[][]}\r\n         */\r\n        public x: number[][];\r\n        /**\r\n         * @property k {number} dimensionality\r\n         */\r\n        public k: number;\r\n        /**\r\n         * number of data-points / nodes / size of vectors/matrices\r\n         * @property n {number}\r\n         */\r\n        public n: number;\r\n\r\n        public locks: Locks;\r\n\r\n        private static zeroDistance: number = 1e-10;\r\n        private minD: number;\r\n\r\n        // pool of arrays of size n used internally, allocated in constructor\r\n        private Hd: number[][];\r\n        private a: number[][];\r\n        private b: number[][];\r\n        private c: number[][];\r\n        private d: number[][];\r\n        private e: number[][];\r\n        private ia: number[][];\r\n        private ib: number[][];\r\n        private xtmp: number[][];\r\n\r\n\r\n        // Parameters for grid snap stress.\r\n        // TODO: Make a pluggable \"StressTerm\" class instead of this\r\n        // mess.\r\n        public numGridSnapNodes: number = 0;\r\n        public snapGridSize: number = 100;\r\n        public snapStrength: number = 1000;\r\n        public scaleSnapByMaxH: boolean = false;\r\n\r\n        private random = new PseudoRandom();\r\n\r\n        public project: { (x0: number[], y0: number[], r: number[]): void }[] = null;\r\n\r\n        /**\r\n         * @method constructor\r\n         * @param x {number[][]} initial coordinates for nodes\r\n         * @param D {number[][]} matrix of desired distances between pairs of nodes\r\n         * @param G {number[][]} [default=null] if specified, G is a matrix of weights for goal terms between pairs of nodes.\r\n         * If G[i][j] > 1 and the separation between nodes i and j is greater than their ideal distance, then there is no contribution for this pair to the goal\r\n         * If G[i][j] <= 1 then it is used as a weighting on the contribution of the variance between ideal and actual separation between i and j to the goal function\r\n         */\r\n        constructor(x: number[][], public D: number[][], public G: number[][]= null) {\r\n            this.x = x;\r\n            this.k = x.length; // dimensionality\r\n            var n = this.n = x[0].length; // number of nodes\r\n            this.H = new Array(this.k);\r\n            this.g = new Array(this.k);\r\n            this.Hd = new Array(this.k);\r\n            this.a = new Array(this.k);\r\n            this.b = new Array(this.k);\r\n            this.c = new Array(this.k);\r\n            this.d = new Array(this.k);\r\n            this.e = new Array(this.k);\r\n            this.ia = new Array(this.k);\r\n            this.ib = new Array(this.k);\r\n            this.xtmp = new Array(this.k);\r\n            this.locks = new Locks();\r\n            this.minD = Number.MAX_VALUE;\r\n            var i = n, j;\r\n            while (i--) {\r\n                j = n;\r\n                while (--j > i) {\r\n                    var d = D[i][j];\r\n                    if (d > 0 && d < this.minD) {\r\n                        this.minD = d;\r\n                    }\r\n                }\r\n            }\r\n            if (this.minD === Number.MAX_VALUE) this.minD = 1;\r\n            i = this.k;\r\n            while (i--) {\r\n                this.g[i] = new Array(n);\r\n                this.H[i] = new Array(n);\r\n                j = n;\r\n                while (j--) {\r\n                    this.H[i][j] = new Array(n);\r\n                }\r\n                this.Hd[i] = new Array(n);\r\n                this.a[i] = new Array(n);\r\n                this.b[i] = new Array(n);\r\n                this.c[i] = new Array(n);\r\n                this.d[i] = new Array(n);\r\n                this.e[i] = new Array(n);\r\n                this.ia[i] = new Array(n);\r\n                this.ib[i] = new Array(n);\r\n                this.xtmp[i] = new Array(n);\r\n            }\r\n        }\r\n\r\n        public static createSquareMatrix(n: number, f: (i: number, j: number) => number): number[][] {\r\n            var M = new Array(n);\r\n            for (var i = 0; i < n; ++i) {\r\n                M[i] = new Array(n);\r\n                for (var j = 0; j < n; ++j) {\r\n                    M[i][j] = f(i, j);\r\n                }\r\n            }\r\n            return M;\r\n        }\r\n\r\n        private offsetDir(): number[] {\r\n            var u = new Array(this.k);\r\n            var l = 0;\r\n            for (var i = 0; i < this.k; ++i) {\r\n                var x = u[i] = this.random.getNextBetween(0.01, 1) - 0.5;\r\n                l += x * x;\r\n            }\r\n            l = Math.sqrt(l);\r\n            return u.map(x=> x *= this.minD / l);\r\n        }\r\n\r\n        // compute first and second derivative information storing results in this.g and this.H\r\n        public computeDerivatives(x: number[][]) {\r\n            var n: number = this.n;\r\n            if (n < 1) return;\r\n            var i: number;\r\n/* DEBUG\r\n            for (var u: number = 0; u < n; ++u)\r\n                for (i = 0; i < this.k; ++i)\r\n                    if (isNaN(x[i][u])) debugger;\r\nDEBUG */\r\n            var d: number[] = new Array(this.k);\r\n            var d2: number[] = new Array(this.k);\r\n            var Huu: number[] = new Array(this.k);\r\n            var maxH: number = 0;\r\n            for (var u: number = 0; u < n; ++u) {\r\n                for (i = 0; i < this.k; ++i) Huu[i] = this.g[i][u] = 0;\r\n                for (var v = 0; v < n; ++v) {\r\n                    if (u === v) continue;\r\n\r\n                    // The following loop randomly displaces nodes that are at identical positions\r\n                    var maxDisplaces = n; // avoid infinite loop in the case of numerical issues, such as huge values\r\n                    while (maxDisplaces--) {\r\n                        var sd2 = 0;\r\n                        for (i = 0; i < this.k; ++i) {\r\n                            var dx = d[i] = x[i][u] - x[i][v];\r\n                            sd2 += d2[i] = dx * dx;\r\n                        }\r\n                        if (sd2 > 1e-9) break;\r\n                        var rd = this.offsetDir();\r\n                        for (i = 0; i < this.k; ++i) x[i][v] += rd[i];\r\n                    }\r\n                    var l: number = Math.sqrt(sd2);\r\n                    var D: number = this.D[u][v];\r\n                    var weight = this.G != null ? this.G[u][v] : 1;\r\n                    if (weight > 1 && l > D || !isFinite(D)) {\r\n                        for (i = 0; i < this.k; ++i) this.H[i][u][v] = 0;\r\n                        continue;\r\n                    }\r\n                    if (weight > 1) {\r\n                        weight = 1;\r\n                    }\r\n                    var D2: number = D * D;\r\n                    var gs: number = 2 * weight * (l - D) / (D2 * l);\r\n                    var l3 = l * l * l;\r\n                    var hs: number = 2 * -weight / (D2 * l3);\r\n                    if (!isFinite(gs))\r\n                        console.log(gs);\r\n                    for (i = 0; i < this.k; ++i) {\r\n                        this.g[i][u] += d[i] * gs;\r\n                        Huu[i] -= this.H[i][u][v] = hs * (l3 + D * (d2[i] - sd2) + l * sd2);\r\n                    }\r\n                }\r\n                for (i = 0; i < this.k; ++i) maxH = Math.max(maxH, this.H[i][u][u] = Huu[i]);\r\n            }\r\n            // Grid snap forces\r\n            var r = this.snapGridSize/2;\r\n            var g = this.snapGridSize;\r\n            var w = this.snapStrength;\r\n            var k = w / (r * r);\r\n            var numNodes = this.numGridSnapNodes;\r\n            //var numNodes = n;\r\n            for (var u: number = 0; u < numNodes; ++u) {\r\n                for (i = 0; i < this.k; ++i) {\r\n                    var xiu = this.x[i][u];\r\n                    var m = xiu / g;\r\n                    var f = m % 1;\r\n                    var q = m - f;\r\n                    var a = Math.abs(f);\r\n                    var dx = (a <= 0.5) ? xiu - q * g :\r\n                        (xiu > 0) ? xiu - (q + 1) * g : xiu - (q - 1) * g;\r\n                    if (-r < dx && dx <= r) {\r\n                        if (this.scaleSnapByMaxH) {\r\n                            this.g[i][u] += maxH * k * dx;\r\n                            this.H[i][u][u] += maxH * k;\r\n                        } else {\r\n                            this.g[i][u] += k * dx;\r\n                            this.H[i][u][u] += k;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            if (!this.locks.isEmpty()) {\r\n                this.locks.apply((u, p) => {\r\n                    for (i = 0; i < this.k; ++i) {\r\n                        this.H[i][u][u] += maxH;\r\n                        this.g[i][u] -= maxH * (p[i] - x[i][u]);\r\n                    }\r\n                });\r\n            }\r\n/* DEBUG\r\n            for (var u: number = 0; u < n; ++u)\r\n                for (i = 0; i < this.k; ++i) {\r\n                    if (isNaN(this.g[i][u])) debugger;\r\n                    for (var v: number = 0; v < n; ++v)\r\n                        if (isNaN(this.H[i][u][v])) debugger;\r\n                }\r\nDEBUG */\r\n        }\r\n\r\n        private static dotProd(a: number[], b: number[]): number {\r\n            var x = 0, i = a.length;\r\n            while (i--) x += a[i] * b[i];\r\n            return x;\r\n        }\r\n\r\n        // result r = matrix m * vector v\r\n        private static rightMultiply(m: number[][], v: number[], r: number[]) {\r\n            var i = m.length;\r\n            while (i--) r[i] = Descent.dotProd(m[i], v);\r\n        }\r\n\r\n        // computes the optimal step size to take in direction d using the\r\n        // derivative information in this.g and this.H\r\n        // returns the scalar multiplier to apply to d to get the optimal step\r\n        public computeStepSize(d: number[][]): number {\r\n            var numerator = 0, denominator = 0;\r\n            for (var i = 0; i < this.k; ++i) {\r\n                numerator += Descent.dotProd(this.g[i], d[i]);\r\n                Descent.rightMultiply(this.H[i], d[i], this.Hd[i]);\r\n                denominator += Descent.dotProd(d[i], this.Hd[i]);\r\n            }\r\n            if (denominator === 0 || !isFinite(denominator)) return 0;\r\n            return 1 * numerator / denominator;\r\n        }\r\n\r\n        public reduceStress(): number {\r\n            this.computeDerivatives(this.x);\r\n            var alpha = this.computeStepSize(this.g);\r\n            for (var i = 0; i < this.k; ++i) {\r\n                this.takeDescentStep(this.x[i], this.g[i], alpha);\r\n            }\r\n            return this.computeStress();\r\n        }\r\n\r\n        private static copy(a: number[][], b: number[][]): void {\r\n            var m = a.length, n = b[0].length;\r\n            for (var i = 0; i < m; ++i) {\r\n                for (var j = 0; j < n; ++j) {\r\n                    b[i][j] = a[i][j];\r\n                }\r\n            }\r\n        }\r\n\r\n        // takes a step of stepSize * d from x0, and then project against any constraints.\r\n        // result is returned in r.\r\n        // x0: starting positions\r\n        // r: result positions will be returned here\r\n        // d: unconstrained descent vector\r\n        // stepSize: amount to step along d\r\n        private stepAndProject(x0: number[][], r: number[][], d: number[][], stepSize: number): void {\r\n            Descent.copy(x0, r);\r\n            this.takeDescentStep(r[0], d[0], stepSize);\r\n            if (this.project) this.project[0](x0[0], x0[1], r[0]);\r\n            this.takeDescentStep(r[1], d[1], stepSize);\r\n            if (this.project) this.project[1](r[0], x0[1], r[1]);\r\n\r\n            // todo: allow projection against constraints in higher dimensions\r\n            for (var i = 2; i < this.k; i++)\r\n                this.takeDescentStep(r[i], d[i], stepSize);\r\n\r\n            // the following makes locks extra sticky... but hides the result of the projection from the consumer\r\n            //if (!this.locks.isEmpty()) {\r\n            //    this.locks.apply((u, p) => {\r\n            //        for (var i = 0; i < this.k; i++) {\r\n            //            r[i][u] = p[i];\r\n            //        }\r\n            //    });\r\n            //}\r\n        }\r\n\r\n        private static mApply(m: number, n: number, f: (i: number, j: number) => any) {\r\n            var i = m; while (i-- > 0) {\r\n                var j = n; while (j-- > 0) f(i, j);\r\n            }\r\n        }\r\n        private matrixApply(f: (i: number, j: number) => any) {\r\n            Descent.mApply(this.k, this.n, f);\r\n        }\r\n\r\n        private computeNextPosition(x0: number[][], r: number[][]): void {\r\n            this.computeDerivatives(x0);\r\n            var alpha = this.computeStepSize(this.g);\r\n            this.stepAndProject(x0, r, this.g, alpha);\r\n/* DEBUG\r\n            for (var u: number = 0; u < this.n; ++u)\r\n                for (var i = 0; i < this.k; ++i)\r\n                    if (isNaN(r[i][u])) debugger;\r\nDEBUG */\r\n            if (this.project) {\r\n                this.matrixApply((i, j) => this.e[i][j] = x0[i][j] - r[i][j]);\r\n                var beta = this.computeStepSize(this.e);\r\n                beta = Math.max(0.2, Math.min(beta, 1));\r\n                this.stepAndProject(x0, r, this.e, beta);\r\n            }\r\n        }\r\n\r\n        public run(iterations: number): number {\r\n            var stress = Number.MAX_VALUE, converged = false;\r\n            while (!converged && iterations-- > 0) {\r\n                var s = this.rungeKutta();\r\n                converged = Math.abs(stress / s - 1) < this.threshold;\r\n                stress = s;\r\n            }\r\n            return stress;\r\n        }\r\n\r\n        public rungeKutta(): number {\r\n            this.computeNextPosition(this.x, this.a);\r\n            Descent.mid(this.x, this.a, this.ia);\r\n            this.computeNextPosition(this.ia, this.b);\r\n            Descent.mid(this.x, this.b, this.ib);\r\n            this.computeNextPosition(this.ib, this.c);\r\n            this.computeNextPosition(this.c, this.d);\r\n            var disp = 0;\r\n            this.matrixApply((i, j) => {\r\n                var x = (this.a[i][j] + 2.0 * this.b[i][j] + 2.0 * this.c[i][j] + this.d[i][j]) / 6.0,\r\n                    d = this.x[i][j] - x;\r\n                disp += d * d;\r\n                this.x[i][j] = x;\r\n            });\r\n            return disp;\r\n        }\r\n\r\n        private static mid(a: number[][], b: number[][], m: number[][]): void {\r\n            Descent.mApply(a.length, a[0].length, (i, j) =>\r\n                m[i][j] = a[i][j] + (b[i][j] - a[i][j]) / 2.0);\r\n        }\r\n\r\n        public takeDescentStep(x: number[], d: number[], stepSize: number): void {\r\n            for (var i = 0; i < this.n; ++i) {\r\n                x[i] = x[i] - stepSize * d[i];\r\n            }\r\n        }\r\n\r\n        public computeStress(): number {\r\n            var stress = 0;\r\n            for (var u = 0, nMinus1 = this.n - 1; u < nMinus1; ++u) {\r\n                for (var v = u + 1, n = this.n; v < n; ++v) {\r\n                    var l = 0;\r\n                    for (var i = 0; i < this.k; ++i) {\r\n                        var dx = this.x[i][u] - this.x[i][v];\r\n                        l += dx * dx;\r\n                    }\r\n                    l = Math.sqrt(l);\r\n                    var d = this.D[u][v];\r\n                    if (!isFinite(d)) continue;\r\n                    var rl = d - l;\r\n                    var d2 = d * d;\r\n                    stress += rl * rl / d2;\r\n                }\r\n            }\r\n            return stress;\r\n        }\r\n    }\r\n\r\n    // Linear congruential pseudo random number generator\r\n    export class PseudoRandom {\r\n        private a: number = 214013;\r\n        private c: number = 2531011;\r\n        private m: number = 2147483648;\r\n        private range: number = 32767;\r\n\r\n        constructor(public seed: number = 1) { }\r\n\r\n        // random real between 0 and 1\r\n        getNext(): number {\r\n            this.seed = (this.seed * this.a + this.c) % this.m;\r\n            return (this.seed >> 16) / this.range;\r\n        }\r\n\r\n        // random real between min and max\r\n        getNextBetween(min: number, max: number) {\r\n            return min + this.getNext() * (max - min);\r\n        }\r\n    }\r\n","    export class PositionStats {\r\n        AB: number = 0;\r\n        AD: number = 0;\r\n        A2: number = 0;\r\n\r\n        constructor(public scale: number) {}\r\n\r\n        addVariable(v: Variable): void {\r\n            var ai = this.scale / v.scale;\r\n            var bi = v.offset / v.scale;\r\n            var wi = v.weight;\r\n            this.AB += wi * ai * bi;\r\n            this.AD += wi * ai * v.desiredPosition;\r\n            this.A2 += wi * ai * ai;\r\n        }\r\n\r\n        getPosn(): number {\r\n            return (this.AD - this.AB) / this.A2;\r\n        }\r\n    }\r\n\r\n    export class Constraint {\r\n        lm: number;\r\n        active: boolean = false;\r\n        unsatisfiable: boolean = false;\r\n\r\n        constructor(public left: Variable, public right: Variable, public gap: number, public equality: boolean = false) {\r\n            this.left = left;\r\n            this.right = right;\r\n            this.gap = gap;\r\n            this.equality = equality;\r\n        }\r\n\r\n        slack(): number {\r\n            return this.unsatisfiable ? Number.MAX_VALUE\r\n                : this.right.scale * this.right.position() - this.gap\r\n                - this.left.scale * this.left.position();\r\n        }\r\n    }\r\n\r\n    export class Variable {\r\n        offset: number = 0;\r\n        block: Block;\r\n        cIn: Constraint[];\r\n        cOut: Constraint[];\r\n\r\n        constructor(public desiredPosition: number, public weight: number = 1, public scale: number = 1) {}\r\n\r\n        dfdv(): number {\r\n            return 2.0 * this.weight * (this.position() - this.desiredPosition);\r\n        }\r\n\r\n        position(): number {\r\n            return (this.block.ps.scale * this.block.posn + this.offset) / this.scale;\r\n        }\r\n\r\n        // visit neighbours by active constraints within the same block\r\n        visitNeighbours(prev: Variable, f: (c: Constraint, next: Variable) => void ): void {\r\n            var ff = (c, next) => c.active && prev !== next && f(c, next);\r\n            this.cOut.forEach(c=> ff(c, c.right));\r\n            this.cIn.forEach(c=> ff(c, c.left));\r\n        }\r\n    }\r\n\r\n    export class Block {\r\n        vars: Variable[] = [];\r\n        posn: number;\r\n        ps: PositionStats;\r\n        blockInd: number;\r\n\r\n        constructor(v: Variable) {\r\n            v.offset = 0;\r\n            this.ps = new PositionStats(v.scale);\r\n            this.addVariable(v);\r\n        }\r\n\r\n        private addVariable(v: Variable): void {\r\n            v.block = this;\r\n            this.vars.push(v);\r\n            this.ps.addVariable(v);\r\n            this.posn = this.ps.getPosn();\r\n        }\r\n\r\n        // move the block where it needs to be to minimize cost\r\n        updateWeightedPosition(): void {\r\n            this.ps.AB = this.ps.AD = this.ps.A2 = 0;\r\n            for (var i = 0, n = this.vars.length; i < n; ++i)\r\n                this.ps.addVariable(this.vars[i]);\r\n            this.posn = this.ps.getPosn();\r\n        }\r\n\r\n        private compute_lm(v: Variable, u: Variable, postAction: (c: Constraint)=>void): number {\r\n            var dfdv = v.dfdv();\r\n            v.visitNeighbours(u, (c, next) => {\r\n                var _dfdv = this.compute_lm(next, v, postAction);\r\n                if (next === c.right) {\r\n                    dfdv += _dfdv * c.left.scale;\r\n                    c.lm = _dfdv;\r\n                } else {\r\n                    dfdv += _dfdv * c.right.scale;\r\n                    c.lm = -_dfdv;\r\n                }\r\n                postAction(c);\r\n            });\r\n            return dfdv / v.scale;\r\n        }\r\n\r\n        private populateSplitBlock(v: Variable, prev: Variable): void {\r\n            v.visitNeighbours(prev, (c, next) => {\r\n                next.offset = v.offset + (next === c.right ? c.gap : -c.gap);\r\n                this.addVariable(next);\r\n                this.populateSplitBlock(next, v);\r\n            });\r\n        }\r\n\r\n        // traverse the active constraint tree applying visit to each active constraint\r\n        traverse(visit: (c: Constraint) => any, acc: any[], v: Variable = this.vars[0], prev: Variable=null) {\r\n            v.visitNeighbours(prev, (c, next) => {\r\n                acc.push(visit(c));\r\n                this.traverse(visit, acc, next, v);\r\n            });\r\n        }\r\n\r\n        // calculate lagrangian multipliers on constraints and\r\n        // find the active constraint in this block with the smallest lagrangian.\r\n        // if the lagrangian is negative, then the constraint is a split candidate.\r\n        findMinLM(): Constraint {\r\n            var m: Constraint = null;\r\n            this.compute_lm(this.vars[0], null, c=> {\r\n                if (!c.equality && (m === null || c.lm < m.lm)) m = c;\r\n            });\r\n            return m;\r\n        }\r\n\r\n        private findMinLMBetween(lv: Variable, rv: Variable): Constraint {\r\n            this.compute_lm(lv, null, () => {});\r\n            var m = null;\r\n            this.findPath(lv, null, rv, (c, next)=> {\r\n                if (!c.equality && c.right === next && (m === null || c.lm < m.lm)) m = c;\r\n            });\r\n            return m;\r\n        }\r\n\r\n        private findPath(v: Variable, prev: Variable, to: Variable, visit: (c: Constraint, next:Variable)=>void): boolean {\r\n            var endFound = false;\r\n            v.visitNeighbours(prev, (c, next) => {\r\n                if (!endFound && (next === to || this.findPath(next, v, to, visit)))\r\n                {\r\n                    endFound = true;\r\n                    visit(c, next);\r\n                }\r\n            });\r\n            return endFound;\r\n        }\r\n\r\n        // Search active constraint tree from u to see if there is a directed path to v.\r\n        // Returns true if path is found.\r\n        isActiveDirectedPathBetween(u: Variable, v: Variable) : boolean {\r\n            if (u === v) return true;\r\n            var i = u.cOut.length;\r\n            while(i--) {\r\n                var c = u.cOut[i];\r\n                if (c.active && this.isActiveDirectedPathBetween(c.right, v))\r\n                    return true;\r\n            }\r\n            return false;\r\n        }\r\n\r\n        // split the block into two by deactivating the specified constraint\r\n        static split(c: Constraint): Block[]{\r\n/* DEBUG\r\n            console.log(\"split on \" + c);\r\n            console.assert(c.active, \"attempt to split on inactive constraint\");\r\nDEBUG */\r\n            c.active = false;\r\n            return [Block.createSplitBlock(c.left), Block.createSplitBlock(c.right)];\r\n        }\r\n\r\n        private static createSplitBlock(startVar: Variable): Block {\r\n            var b = new Block(startVar);\r\n            b.populateSplitBlock(startVar, null);\r\n            return b;\r\n        }\r\n\r\n        // find a split point somewhere between the specified variables\r\n        splitBetween(vl: Variable, vr: Variable): { constraint: Constraint; lb: Block; rb: Block } {\r\n/* DEBUG\r\n            console.assert(vl.block === this);\r\n            console.assert(vr.block === this);\r\nDEBUG */\r\n            var c = this.findMinLMBetween(vl, vr);\r\n            if (c !== null) {\r\n                var bs = Block.split(c);\r\n                return { constraint: c, lb: bs[0], rb: bs[1] };\r\n            }\r\n            // couldn't find a split point - for example the active path is all equality constraints\r\n            return null;\r\n        }\r\n\r\n        mergeAcross(b: Block, c: Constraint, dist: number): void {\r\n            c.active = true;\r\n            for (var i = 0, n = b.vars.length; i < n; ++i) {\r\n                var v = b.vars[i];\r\n                v.offset += dist;\r\n                this.addVariable(v);\r\n            }\r\n            this.posn = this.ps.getPosn();\r\n        }\r\n\r\n        cost(): number {\r\n            var sum = 0, i = this.vars.length;\r\n            while (i--) {\r\n                var v = this.vars[i],\r\n                    d = v.position() - v.desiredPosition;\r\n                sum += d * d * v.weight;\r\n            }\r\n            return sum;\r\n        }\r\n\r\n/* DEBUG\r\n        toString(): string {\r\n            var cs = [];\r\n            this.traverse(c=> c.toString() + \"\\n\", cs)\r\n            return \"b\"+this.blockInd + \"@\" + this.posn + \": vars=\" + this.vars.map(v=> v.toString()+\":\"+v.offset) + \";\\n cons=\\n\" + cs;\r\n        }\r\nDEBUG */\r\n    }\r\n\r\n    export class Blocks {\r\n        private list: Block[];\r\n\r\n        constructor(public vs: Variable[]) {\r\n            var n = vs.length;\r\n            this.list = new Array(n);\r\n            while (n--) {\r\n                var b = new Block(vs[n]);\r\n                this.list[n] = b;\r\n                b.blockInd = n;\r\n            }\r\n        }\r\n\r\n        cost(): number {\r\n            var sum = 0, i = this.list.length;\r\n            while (i--) sum += this.list[i].cost();\r\n            return sum;\r\n        }\r\n\r\n        insert(b: Block) {\r\n/* DEBUG\r\n            console.assert(!this.contains(b), \"blocks error: tried to reinsert block \" + b.blockInd)\r\nDEBUG */\r\n            b.blockInd = this.list.length;\r\n            this.list.push(b);\r\n/* DEBUG\r\n            console.log(\"insert block: \" + b.blockInd);\r\n            this.contains(b);\r\nDEBUG */\r\n        }\r\n\r\n        remove(b: Block) {\r\n/* DEBUG\r\n            console.log(\"remove block: \" + b.blockInd);\r\n            console.assert(this.contains(b));\r\nDEBUG */\r\n            var last = this.list.length - 1;\r\n            var swapBlock = this.list[last];\r\n            this.list.length = last;\r\n            if (b !== swapBlock) {\r\n                this.list[b.blockInd] = swapBlock;\r\n                swapBlock.blockInd = b.blockInd;\r\n/* DEBUG\r\n                console.assert(this.contains(swapBlock));\r\nDEBUG */\r\n            }\r\n        }\r\n\r\n        // merge the blocks on either side of the specified constraint, by copying the smaller block into the larger\r\n        // and deleting the smaller.\r\n        merge(c: Constraint): void {\r\n            var l = c.left.block, r = c.right.block;\r\n/* DEBUG\r\n            console.assert(l!==r, \"attempt to merge within the same block\");\r\nDEBUG */\r\n            var dist = c.right.offset - c.left.offset - c.gap;\r\n            if (l.vars.length < r.vars.length) {\r\n                r.mergeAcross(l, c, dist);\r\n                this.remove(l);\r\n            } else {\r\n                l.mergeAcross(r, c, -dist);\r\n                this.remove(r);\r\n            }\r\n/* DEBUG\r\n            console.assert(Math.abs(c.slack()) < 1e-6, \"Error: Constraint should be at equality after merge!\");\r\n            console.log(\"merged on \" + c);\r\nDEBUG */\r\n        }\r\n\r\n        forEach(f: (b: Block, i: number) => void ) {\r\n            this.list.forEach(f);\r\n        }\r\n\r\n        // useful, for example, after variable desired positions change.\r\n        updateBlockPositions(): void {\r\n            this.list.forEach(b=> b.updateWeightedPosition());\r\n        }\r\n\r\n        // split each block across its constraint with the minimum lagrangian\r\n        split(inactive: Constraint[]): void {\r\n            this.updateBlockPositions();\r\n            this.list.forEach(b=> {\r\n                var v = b.findMinLM();\r\n                if (v !== null && v.lm < Solver.LAGRANGIAN_TOLERANCE) {\r\n                    b = v.left.block;\r\n                    Block.split(v).forEach(nb=>this.insert(nb));\r\n                    this.remove(b);\r\n                    inactive.push(v);\r\n/* DEBUG\r\n                    console.assert(this.contains(v.left.block));\r\n                    console.assert(this.contains(v.right.block));\r\nDEBUG */\r\n                }\r\n            });\r\n        }\r\n\r\n/* DEBUG\r\n        // checks b is in the block, and does a sanity check over list index integrity\r\n        contains(b: Block): boolean {\r\n            var result = false;\r\n            this.list.forEach((bb, i) => {\r\n                if (bb.blockInd !== i) {\r\n                    console.error(\"blocks error, blockInd \" + b.blockInd + \" found at \" + i);\r\n                    return false;\r\n                }\r\n                result = result || b === bb;\r\n            });\r\n            return result;\r\n        }\r\n\r\n        toString(): string {\r\n            return this.list.toString();\r\n        }\r\nDEBUG */\r\n    }\r\n\r\n    export class Solver {\r\n        bs: Blocks;\r\n        inactive: Constraint[];\r\n\r\n        static LAGRANGIAN_TOLERANCE = -1e-4;\r\n        static ZERO_UPPERBOUND = -1e-10;\r\n\r\n        constructor(public vs: Variable[], public cs: Constraint[]) {\r\n            this.vs = vs;\r\n            vs.forEach(v => {\r\n                v.cIn = [], v.cOut = [];\r\n/* DEBUG\r\n                v.toString = () => \"v\" + vs.indexOf(v);\r\nDEBUG */\r\n            });\r\n            this.cs = cs;\r\n            cs.forEach(c => {\r\n                c.left.cOut.push(c);\r\n                c.right.cIn.push(c);\r\n/* DEBUG\r\n                c.toString = () => c.left + \"+\" + c.gap + \"<=\" + c.right + \" slack=\" + c.slack() + \" active=\" + c.active;\r\nDEBUG */\r\n            });\r\n            this.inactive = cs.map(c=> { c.active = false; return c; });\r\n            this.bs = null;\r\n        }\r\n\r\n        cost(): number {\r\n            return this.bs.cost();\r\n        }\r\n\r\n        // set starting positions without changing desired positions.\r\n        // Note: it throws away any previous block structure.\r\n        setStartingPositions(ps: number[]): void {\r\n            this.inactive = this.cs.map(c=> { c.active = false; return c; });\r\n            this.bs = new Blocks(this.vs);\r\n            this.bs.forEach((b, i) => b.posn = ps[i]);\r\n        }\r\n\r\n        setDesiredPositions(ps: number[]): void {\r\n            this.vs.forEach((v, i) => v.desiredPosition = ps[i]);\r\n        }\r\n\r\n/* DEBUG\r\n        private getId(v: Variable): number {\r\n            return this.vs.indexOf(v);\r\n        }\r\n\r\n        // sanity check of the index integrity of the inactive list\r\n        checkInactive(): void {\r\n            var inactiveCount = 0;\r\n            this.cs.forEach(c=> {\r\n                var i = this.inactive.indexOf(c);\r\n                console.assert(!c.active && i >= 0 || c.active && i < 0, \"constraint should be in the inactive list if it is not active: \" + c);\r\n                if (i >= 0) {\r\n                    inactiveCount++;\r\n                } else {\r\n                    console.assert(c.active, \"inactive constraint not found in inactive list: \" + c);\r\n                }\r\n            });\r\n            console.assert(inactiveCount === this.inactive.length, inactiveCount + \" inactive constraints found, \" + this.inactive.length + \"in inactive list\");\r\n        }\r\n        // after every call to satisfy the following should check should pass\r\n        checkSatisfied(): void {\r\n            this.cs.forEach(c=>console.assert(c.slack() >= vpsc.Solver.ZERO_UPPERBOUND, \"Error: Unsatisfied constraint! \"+c));\r\n        }\r\nDEBUG */\r\n\r\n        private mostViolated(): Constraint {\r\n            var minSlack = Number.MAX_VALUE,\r\n                v: Constraint = null,\r\n                l = this.inactive,\r\n                n = l.length,\r\n                deletePoint = n;\r\n            for (var i = 0; i < n; ++i) {\r\n                var c = l[i];\r\n                if (c.unsatisfiable) continue;\r\n                var slack = c.slack();\r\n                if (c.equality || slack < minSlack) {\r\n                    minSlack = slack;\r\n                    v = c;\r\n                    deletePoint = i;\r\n                    if (c.equality) break;\r\n                }\r\n            }\r\n            if (deletePoint !== n &&\r\n                (minSlack < Solver.ZERO_UPPERBOUND && !v.active || v.equality))\r\n            {\r\n                l[deletePoint] = l[n - 1];\r\n                l.length = n - 1;\r\n            }\r\n            return v;\r\n        }\r\n\r\n        // satisfy constraints by building block structure over violated constraints\r\n        // and moving the blocks to their desired positions\r\n        satisfy(): void {\r\n            if (this.bs == null) {\r\n                this.bs = new Blocks(this.vs);\r\n            }\r\n/* DEBUG\r\n            console.log(\"satisfy: \" + this.bs);\r\nDEBUG */\r\n            this.bs.split(this.inactive);\r\n            var v: Constraint = null;\r\n            while ((v = this.mostViolated()) && (v.equality || v.slack() < Solver.ZERO_UPPERBOUND && !v.active)) {\r\n                var lb = v.left.block, rb = v.right.block;\r\n/* DEBUG\r\n                console.log(\"most violated is: \" + v);\r\n                this.bs.contains(lb);\r\n                this.bs.contains(rb);\r\nDEBUG */\r\n                if (lb !== rb) {\r\n                    this.bs.merge(v);\r\n                } else {\r\n                    if (lb.isActiveDirectedPathBetween(v.right, v.left)) {\r\n                        // cycle found!\r\n                        v.unsatisfiable = true;\r\n                        continue;\r\n                    }\r\n                    // constraint is within block, need to split first\r\n                    var split = lb.splitBetween(v.left, v.right);\r\n                    if (split !== null) {\r\n                        this.bs.insert(split.lb);\r\n                        this.bs.insert(split.rb);\r\n                        this.bs.remove(lb);\r\n                        this.inactive.push(split.constraint);\r\n                    } else {\r\n/* DEBUG\r\n                        console.log(\"unsatisfiable constraint found\");\r\nDEBUG */\r\n                        v.unsatisfiable = true;\r\n                        continue;\r\n                    }\r\n                    if (v.slack() >= 0) {\r\n/* DEBUG\r\n                        console.log(\"violated constraint indirectly satisfied: \" + v);\r\nDEBUG */\r\n                        // v was satisfied by the above split!\r\n                        this.inactive.push(v);\r\n                    } else {\r\n/* DEBUG\r\n                        console.log(\"merge after split:\");\r\nDEBUG */\r\n                        this.bs.merge(v);\r\n                    }\r\n                }\r\n/* DEBUG\r\n                this.bs.contains(v.left.block);\r\n                this.bs.contains(v.right.block);\r\n                this.checkInactive();\r\nDEBUG */\r\n            }\r\n/* DEBUG\r\n            this.checkSatisfied();\r\nDEBUG */\r\n        }\r\n\r\n        // repeatedly build and split block structure until we converge to an optimal solution\r\n        solve(): number {\r\n            this.satisfy();\r\n            var lastcost = Number.MAX_VALUE, cost = this.bs.cost();\r\n            while (Math.abs(lastcost - cost) > 0.0001) {\r\n                this.satisfy();\r\n                lastcost = cost;\r\n                cost = this.bs.cost();\r\n            }\r\n            return cost;\r\n        }\r\n    }\r\n    /**\r\n      * Remove overlap between spans while keeping their centers as close as possible to the specified desiredCenters.\r\n      * Lower and upper bounds will be respected if the spans physically fit between them\r\n      * (otherwise they'll be moved and their new position returned).\r\n      * If no upper/lower bound is specified then the bounds of the moved spans will be returned.\r\n      * returns a new center for each span.\r\n      */\r\n    export function removeOverlapInOneDimension(spans: { size: number, desiredCenter: number }[], lowerBound?: number, upperBound?: number)\r\n        : { newCenters: number[], lowerBound: number, upperBound: number }\r\n    {\r\n        const vs: Variable[] = spans.map(s => new Variable(s.desiredCenter));\r\n        const cs: Constraint[] = [];\r\n        const n = spans.length;\r\n        for (var i = 0; i < n - 1; i++) {\r\n            const left = spans[i], right = spans[i + 1];\r\n            cs.push(new Constraint(vs[i], vs[i + 1], (left.size + right.size) / 2));\r\n        }\r\n        const leftMost = vs[0],\r\n            rightMost = vs[n - 1],\r\n            leftMostSize = spans[0].size / 2,\r\n            rightMostSize = spans[n - 1].size / 2;\r\n        let vLower: Variable = null, vUpper: Variable = null;\r\n        if (lowerBound) {\r\n            vLower = new Variable(lowerBound, leftMost.weight * 1000);\r\n            vs.push(vLower);\r\n            cs.push(new Constraint(vLower, leftMost, leftMostSize));\r\n        }\r\n        if (upperBound) {\r\n            vUpper = new Variable(upperBound, rightMost.weight * 1000);\r\n            vs.push(vUpper);\r\n            cs.push(new Constraint(rightMost, vUpper, rightMostSize));\r\n        }\r\n        var solver = new Solver(vs, cs);\r\n        solver.solve();\r\n        return {\r\n            newCenters: vs.slice(0, spans.length).map(v => v.position()),\r\n            lowerBound: vLower ? vLower.position() : leftMost.position() - leftMostSize,\r\n            upperBound: vUpper ? vUpper.position() : rightMost.position() + rightMostSize\r\n        };\r\n    }\r\n","    //Based on js_es:\r\n    //\r\n    //https://github.com/vadimg/js_bintrees\r\n    //\r\n    //Copyright (C) 2011 by Vadim Graboys\r\n    //\r\n    //Permission is hereby granted, free of charge, to any person obtaining a copy\r\n    //of this software and associated documentation files (the \"Software\"), to deal\r\n    //in the Software without restriction, including without limitation the rights\r\n    //to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n    //copies of the Software, and to permit persons to whom the Software is\r\n    //furnished to do so, subject to the following conditions:\r\n    //\r\n    //The above copyright notice and this permission notice shall be included in\r\n    //all copies or substantial portions of the Software.\r\n    //\r\n    //THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n    //IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n    //FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n    //AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n    //LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n    //OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n    //THE SOFTWARE.\r\n    export class TreeBase {\r\n        _root;\r\n        size;\r\n        _comparator;\r\n        // removes all nodes from the tree\r\n        clear() {\r\n            this._root = null;\r\n            this.size = 0;\r\n        };\r\n\r\n        // returns node data if found, null otherwise\r\n        find(data) {\r\n            var res = this._root;\r\n\r\n            while (res !== null) {\r\n                var c = this._comparator(data, res.data);\r\n                if (c === 0) {\r\n                    return res.data;\r\n                }\r\n                else {\r\n                    res = res.get_child(c > 0);\r\n                }\r\n            }\r\n\r\n            return null;\r\n        };\r\n\r\n        // returns iterator to node if found, null otherwise\r\n        findIter = function (data) {\r\n            var res = this._root;\r\n            var iter = this.iterator();\r\n\r\n            while (res !== null) {\r\n                var c = this._comparator(data, res.data);\r\n                if (c === 0) {\r\n                    iter._cursor = res;\r\n                    return iter;\r\n                }\r\n                else {\r\n                    iter._ancestors.push(res);\r\n                    res = res.get_child(c > 0);\r\n                }\r\n            }\r\n\r\n            return null;\r\n        };\r\n\r\n        // Returns an interator to the tree node immediately before (or at) the element\r\n        lowerBound(data) {\r\n            return this._bound(data, this._comparator);\r\n        };\r\n\r\n        // Returns an interator to the tree node immediately after (or at) the element\r\n        upperBound(data) {\r\n            var cmp = this._comparator;\r\n\r\n            function reverse_cmp(a, b) {\r\n                return cmp(b, a);\r\n            }\r\n\r\n            return this._bound(data, reverse_cmp);\r\n        };\r\n\r\n        // returns null if tree is empty\r\n        min() {\r\n            var res = this._root;\r\n            if (res === null) {\r\n                return null;\r\n            }\r\n\r\n            while (res.left !== null) {\r\n                res = res.left;\r\n            }\r\n\r\n            return res.data;\r\n        };\r\n\r\n        // returns null if tree is empty\r\n        max() {\r\n            var res = this._root;\r\n            if (res === null) {\r\n                return null;\r\n            }\r\n\r\n            while (res.right !== null) {\r\n                res = res.right;\r\n            }\r\n\r\n            return res.data;\r\n        };\r\n\r\n        // returns a null iterator\r\n        // call next() or prev() to point to an element\r\n        iterator(): Iterator {\r\n            return new Iterator(this);\r\n        };\r\n\r\n        // calls cb on each node's data, in order\r\n        each(cb) {\r\n            var it = this.iterator(), data;\r\n            while ((data = it.next()) !== null) {\r\n                cb(data);\r\n            }\r\n        };\r\n\r\n        // calls cb on each node's data, in reverse order\r\n        reach(cb) {\r\n            var it = this.iterator(), data;\r\n            while ((data = it.prev()) !== null) {\r\n                cb(data);\r\n            }\r\n        };\r\n\r\n        // used for lowerBound and upperBound\r\n        _bound(data, cmp) {\r\n            var cur = this._root;\r\n            var iter = this.iterator();\r\n\r\n            while (cur !== null) {\r\n                var c = this._comparator(data, cur.data);\r\n                if (c === 0) {\r\n                    iter._cursor = cur;\r\n                    return iter;\r\n                }\r\n                iter._ancestors.push(cur);\r\n                cur = cur.get_child(c > 0);\r\n            }\r\n\r\n            for (var i = iter._ancestors.length - 1; i >= 0; --i) {\r\n                cur = iter._ancestors[i];\r\n                if (cmp(data, cur.data) > 0) {\r\n                    iter._cursor = cur;\r\n                    iter._ancestors.length = i;\r\n                    return iter;\r\n                }\r\n            }\r\n\r\n            iter._ancestors.length = 0;\r\n            return iter;\r\n        };\r\n    }\r\n    export class Iterator {\r\n        _tree;\r\n        _ancestors;\r\n        _cursor;\r\n        constructor(tree) {\r\n            this._tree = tree;\r\n            this._ancestors = [];\r\n            this._cursor = null;\r\n        }\r\n\r\n        data() {\r\n            return this._cursor !== null ? this._cursor.data : null;\r\n        };\r\n\r\n        // if null-iterator, returns first node\r\n        // otherwise, returns next node\r\n        next() {\r\n            if (this._cursor === null) {\r\n                var root = this._tree._root;\r\n                if (root !== null) {\r\n                    this._minNode(root);\r\n                }\r\n            }\r\n            else {\r\n                if (this._cursor.right === null) {\r\n                    // no greater node in subtree, go up to parent\r\n                    // if coming from a right child, continue up the stack\r\n                    var save;\r\n                    do {\r\n                        save = this._cursor;\r\n                        if (this._ancestors.length) {\r\n                            this._cursor = this._ancestors.pop();\r\n                        }\r\n                        else {\r\n                            this._cursor = null;\r\n                            break;\r\n                        }\r\n                    } while (this._cursor.right === save);\r\n                }\r\n                else {\r\n                    // get the next node from the subtree\r\n                    this._ancestors.push(this._cursor);\r\n                    this._minNode(this._cursor.right);\r\n                }\r\n            }\r\n            return this._cursor !== null ? this._cursor.data : null;\r\n        };\r\n\r\n        // if null-iterator, returns last node\r\n        // otherwise, returns previous node\r\n        prev() {\r\n            if (this._cursor === null) {\r\n                var root = this._tree._root;\r\n                if (root !== null) {\r\n                    this._maxNode(root);\r\n                }\r\n            }\r\n            else {\r\n                if (this._cursor.left === null) {\r\n                    var save;\r\n                    do {\r\n                        save = this._cursor;\r\n                        if (this._ancestors.length) {\r\n                            this._cursor = this._ancestors.pop();\r\n                        }\r\n                        else {\r\n                            this._cursor = null;\r\n                            break;\r\n                        }\r\n                    } while (this._cursor.left === save);\r\n                }\r\n                else {\r\n                    this._ancestors.push(this._cursor);\r\n                    this._maxNode(this._cursor.left);\r\n                }\r\n            }\r\n            return this._cursor !== null ? this._cursor.data : null;\r\n        };\r\n\r\n        _minNode(start) {\r\n            while (start.left !== null) {\r\n                this._ancestors.push(start);\r\n                start = start.left;\r\n            }\r\n            this._cursor = start;\r\n        };\r\n\r\n        _maxNode(start) {\r\n            while (start.right !== null) {\r\n                this._ancestors.push(start);\r\n                start = start.right;\r\n            }\r\n            this._cursor = start;\r\n        };\r\n    }\r\n\r\n    class Node {\r\n        data;\r\n        left;\r\n        right;\r\n        red;\r\n        constructor(data) {\r\n            this.data = data;\r\n            this.left = null;\r\n            this.right = null;\r\n            this.red = true;\r\n        }\r\n\r\n        get_child(dir) {\r\n            return dir ? this.right : this.left;\r\n        };\r\n\r\n        set_child(dir, val) {\r\n            if (dir) {\r\n                this.right = val;\r\n            }\r\n            else {\r\n                this.left = val;\r\n            }\r\n        };\r\n    }\r\n\r\n    export class RBTree<T> extends TreeBase {\r\n\r\n        _root;\r\n        _comparator;\r\n        size;\r\n        constructor(comparator: (a: T, b: T) => number) {\r\n            super();\r\n            this._root = null;\r\n            this._comparator = comparator;\r\n            this.size = 0;\r\n        }\r\n\r\n        // returns true if inserted, false if duplicate\r\n        insert(data) {\r\n            var ret = false;\r\n\r\n            if (this._root === null) {\r\n                // empty tree\r\n                this._root = new Node(data);\r\n                ret = true;\r\n                this.size++;\r\n            }\r\n            else {\r\n                var head = new Node(undefined); // fake tree root\r\n\r\n                var dir = false;\r\n                var last = false;\r\n\r\n                // setup\r\n                var gp = null; // grandparent\r\n                var ggp = head; // grand-grand-parent\r\n                var p = null; // parent\r\n                var node = this._root;\r\n                ggp.right = this._root;\r\n\r\n                // search down\r\n                while (true) {\r\n                    if (node === null) {\r\n                        // insert new node at the bottom\r\n                        node = new Node(data);\r\n                        p.set_child(dir, node);\r\n                        ret = true;\r\n                        this.size++;\r\n                    }\r\n                    else if (RBTree.is_red(node.left) && RBTree.is_red(node.right)) {\r\n                        // color flip\r\n                        node.red = true;\r\n                        node.left.red = false;\r\n                        node.right.red = false;\r\n                    }\r\n\r\n                    // fix red violation\r\n                    if (RBTree.is_red(node) && RBTree.is_red(p)) {\r\n                        var dir2 = ggp.right === gp;\r\n\r\n                        if (node === p.get_child(last)) {\r\n                            ggp.set_child(dir2, RBTree.single_rotate(gp, !last));\r\n                        }\r\n                        else {\r\n                            ggp.set_child(dir2, RBTree.double_rotate(gp, !last));\r\n                        }\r\n                    }\r\n\r\n                    var cmp = this._comparator(node.data, data);\r\n\r\n                    // stop if found\r\n                    if (cmp === 0) {\r\n                        break;\r\n                    }\r\n\r\n                    last = dir;\r\n                    dir = cmp < 0;\r\n\r\n                    // update helpers\r\n                    if (gp !== null) {\r\n                        ggp = gp;\r\n                    }\r\n                    gp = p;\r\n                    p = node;\r\n                    node = node.get_child(dir);\r\n                }\r\n\r\n                // update root\r\n                this._root = head.right;\r\n            }\r\n\r\n            // make root black\r\n            this._root.red = false;\r\n\r\n            return ret;\r\n        };\r\n\r\n        // returns true if removed, false if not found\r\n        remove(data) {\r\n            if (this._root === null) {\r\n                return false;\r\n            }\r\n\r\n            var head = new Node(undefined); // fake tree root\r\n            var node = head;\r\n            node.right = this._root;\r\n            var p = null; // parent\r\n            var gp = null; // grand parent\r\n            var found = null; // found item\r\n            var dir = true;\r\n\r\n            while (node.get_child(dir) !== null) {\r\n                var last = dir;\r\n\r\n                // update helpers\r\n                gp = p;\r\n                p = node;\r\n                node = node.get_child(dir);\r\n\r\n                var cmp = this._comparator(data, node.data);\r\n\r\n                dir = cmp > 0;\r\n\r\n                // save found node\r\n                if (cmp === 0) {\r\n                    found = node;\r\n                }\r\n\r\n                // push the red node down\r\n                if (!RBTree.is_red(node) && !RBTree.is_red(node.get_child(dir))) {\r\n                    if (RBTree.is_red(node.get_child(!dir))) {\r\n                        var sr = RBTree.single_rotate(node, dir);\r\n                        p.set_child(last, sr);\r\n                        p = sr;\r\n                    }\r\n                    else if (!RBTree.is_red(node.get_child(!dir))) {\r\n                        var sibling = p.get_child(!last);\r\n                        if (sibling !== null) {\r\n                            if (!RBTree.is_red(sibling.get_child(!last)) && !RBTree.is_red(sibling.get_child(last))) {\r\n                                // color flip\r\n                                p.red = false;\r\n                                sibling.red = true;\r\n                                node.red = true;\r\n                            }\r\n                            else {\r\n                                var dir2 = gp.right === p;\r\n\r\n                                if (RBTree.is_red(sibling.get_child(last))) {\r\n                                    gp.set_child(dir2, RBTree.double_rotate(p, last));\r\n                                }\r\n                                else if (RBTree.is_red(sibling.get_child(!last))) {\r\n                                    gp.set_child(dir2, RBTree.single_rotate(p, last));\r\n                                }\r\n\r\n                                // ensure correct coloring\r\n                                var gpc = gp.get_child(dir2);\r\n                                gpc.red = true;\r\n                                node.red = true;\r\n                                gpc.left.red = false;\r\n                                gpc.right.red = false;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            // replace and remove if found\r\n            if (found !== null) {\r\n                found.data = node.data;\r\n                p.set_child(p.right === node, node.get_child(node.left === null));\r\n                this.size--;\r\n            }\r\n\r\n            // update root and make it black\r\n            this._root = head.right;\r\n            if (this._root !== null) {\r\n                this._root.red = false;\r\n            }\r\n\r\n            return found !== null;\r\n        };\r\n\r\n        static is_red(node) {\r\n            return node !== null && node.red;\r\n        }\r\n\r\n        static single_rotate(root, dir) {\r\n            var save = root.get_child(!dir);\r\n\r\n            root.set_child(!dir, save.get_child(dir));\r\n            save.set_child(dir, root);\r\n\r\n            root.red = true;\r\n            save.red = false;\r\n\r\n            return save;\r\n        }\r\n\r\n        static double_rotate(root, dir) {\r\n            root.set_child(!dir, RBTree.single_rotate(root.get_child(!dir), !dir));\r\n            return RBTree.single_rotate(root, dir);\r\n        }\r\n    }\r\n","import {Constraint, Variable, Solver} from './vpsc'\r\nimport {RBTree} from './rbtree'\r\nimport {Point} from './geom'\r\n\r\n    export interface Leaf {\r\n        bounds: Rectangle;\r\n        variable: Variable;\r\n    }\r\n\r\n    export interface ProjectionGroup {\r\n        bounds: Rectangle;\r\n        padding: number;\r\n        stiffness: number;\r\n        leaves: Leaf[];\r\n        groups: ProjectionGroup[];\r\n        minVar: Variable;\r\n        maxVar: Variable;\r\n    }\r\n\r\n    export function computeGroupBounds(g: ProjectionGroup): Rectangle {\r\n        g.bounds = typeof g.leaves !== \"undefined\" ?\r\n            g.leaves.reduce((r: Rectangle, c) => c.bounds.union(r), Rectangle.empty()) :\r\n            Rectangle.empty();\r\n        if (typeof g.groups !== \"undefined\")\r\n            g.bounds = <Rectangle>g.groups.reduce((r: Rectangle, c) => computeGroupBounds(c).union(r), g.bounds);\r\n        g.bounds = g.bounds.inflate(g.padding);\r\n        return g.bounds;\r\n    }\r\n\r\n    export class Rectangle {\r\n        constructor(\r\n            public x: number,\r\n            public X: number,\r\n            public y: number,\r\n            public Y: number) { }\r\n\r\n        static empty(): Rectangle { return new Rectangle(Number.POSITIVE_INFINITY, Number.NEGATIVE_INFINITY, Number.POSITIVE_INFINITY, Number.NEGATIVE_INFINITY); }\r\n\r\n        cx(): number { return (this.x + this.X) / 2; }\r\n\r\n        cy(): number { return (this.y + this.Y) / 2; }\r\n\r\n        overlapX(r: Rectangle): number {\r\n            var ux = this.cx(), vx = r.cx();\r\n            if (ux <= vx && r.x < this.X) return this.X - r.x;\r\n            if (vx <= ux && this.x < r.X) return r.X - this.x;\r\n            return 0;\r\n        }\r\n\r\n        overlapY(r: Rectangle): number {\r\n            var uy = this.cy(), vy = r.cy();\r\n            if (uy <= vy && r.y < this.Y) return this.Y - r.y;\r\n            if (vy <= uy && this.y < r.Y) return r.Y - this.y;\r\n            return 0;\r\n        }\r\n\r\n        setXCentre(cx: number): void {\r\n            var dx = cx - this.cx();\r\n            this.x += dx;\r\n            this.X += dx;\r\n        }\r\n\r\n        setYCentre(cy: number): void {\r\n            var dy = cy - this.cy();\r\n            this.y += dy;\r\n            this.Y += dy;\r\n        }\r\n\r\n        width(): number {\r\n            return this.X - this.x;\r\n        }\r\n\r\n        height(): number {\r\n            return this.Y - this.y;\r\n        }\r\n\r\n        union(r: Rectangle): Rectangle {\r\n            return new Rectangle(Math.min(this.x, r.x), Math.max(this.X, r.X), Math.min(this.y, r.y), Math.max(this.Y, r.Y));\r\n        }\r\n\r\n        /**\r\n         * return any intersection points between the given line and the sides of this rectangle\r\n         * @method lineIntersection\r\n         * @param x1 number first x coord of line\r\n         * @param y1 number first y coord of line\r\n         * @param x2 number second x coord of line\r\n         * @param y2 number second y coord of line\r\n         * @return any intersection points found\r\n         */\r\n        lineIntersections(x1: number, y1: number, x2: number, y2: number): Array<Point> {\r\n            var sides = [[this.x, this.y, this.X, this.y],\r\n                    [this.X, this.y, this.X, this.Y],\r\n                    [this.X, this.Y, this.x, this.Y],\r\n                [this.x, this.Y, this.x, this.y]];\r\n            var intersections = [];\r\n            for (var i = 0; i < 4; ++i) {\r\n                var r = Rectangle.lineIntersection(x1, y1, x2, y2, sides[i][0], sides[i][1], sides[i][2], sides[i][3]);\r\n                if (r !== null) intersections.push({ x: r.x, y: r.y });\r\n            }\r\n            return intersections;\r\n        }\r\n\r\n        /**\r\n         * return any intersection points between a line extending from the centre of this rectangle to the given point,\r\n         *  and the sides of this rectangle\r\n         * @method lineIntersection\r\n         * @param x2 number second x coord of line\r\n         * @param y2 number second y coord of line\r\n         * @return any intersection points found\r\n         */\r\n        rayIntersection(x2: number, y2: number): Point {\r\n            var ints = this.lineIntersections(this.cx(), this.cy(), x2, y2);\r\n            return ints.length > 0 ? ints[0] : null;\r\n        }\r\n\r\n        vertices(): Point[] {\r\n            return [\r\n                { x: this.x, y: this.y },\r\n                { x: this.X, y: this.y },\r\n                { x: this.X, y: this.Y },\r\n                { x: this.x, y: this.Y }];\r\n        }\r\n\r\n        static lineIntersection(\r\n            x1: number, y1: number,\r\n            x2: number, y2: number,\r\n            x3: number, y3: number,\r\n            x4: number, y4: number): Point {\r\n            var dx12 = x2 - x1, dx34 = x4 - x3,\r\n                dy12 = y2 - y1, dy34 = y4 - y3,\r\n                denominator = dy34 * dx12 - dx34 * dy12;\r\n            if (denominator == 0) return null;\r\n            var dx31 = x1 - x3, dy31 = y1 - y3,\r\n                numa = dx34 * dy31 - dy34 * dx31,\r\n                a = numa / denominator,\r\n                numb = dx12 * dy31 - dy12 * dx31,\r\n                b = numb / denominator;\r\n            if (a >= 0 && a <= 1 && b >= 0 && b <= 1) {\r\n                return {\r\n                    x: x1 + a * dx12,\r\n                    y: y1 + a * dy12\r\n                };\r\n            }\r\n            return null;\r\n        }\r\n\r\n        inflate(pad: number): Rectangle {\r\n            return new Rectangle(this.x - pad, this.X + pad, this.y - pad, this.Y + pad);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Returns the endpoints of a line that connects the centre of two rectangles.\r\n     * @param {Rectangle} [source] The source Rectangle.\r\n     * @param {Rectangle} [target] The target Rectangle.\r\n     * @param {number} [ah] The size of the arrow head, a distance to shorten the\r\n     *                      line by.\r\n     * @return An object with three point properties, the intersection with the\r\n     *         source rectangle (sourceIntersection), the intersection with then\r\n     *         target rectangle (targetIntersection), and the point an arrow\r\n     *         head of the specified size would need to start (arrowStart).\r\n     */\r\n    export function makeEdgeBetween(source: Rectangle, target: Rectangle, ah: number)\r\n        : { sourceIntersection: Point; targetIntersection: Point; arrowStart: Point } {\r\n        const si = source.rayIntersection(target.cx(), target.cy()) || { x: source.cx(), y: source.cy() },\r\n            ti = target.rayIntersection(source.cx(), source.cy()) || { x: target.cx(), y: target.cy() },\r\n            dx = ti.x - si.x,\r\n            dy = ti.y - si.y,\r\n            l = Math.sqrt(dx * dx + dy * dy), al = l - ah;\r\n        return {\r\n            sourceIntersection: si,\r\n            targetIntersection: ti,\r\n            arrowStart: { x: si.x + al * dx / l, y: si.y + al * dy / l }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Returns the intersection of a line from the given point to the centre\r\n     * of the target rectangle where it intersects the rectanngle.\r\n     * @param [source] The source point.\r\n     * @param {Rectangle} [target] The target Rectangle.\r\n     * @param {number} [ah] The size of the arrow head, a distance to shorten the\r\n     *                      line by.\r\n     * @return The point an arrow head of the specified size would need to start.\r\n     */\r\n    export function makeEdgeTo(s: { x: number; y: number }, target: Rectangle, ah: number): Point {\r\n        var ti = target.rayIntersection(s.x, s.y);\r\n        if (!ti) ti = { x: target.cx(), y: target.cy() };\r\n        var dx = ti.x - s.x,\r\n            dy = ti.y - s.y,\r\n            l = Math.sqrt(dx * dx + dy * dy);\r\n        return { x: ti.x - ah * dx / l, y: ti.y - ah * dy / l };\r\n    }\r\n\r\n    class Node {\r\n        prev: RBTree<Node>;\r\n        next: RBTree<Node>;\r\n\r\n        constructor(public v: Variable, public r: Rectangle, public pos: number) {\r\n            this.prev = makeRBTree();\r\n            this.next = makeRBTree();\r\n        }\r\n    }\r\n\r\n    class Event {\r\n        constructor(public isOpen: boolean, public v: Node, public pos: number) {}\r\n    }\r\n\r\n    function compareEvents(a: Event, b: Event): number {\r\n        if (a.pos > b.pos) {\r\n            return 1;\r\n        }\r\n        if (a.pos < b.pos) {\r\n            return -1;\r\n        }\r\n        if (a.isOpen) {\r\n            // open must come before close\r\n            return -1;\r\n        }\r\n        if (b.isOpen) {\r\n            // open must come before close\r\n            return 1;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    function makeRBTree(): RBTree<Node> {\r\n        return new RBTree<Node>((a, b) => a.pos - b.pos);\r\n    }\r\n\r\n    interface RectAccessors {\r\n        getCentre: (r: Rectangle) => number;\r\n        getOpen: (r: Rectangle) => number;\r\n        getClose: (r: Rectangle) => number;\r\n        getSize: (r: Rectangle) => number;\r\n        makeRect: (open: number, close: number, center: number, size: number) => Rectangle;\r\n        findNeighbours: (v: Node, scanline: RBTree<Node>) => void;\r\n    }\r\n\r\n    var xRect: RectAccessors = {\r\n        getCentre: r=> r.cx(),\r\n        getOpen: r=> r.y,\r\n        getClose: r=> r.Y,\r\n        getSize: r=> r.width(),\r\n        makeRect: (open, close, center, size) => new Rectangle(center - size / 2, center + size / 2, open, close) ,\r\n        findNeighbours: findXNeighbours\r\n    };\r\n\r\n    var yRect: RectAccessors = {\r\n        getCentre: r=> r.cy(),\r\n        getOpen: r=> r.x,\r\n        getClose: r=> r.X,\r\n        getSize: r=> r.height(),\r\n        makeRect: (open, close, center, size) => new Rectangle(open, close, center - size / 2, center + size / 2),\r\n        findNeighbours: findYNeighbours\r\n    };\r\n\r\n    function generateGroupConstraints(root: ProjectionGroup, f: RectAccessors, minSep: number, isContained: boolean = false): Constraint[]\r\n    {\r\n        var padding = root.padding,\r\n            gn = typeof root.groups !== 'undefined' ? root.groups.length : 0,\r\n            ln = typeof root.leaves !== 'undefined' ? root.leaves.length : 0,\r\n            childConstraints: Constraint[] = !gn ? []\r\n            : root.groups.reduce((ccs: Constraint[], g) => ccs.concat(generateGroupConstraints(g, f, minSep, true)), []),\r\n            n = (isContained ? 2 : 0) + ln + gn,\r\n            vs: Variable[] = new Array(n),\r\n            rs: Rectangle[] = new Array(n),\r\n            i = 0,\r\n            add = (r, v) => { rs[i] = r; vs[i++] = v };\r\n        if (isContained) {\r\n            // if this group is contained by another, then we add two dummy vars and rectangles for the borders\r\n            var b: Rectangle = root.bounds,\r\n                c = f.getCentre(b), s = f.getSize(b) / 2,\r\n                open = f.getOpen(b), close = f.getClose(b),\r\n                min = c - s + padding / 2, max = c + s - padding / 2;\r\n            root.minVar.desiredPosition = min;\r\n            add(f.makeRect(open, close, min, padding), root.minVar);\r\n            root.maxVar.desiredPosition = max;\r\n            add(f.makeRect(open, close, max, padding), root.maxVar);\r\n        }\r\n        if (ln) root.leaves.forEach(l => add(l.bounds, l.variable));\r\n        if (gn) root.groups.forEach(g => {\r\n            var b: Rectangle = g.bounds;\r\n            add(f.makeRect(f.getOpen(b), f.getClose(b), f.getCentre(b), f.getSize(b)), g.minVar);\r\n        });\r\n        var cs = generateConstraints(rs, vs, f, minSep);\r\n        if (gn) {\r\n            vs.forEach(v => { v.cOut = [], v.cIn = [] });\r\n            cs.forEach(c => { c.left.cOut.push(c), c.right.cIn.push(c) });\r\n            root.groups.forEach(g => {\r\n                var gapAdjustment = (g.padding - f.getSize(g.bounds)) / 2;\r\n                g.minVar.cIn.forEach(c => c.gap += gapAdjustment);\r\n                g.minVar.cOut.forEach(c => { c.left = g.maxVar; c.gap += gapAdjustment; });\r\n            });\r\n        }\r\n        return childConstraints.concat(cs);\r\n    }\r\n\r\n    function generateConstraints(rs: Rectangle[], vars: Variable[],\r\n        rect: RectAccessors, minSep: number): Constraint[]\r\n    {\r\n        var i, n = rs.length;\r\n        var N = 2 * n;\r\n        console.assert(vars.length >= n);\r\n        var events = new Array<Event>(N);\r\n        for (i = 0; i < n; ++i) {\r\n            var r = rs[i];\r\n            var v = new Node(vars[i], r, rect.getCentre(r));\r\n            events[i] = new Event(true, v, rect.getOpen(r));\r\n            events[i + n] = new Event(false, v, rect.getClose(r));\r\n        }\r\n        events.sort(compareEvents);\r\n        var cs = new Array<Constraint>();\r\n        var scanline = makeRBTree();\r\n        for (i = 0; i < N; ++i) {\r\n            var e = events[i];\r\n            var v = e.v;\r\n            if (e.isOpen) {\r\n                scanline.insert(v);\r\n                rect.findNeighbours(v, scanline);\r\n            } else {\r\n                // close event\r\n                scanline.remove(v);\r\n                var makeConstraint = (l, r) => {\r\n                    var sep = (rect.getSize(l.r) + rect.getSize(r.r)) / 2 + minSep;\r\n                    cs.push(new Constraint(l.v, r.v, sep));\r\n                };\r\n                var visitNeighbours = (forward, reverse, mkcon) => {\r\n                    var u, it = v[forward].iterator();\r\n                    while ((u = it[forward]()) !== null) {\r\n                        mkcon(u, v);\r\n                        u[reverse].remove(v);\r\n                    }\r\n                };\r\n                visitNeighbours(\"prev\", \"next\", (u, v) => makeConstraint(u, v));\r\n                visitNeighbours(\"next\", \"prev\", (u, v) => makeConstraint(v, u));\r\n            }\r\n        }\r\n        console.assert(scanline.size === 0);\r\n        return cs;\r\n    }\r\n\r\n    function findXNeighbours(v: Node, scanline: RBTree<Node>): void {\r\n        var f = (forward, reverse) => {\r\n            var it = scanline.findIter(v);\r\n            var u;\r\n            while ((u = it[forward]()) !== null) {\r\n                var uovervX = u.r.overlapX(v.r);\r\n                if (uovervX <= 0 || uovervX <= u.r.overlapY(v.r)) {\r\n                    v[forward].insert(u);\r\n                    u[reverse].insert(v);\r\n                }\r\n                if (uovervX <= 0) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        f(\"next\", \"prev\");\r\n        f(\"prev\", \"next\");\r\n    }\r\n\r\n    function findYNeighbours(v: Node, scanline: RBTree<Node>): void {\r\n        var f = (forward, reverse) => {\r\n            var u = scanline.findIter(v)[forward]();\r\n            if (u !== null && u.r.overlapX(v.r) > 0) {\r\n                v[forward].insert(u);\r\n                u[reverse].insert(v);\r\n            }\r\n        }\r\n        f(\"next\", \"prev\");\r\n        f(\"prev\", \"next\");\r\n    }\r\n\r\n    export function generateXConstraints(rs: Rectangle[], vars: Variable[]): Constraint[] {\r\n        return generateConstraints(rs, vars, xRect, 1e-6);\r\n    }\r\n\r\n    export function generateYConstraints(rs: Rectangle[], vars: Variable[]): Constraint[] {\r\n        return generateConstraints(rs, vars, yRect, 1e-6);\r\n    }\r\n\r\n    export function generateXGroupConstraints(root: ProjectionGroup): Constraint[] {\r\n        return generateGroupConstraints(root, xRect, 1e-6);\r\n    }\r\n\r\n    export function generateYGroupConstraints(root: ProjectionGroup): Constraint[] {\r\n        return generateGroupConstraints(root, yRect, 1e-6);\r\n    }\r\n\r\n    export function removeOverlaps(rs: Rectangle[]): void {\r\n        var vs = rs.map(r => new Variable(r.cx()));\r\n        var cs = generateXConstraints(rs, vs);\r\n        var solver = new Solver(vs, cs);\r\n        solver.solve();\r\n        vs.forEach((v, i) => rs[i].setXCentre(v.position()));\r\n        vs = rs.map(r=> new Variable(r.cy()));\r\n        cs = generateYConstraints(rs, vs);\r\n        solver = new Solver(vs, cs);\r\n        solver.solve();\r\n        vs.forEach((v, i) => rs[i].setYCentre(v.position()));\r\n    }\r\n\r\n    export interface GraphNode extends Leaf {\r\n        fixed: boolean;\r\n        fixedWeight?: number;\r\n        width: number;\r\n        height: number;\r\n        x: number;\r\n        y: number;\r\n        px: number;\r\n        py: number;\r\n    }\r\n\r\n    export class IndexedVariable extends Variable {\r\n        constructor(public index: number, w: number) {\r\n            super(0, w);\r\n        }\r\n    }\r\n\r\n    export class Projection {\r\n        private xConstraints: Constraint[];\r\n        private yConstraints: Constraint[];\r\n        private variables: Variable[];\r\n\r\n        constructor(private nodes: GraphNode[],\r\n            private groups: ProjectionGroup[],\r\n            private rootGroup: ProjectionGroup = null,\r\n            constraints: any[]= null,\r\n            private avoidOverlaps: boolean = false)\r\n        {\r\n            this.variables = nodes.map((v, i) => {\r\n                return v.variable = new IndexedVariable(i, 1);\r\n            });\r\n\r\n            if (constraints) this.createConstraints(constraints);\r\n\r\n            if (avoidOverlaps && rootGroup && typeof rootGroup.groups !== 'undefined') {\r\n                nodes.forEach(v => {\r\n\t\t\t\t\tif (!v.width || !v.height)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t//If undefined, default to nothing\r\n\t\t\t\t\t\tv.bounds = new Rectangle(v.x, v.x, v.y, v.y);\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n                    var w2 = v.width / 2, h2 = v.height / 2;\r\n                    v.bounds = new Rectangle(v.x - w2, v.x + w2, v.y - h2, v.y + h2);\r\n                });\r\n                computeGroupBounds(rootGroup);\r\n                var i = nodes.length;\r\n                groups.forEach(g => {\r\n                    this.variables[i] = g.minVar = new IndexedVariable(i++, typeof g.stiffness !== \"undefined\" ? g.stiffness : 0.01);\r\n                    this.variables[i] = g.maxVar = new IndexedVariable(i++, typeof g.stiffness !== \"undefined\" ? g.stiffness : 0.01);\r\n                });\r\n            }\r\n        }\r\n\r\n\r\n        private createSeparation(c: any) : Constraint {\r\n            return new Constraint(\r\n                this.nodes[c.left].variable,\r\n                this.nodes[c.right].variable,\r\n                c.gap,\r\n                typeof c.equality !== \"undefined\" ? c.equality : false);\r\n        }\r\n\r\n        // simple satisfaction of alignment constraints to ensure initial feasibility\r\n        private makeFeasible(c: any) {\r\n            if (!this.avoidOverlaps) return;\r\n            // sort nodes in constraint by position (along \"guideline\")\r\n            var axis = 'x', dim = 'width';\r\n            if (c.axis === 'x') axis = 'y', dim = 'height';\r\n            var vs: GraphNode[] = c.offsets.map(o => this.nodes[o.node]).sort((a, b) => a[axis] - b[axis]);\r\n            var p: GraphNode = null;\r\n            vs.forEach(v => {\r\n                // if two nodes overlap then shove the second one along\r\n                if (p) {\r\n                    let nextPos = p[axis] + p[dim];\r\n                    if (nextPos > v[axis]) {\r\n                        v[axis] = nextPos;\r\n                    }\r\n                }\r\n                p = v;\r\n            });\r\n        }\r\n\r\n        private createAlignment(c: any) {\r\n            var u = this.nodes[c.offsets[0].node].variable;\r\n            this.makeFeasible(c);\r\n            var cs = c.axis === 'x' ? this.xConstraints : this.yConstraints;\r\n            c.offsets.slice(1).forEach(o => {\r\n                var v = this.nodes[o.node].variable;\r\n                cs.push(new Constraint(u, v, o.offset, true));\r\n            });\r\n        }\r\n\r\n        private createConstraints(constraints: any[]) {\r\n            var isSep = c => typeof c.type === 'undefined' || c.type === 'separation';\r\n            this.xConstraints = constraints\r\n                .filter(c => c.axis === \"x\" && isSep(c))\r\n                .map(c => this.createSeparation(c));\r\n            this.yConstraints = constraints\r\n                .filter(c => c.axis === \"y\" && isSep(c))\r\n                .map(c => this.createSeparation(c));\r\n            constraints\r\n                .filter(c => c.type === 'alignment')\r\n                .forEach(c => this.createAlignment(c));\r\n        }\r\n\r\n        private setupVariablesAndBounds(x0: number[], y0: number[], desired: number[], getDesired: (v: GraphNode) => number) {\r\n            this.nodes.forEach((v, i) => {\r\n                if (v.fixed) {\r\n                    v.variable.weight = v.fixedWeight ? v.fixedWeight : 1000;\r\n                    desired[i] = getDesired(v);\r\n                } else {\r\n                    v.variable.weight = 1;\r\n                }\r\n                var w = (v.width || 0) / 2, h = (v.height || 0) / 2;\r\n                var ix = x0[i], iy = y0[i];\r\n                v.bounds = new Rectangle(ix - w, ix + w, iy - h, iy + h);\r\n            });\r\n        }\r\n\r\n        xProject(x0: number[], y0: number[], x: number[]) {\r\n            if (!this.rootGroup && !(this.avoidOverlaps || this.xConstraints)) return;\r\n            this.project(x0, y0, x0, x, v=> v.px, this.xConstraints, generateXGroupConstraints,\r\n                v => v.bounds.setXCentre(x[(<IndexedVariable>v.variable).index] = v.variable.position()),\r\n                g => {\r\n                    var xmin = x[(<IndexedVariable>g.minVar).index] = g.minVar.position();\r\n                    var xmax = x[(<IndexedVariable>g.maxVar).index] = g.maxVar.position();\r\n                    var p2 = g.padding / 2;\r\n                    g.bounds.x = xmin - p2;\r\n                    g.bounds.X = xmax + p2;\r\n                });\r\n        }\r\n\r\n        yProject(x0: number[], y0: number[], y: number[]) {\r\n            if (!this.rootGroup && !this.yConstraints) return;\r\n            this.project(x0, y0, y0, y, v=> v.py, this.yConstraints, generateYGroupConstraints,\r\n                v => v.bounds.setYCentre(y[(<IndexedVariable>v.variable).index] = v.variable.position()),\r\n                g => {\r\n                    var ymin = y[(<IndexedVariable>g.minVar).index] = g.minVar.position();\r\n                    var ymax = y[(<IndexedVariable>g.maxVar).index] = g.maxVar.position();\r\n                    var p2 = g.padding / 2;\r\n                    g.bounds.y = ymin - p2;;\r\n                    g.bounds.Y = ymax + p2;\r\n                });\r\n        }\r\n\r\n        projectFunctions(): { (x0: number[], y0: number[], r: number[]): void }[]{\r\n            return [\r\n                (x0, y0, x) => this.xProject(x0, y0, x),\r\n                (x0, y0, y) => this.yProject(x0, y0, y)\r\n            ];\r\n        }\r\n\r\n        private project(x0: number[], y0: number[], start: number[], desired: number[],\r\n            getDesired: (v: GraphNode) => number,\r\n            cs: Constraint[],\r\n            generateConstraints: (g: ProjectionGroup) => Constraint[],\r\n            updateNodeBounds: (v: GraphNode) => any,\r\n            updateGroupBounds: (g: ProjectionGroup) => any)\r\n        {\r\n            this.setupVariablesAndBounds(x0, y0, desired, getDesired);\r\n            if (this.rootGroup && this.avoidOverlaps) {\r\n                computeGroupBounds(this.rootGroup);\r\n                cs = cs.concat(generateConstraints(this.rootGroup));\r\n            }\r\n            this.solve(this.variables, cs, start, desired);\r\n            this.nodes.forEach(updateNodeBounds);\r\n            if (this.rootGroup && this.avoidOverlaps) {\r\n                this.groups.forEach(updateGroupBounds);\r\n                computeGroupBounds(this.rootGroup);\r\n            }\r\n        }\r\n\r\n        private solve(vs: Variable[], cs: Constraint[], starting: number[], desired: number[]) {\r\n            var solver = new Solver(vs, cs);\r\n            solver.setStartingPositions(starting);\r\n            solver.setDesiredPositions(desired);\r\n            solver.solve();\r\n        }\r\n    }\r\n","\r\nexport class PairingHeap<T> {\r\n    private subheaps : PairingHeap<T>[];\r\n    // from: https://gist.github.com/nervoussystem\r\n    //{elem:object, subheaps:[array of heaps]}\r\n    constructor(public elem: T) {\r\n        this.subheaps = [];\r\n    }\r\n\r\n    public toString(selector) : string {\r\n        var str = \"\", needComma = false;\r\n        for (var i = 0; i < this.subheaps.length; ++i) {\r\n            var subheap: PairingHeap<T> = this.subheaps[i];\r\n            if (!subheap.elem) {\r\n                needComma = false;\r\n                continue;\r\n            }\r\n            if (needComma) {\r\n                str = str + \",\";\r\n            }\r\n            str = str + subheap.toString(selector);\r\n            needComma = true;\r\n        }\r\n        if (str !== \"\") {\r\n            str = \"(\" + str + \")\";\r\n        }\r\n        return (this.elem ? selector(this.elem) : \"\") + str;\r\n    }\r\n\r\n    public forEach(f) {\r\n        if (!this.empty()) {\r\n            f(this.elem, this);\r\n            this.subheaps.forEach(s => s.forEach(f));\r\n        }\r\n    }\r\n\r\n    public count(): number {\r\n        return this.empty() ? 0 : 1 + this.subheaps.reduce((n: number, h: PairingHeap<T>) => {\r\n            return n + h.count();\r\n        }, 0);\r\n    }\r\n\r\n    public min() : T {\r\n        return this.elem;\r\n    }\r\n\r\n    public empty() : boolean {\r\n        return this.elem == null;\r\n    }\r\n\r\n    public contains(h: PairingHeap<T>): boolean {\r\n        if (this === h) return true;\r\n        for (var i = 0; i < this.subheaps.length; i++) {\r\n            if (this.subheaps[i].contains(h)) return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    public isHeap(lessThan: (a: T, b: T) => boolean): boolean {\r\n        return this.subheaps.every(h=> lessThan(this.elem, h.elem) && h.isHeap(lessThan));\r\n    }\r\n\r\n    public insert(obj : T, lessThan) : PairingHeap<T> {\r\n        return this.merge(new PairingHeap<T>(obj), lessThan);\r\n    }\r\n\r\n    public merge(heap2: PairingHeap<T>, lessThan): PairingHeap<T> {\r\n        if (this.empty()) return heap2;\r\n        else if (heap2.empty()) return this;\r\n        else if (lessThan(this.elem, heap2.elem)) {\r\n            this.subheaps.push(heap2);\r\n            return this;\r\n        } else {\r\n            heap2.subheaps.push(this);\r\n            return heap2;\r\n        }\r\n    }\r\n\r\n    public removeMin(lessThan: (a: T, b: T) => boolean): PairingHeap<T> {\r\n        if (this.empty()) return null;\r\n        else return this.mergePairs(lessThan);\r\n    }\r\n\r\n    public mergePairs(lessThan: (a: T, b: T) => boolean) : PairingHeap<T> {\r\n        if (this.subheaps.length == 0) return new PairingHeap<T>(null);\r\n        else if (this.subheaps.length == 1) { return this.subheaps[0]; }\r\n        else {\r\n            var firstPair = this.subheaps.pop().merge(this.subheaps.pop(), lessThan);\r\n            var remaining = this.mergePairs(lessThan);\r\n            return firstPair.merge(remaining, lessThan);\r\n        }\r\n    }\r\n    public decreaseKey(subheap: PairingHeap<T>, newValue: T, setHeapNode: (e: T, h: PairingHeap<T>)=>void, lessThan: (a: T, b: T) => boolean): PairingHeap<T> {\r\n        var newHeap = subheap.removeMin(lessThan);\r\n        //reassign subheap values to preserve tree\r\n        subheap.elem = newHeap.elem;\r\n        subheap.subheaps = newHeap.subheaps;\r\n        if (setHeapNode !== null && newHeap.elem !== null) {\r\n            setHeapNode(subheap.elem, subheap);\r\n        }\r\n        var pairingNode = new PairingHeap(newValue);\r\n        if (setHeapNode !== null) {\r\n            setHeapNode(newValue, pairingNode);\r\n        }\r\n        return this.merge(pairingNode, lessThan);\r\n    }\r\n}\r\n\r\n/**\r\n * @class PriorityQueue a min priority queue backed by a pairing heap\r\n */\r\nexport class PriorityQueue<T> {\r\n    private root : PairingHeap<T>;\r\n    constructor(private lessThan: (a: T, b: T) => boolean) { }\r\n    /**\r\n     * @method top\r\n     * @return the top element (the min element as defined by lessThan)\r\n     */\r\n    public top() : T {\r\n        if (this.empty()) { return null; }\r\n        return this.root.elem;\r\n    }\r\n    /**\r\n     * @method push\r\n     * put things on the heap\r\n     */\r\n    public push(...args: T[]): PairingHeap<T> {\r\n        var pairingNode;\r\n        for (var i = 0, arg; arg=args[i]; ++i) {\r\n            pairingNode = new PairingHeap(arg);\r\n            this.root = this.empty() ?\r\n                pairingNode : this.root.merge(pairingNode, this.lessThan);\r\n        }\r\n        return pairingNode;\r\n    }\r\n    /**\r\n     * @method empty\r\n     * @return true if no more elements in queue\r\n     */\r\n    public empty(): boolean {\r\n        return !this.root || !this.root.elem;\r\n    }\r\n    /**\r\n     * @method isHeap check heap condition (for testing)\r\n     * @return true if queue is in valid state\r\n     */\r\n    public isHeap(): boolean {\r\n        return this.root.isHeap(this.lessThan);\r\n    }\r\n    /**\r\n     * @method forEach apply f to each element of the queue\r\n     * @param f function to apply\r\n     */\r\n    public forEach(f) {\r\n        this.root.forEach(f);\r\n    }\r\n    /**\r\n     * @method pop remove and return the min element from the queue\r\n     */\r\n    public pop(): T {\r\n        if (this.empty()) {\r\n            return null;\r\n        }\r\n        var obj = this.root.min();\r\n        this.root = this.root.removeMin(this.lessThan);\r\n        return obj;\r\n    }\r\n    /**\r\n     * @method reduceKey reduce the key value of the specified heap node\r\n     */\r\n    public reduceKey(heapNode: PairingHeap<T>, newKey: T, setHeapNode: (e: T, h: PairingHeap<T>)=>void = null): void {\r\n        this.root = this.root.decreaseKey(heapNode, newKey, setHeapNode, this.lessThan);\r\n    }\r\n    public toString(selector) {\r\n        return this.root.toString(selector);\r\n    }\r\n    /**\r\n     * @method count\r\n     * @return number of elements in queue\r\n     */\r\n    public count() {\r\n        return this.root.count();\r\n    }\r\n}\r\n","import {PairingHeap, PriorityQueue} from './pqueue'\r\n\r\nclass Neighbour {\r\n    constructor(public id: number, public distance: number) { }\r\n}\r\n\r\nclass Node {\r\n    constructor(public id: number) {\r\n        this.neighbours = [];\r\n    }\r\n    neighbours: Neighbour[];\r\n    d: number;\r\n    prev: Node;\r\n    q: PairingHeap<Node>;\r\n}\r\n\r\nclass QueueEntry {\r\n    constructor(public node: Node, public prev: QueueEntry, public d: number) {}\r\n}\r\n\r\n/**\r\n * calculates all-pairs shortest paths or shortest paths from a single node\r\n * @class Calculator\r\n * @constructor\r\n * @param n {number} number of nodes\r\n * @param es {Edge[]} array of edges\r\n */\r\nexport class Calculator<Link> {\r\n    private neighbours: Node[];\r\n\r\n    constructor(public n: number, public es: Link[], getSourceIndex: (l: Link) => number, getTargetIndex: (l: Link) => number, getLength: (l: Link) => number) {\r\n        this.neighbours = new Array(this.n);\r\n        var i = this.n; while (i--) this.neighbours[i] = new Node(i);\r\n\r\n        i = this.es.length; while (i--) {\r\n            var e = this.es[i];\r\n            var u: number = getSourceIndex(e), v: number = getTargetIndex(e);\r\n            var d = getLength(e);\r\n            this.neighbours[u].neighbours.push(new Neighbour(v, d));\r\n            this.neighbours[v].neighbours.push(new Neighbour(u, d));\r\n        }\r\n    }\r\n\r\n    /**\r\n     * compute shortest paths for graph over n nodes with edges an array of source/target pairs\r\n     * edges may optionally have a length attribute.  1 is the default.\r\n     * Uses Johnson's algorithm.\r\n     *\r\n     * @method DistanceMatrix\r\n     * @return the distance matrix\r\n     */\r\n    DistanceMatrix(): number[][] {\r\n        var D = new Array(this.n);\r\n        for (var i = 0; i < this.n; ++i) {\r\n            D[i] = this.dijkstraNeighbours(i);\r\n        }\r\n        return D;\r\n    }\r\n\r\n    /**\r\n     * get shortest paths from a specified start node\r\n     * @method DistancesFromNode\r\n     * @param start node index\r\n     * @return array of path lengths\r\n     */\r\n    DistancesFromNode(start: number): number[] {\r\n        return this.dijkstraNeighbours(start);\r\n    }\r\n\r\n    PathFromNodeToNode(start: number, end: number): number[] {\r\n        return this.dijkstraNeighbours(start, end);\r\n    }\r\n\r\n    // find shortest path from start to end, with the opportunity at\r\n    // each edge traversal to compute a custom cost based on the\r\n    // previous edge.  For example, to penalise bends.\r\n    PathFromNodeToNodeWithPrevCost(\r\n        start: number,\r\n        end: number,\r\n        prevCost: (u:number,v:number,w:number)=>number): number[]\r\n    {\r\n        var q = new PriorityQueue<QueueEntry>((a, b) => a.d <= b.d),\r\n            u: Node = this.neighbours[start],\r\n            qu: QueueEntry = new QueueEntry(u,null,0),\r\n            visitedFrom = {};\r\n        q.push(qu);\r\n        while(!q.empty()) {\r\n            qu = q.pop();\r\n            u = qu.node;\r\n            if (u.id === end) {\r\n                break;\r\n            }\r\n            var i = u.neighbours.length; while (i--) {\r\n                var neighbour = u.neighbours[i],\r\n                    v = this.neighbours[neighbour.id];\r\n\r\n                // don't double back\r\n                if (qu.prev && v.id === qu.prev.node.id) continue;\r\n\r\n                // don't retraverse an edge if it has already been explored\r\n                // from a lower cost route\r\n                var viduid = v.id + ',' + u.id;\r\n                if(viduid in visitedFrom && visitedFrom[viduid] <= qu.d)\r\n                    continue;\r\n\r\n                var cc = qu.prev ? prevCost(qu.prev.node.id, u.id, v.id) : 0,\r\n                    t = qu.d + neighbour.distance + cc;\r\n\r\n                // store cost of this traversal\r\n                visitedFrom[viduid] = t;\r\n                q.push(new QueueEntry(v, qu, t));\r\n            }\r\n        }\r\n        var path:number[] = [];\r\n        while (qu.prev) {\r\n            qu = qu.prev;\r\n            path.push(qu.node.id);\r\n        }\r\n        return path;\r\n    }\r\n\r\n    private dijkstraNeighbours(start: number, dest: number = -1): number[] {\r\n        var q = new PriorityQueue<Node>((a, b) => a.d <= b.d),\r\n            i = this.neighbours.length,\r\n            d: number[] = new Array(i);\r\n        while (i--) {\r\n            var node: Node = this.neighbours[i];\r\n            node.d = i === start ? 0 : Number.POSITIVE_INFINITY;\r\n            node.q = q.push(node);\r\n        }\r\n        while (!q.empty()) {\r\n            // console.log(q.toString(function (u) { return u.id + \"=\" + (u.d === Number.POSITIVE_INFINITY ? \"\\u221E\" : u.d.toFixed(2) )}));\r\n            var u = q.pop();\r\n            d[u.id] = u.d;\r\n            if (u.id === dest) {\r\n                var path: number[] = [];\r\n                var v = u;\r\n                while (typeof v.prev !== 'undefined') {\r\n                    path.push(v.prev.id);\r\n                    v = v.prev;\r\n                }\r\n                return path;\r\n            }\r\n            i = u.neighbours.length; while (i--) {\r\n                var neighbour = u.neighbours[i];\r\n                var v = this.neighbours[neighbour.id];\r\n                var t = u.d + neighbour.distance;\r\n                if (u.d !== Number.MAX_VALUE && v.d > t) {\r\n                    v.d = t;\r\n                    v.prev = u;\r\n                    q.reduceKey(v.q, v, (e,q)=>e.q = q);\r\n                }\r\n            }\r\n        }\r\n        return d;\r\n    }\r\n}\r\n","import {Rectangle} from './rectangle'\r\n    export class Point {\r\n        x: number;\r\n        y: number;\r\n    }\r\n\r\n    export class LineSegment {\r\n        constructor(public x1: number, public y1: number, public x2: number, public y2: number) { }\r\n    }\r\n\r\n    export class PolyPoint extends Point {\r\n        polyIndex: number;\r\n    }\r\n\r\n    /** tests if a point is Left|On|Right of an infinite line.\r\n     * @param points P0, P1, and P2\r\n     * @return >0 for P2 left of the line through P0 and P1\r\n     *            =0 for P2 on the line\r\n     *            <0 for P2 right of the line\r\n     */\r\n    export function isLeft(P0: Point, P1: Point, P2: Point): number {\r\n        return (P1.x - P0.x) * (P2.y - P0.y) - (P2.x - P0.x) * (P1.y - P0.y);\r\n    }\r\n\r\n    function above(p: Point, vi: Point, vj: Point): boolean {\r\n        return isLeft(p, vi, vj) > 0;\r\n    }\r\n\r\n    function below(p: Point, vi: Point, vj: Point): boolean {\r\n        return isLeft(p, vi, vj) < 0;\r\n    }\r\n\r\n\r\n    /**\r\n     * returns the convex hull of a set of points using Andrew's monotone chain algorithm\r\n     * see: http://geomalgorithms.com/a10-_hull-1.html#Monotone%20Chain\r\n     * @param S array of points\r\n     * @return the convex hull as an array of points\r\n     */\r\n    export function ConvexHull(S: Point[]): Point[] {\r\n        var P = S.slice(0).sort((a, b) => a.x !== b.x ? b.x - a.x : b.y - a.y);\r\n        var n = S.length, i;\r\n        var minmin = 0;\r\n        var xmin = P[0].x;\r\n        for (i = 1; i < n; ++i) {\r\n            if (P[i].x !== xmin) break;\r\n        }\r\n        var minmax = i - 1;\r\n        var H: Point[] = [];\r\n        H.push(P[minmin]); // push minmin point onto stack\r\n        if (minmax === n - 1) { // degenerate case: all x-coords == xmin\r\n            if (P[minmax].y !== P[minmin].y) // a  nontrivial segment\r\n                H.push(P[minmax]);\r\n        } else {\r\n            // Get the indices of points with max x-coord and min|max y-coord\r\n            var maxmin, maxmax = n - 1;\r\n            var xmax = P[n - 1].x;\r\n            for (i = n - 2; i >= 0; i--)\r\n                if (P[i].x !== xmax) break;\r\n            maxmin = i + 1;\r\n\r\n            // Compute the lower hull on the stack H\r\n            i = minmax;\r\n            while (++i <= maxmin) {\r\n                // the lower line joins P[minmin]  with P[maxmin]\r\n                if (isLeft(P[minmin], P[maxmin], P[i]) >= 0 && i < maxmin)\r\n                    continue; // ignore P[i] above or on the lower line\r\n\r\n                while (H.length > 1) // there are at least 2 points on the stack\r\n                {\r\n                    // test if  P[i] is left of the line at the stack top\r\n                    if (isLeft(H[H.length - 2], H[H.length - 1], P[i]) > 0)\r\n                        break; // P[i] is a new hull  vertex\r\n                    else\r\n                        H.length -= 1; // pop top point off  stack\r\n                }\r\n                if (i != minmin) H.push(P[i]);\r\n            }\r\n\r\n            // Next, compute the upper hull on the stack H above the bottom hull\r\n            if (maxmax != maxmin) // if  distinct xmax points\r\n                H.push(P[maxmax]); // push maxmax point onto stack\r\n            var bot = H.length; // the bottom point of the upper hull stack\r\n            i = maxmin;\r\n            while (--i >= minmax) {\r\n                // the upper line joins P[maxmax]  with P[minmax]\r\n                if (isLeft(P[maxmax], P[minmax], P[i]) >= 0 && i > minmax)\r\n                    continue; // ignore P[i] below or on the upper line\r\n\r\n                while (H.length > bot) // at least 2 points on the upper stack\r\n                {\r\n                    // test if  P[i] is left of the line at the stack top\r\n                    if (isLeft(H[H.length - 2], H[H.length - 1], P[i]) > 0)\r\n                        break; // P[i] is a new hull  vertex\r\n                    else\r\n                        H.length -= 1; // pop top point off  stack\r\n                }\r\n                if (i != minmin) H.push(P[i]); // push P[i] onto stack\r\n            }\r\n        }\r\n        return H;\r\n    }\r\n\r\n    // apply f to the points in P in clockwise order around the point p\r\n    export function clockwiseRadialSweep(p: Point, P: Point[], f: (p: Point) => void) {\r\n        P.slice(0).sort(\r\n            (a, b) => Math.atan2(a.y - p.y, a.x - p.x) - Math.atan2(b.y - p.y, b.x - p.x)\r\n            ).forEach(f);\r\n    }\r\n\r\n    function nextPolyPoint(p: PolyPoint, ps: PolyPoint[]): PolyPoint {\r\n        if (p.polyIndex === ps.length - 1) return ps[0];\r\n        return ps[p.polyIndex + 1];\r\n    }\r\n\r\n    function prevPolyPoint(p: PolyPoint, ps: PolyPoint[]): PolyPoint {\r\n        if (p.polyIndex === 0) return ps[ps.length - 1];\r\n        return ps[p.polyIndex - 1];\r\n    }\r\n\r\n    // tangent_PointPolyC(): fast binary search for tangents to a convex polygon\r\n    //    Input:  P = a 2D point (exterior to the polygon)\r\n    //            n = number of polygon vertices\r\n    //            V = array of vertices for a 2D convex polygon\r\n    //    Output: rtan = index of rightmost tangent point V[rtan]\r\n    //            ltan = index of leftmost tangent point V[ltan]\r\n    function tangent_PointPolyC(P: Point, V: Point[]): { rtan: number; ltan: number } {\r\n        // Rtangent_PointPolyC and Ltangent_PointPolyC require polygon to be\r\n        // \"closed\" with the first vertex duplicated at end, so V[n-1] = V[0].\r\n        let Vclosed = V.slice(0);  // Copy V\r\n        Vclosed.push(V[0]);        // Add V[0] at end\r\n\r\n        return { rtan: Rtangent_PointPolyC(P, Vclosed), ltan: Ltangent_PointPolyC(P, Vclosed) };\r\n    }\r\n\r\n\r\n    // Rtangent_PointPolyC(): binary search for convex polygon right tangent\r\n    //    Input:  P = a 2D point (exterior to the polygon)\r\n    //            n = number of polygon vertices\r\n    //            V = array of vertices for a 2D convex polygon with first\r\n    //                vertex duplicated as last, so V[n-1] = V[0]\r\n    //    Return: index \"i\" of rightmost tangent point V[i]\r\n    function Rtangent_PointPolyC(P: Point, V: Point[]): number {\r\n        var n = V.length - 1;\r\n\r\n        // use binary search for large convex polygons\r\n        var a: number, b: number, c: number;            // indices for edge chain endpoints\r\n        var upA: boolean, dnC: boolean;           // test for up direction of edges a and c\r\n\r\n        // rightmost tangent = maximum for the isLeft() ordering\r\n        // test if V[0] is a local maximum\r\n        if (below(P, V[1], V[0]) && !above(P, V[n - 1], V[0]))\r\n            return 0;               // V[0] is the maximum tangent point\r\n\r\n        for (a = 0, b = n; ;) {          // start chain = [0,n] with V[n]=V[0]\r\n            if (b - a === 1)\r\n                if (above(P, V[a], V[b]))\r\n                    return a;\r\n                else\r\n                    return b;\r\n\r\n            c = Math.floor((a + b) / 2);        // midpoint of [a,b], and 0<c<n\r\n            dnC = below(P, V[c + 1], V[c]);\r\n            if (dnC && !above(P, V[c - 1], V[c]))\r\n                return c;          // V[c] is the maximum tangent point\r\n\r\n            // no max yet, so continue with the binary search\r\n            // pick one of the two subchains [a,c] or [c,b]\r\n            upA = above(P, V[a + 1], V[a]);\r\n            if (upA) {                       // edge a points up\r\n                if (dnC)                         // edge c points down\r\n                    b = c;                           // select [a,c]\r\n                else {                           // edge c points up\r\n                    if (above(P, V[a], V[c]))     // V[a] above V[c]\r\n                        b = c;                       // select [a,c]\r\n                    else                          // V[a] below V[c]\r\n                        a = c;                       // select [c,b]\r\n                }\r\n            }\r\n            else {                           // edge a points down\r\n                if (!dnC)                        // edge c points up\r\n                    a = c;                           // select [c,b]\r\n                else {                           // edge c points down\r\n                    if (below(P, V[a], V[c]))     // V[a] below V[c]\r\n                        b = c;                       // select [a,c]\r\n                    else                          // V[a] above V[c]\r\n                        a = c;                       // select [c,b]\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    // Ltangent_PointPolyC(): binary search for convex polygon left tangent\r\n    //    Input:  P = a 2D point (exterior to the polygon)\r\n    //            n = number of polygon vertices\r\n    //            V = array of vertices for a 2D convex polygon with first\r\n    //                vertex duplicated as last, so V[n-1] = V[0]\r\n    //    Return: index \"i\" of leftmost tangent point V[i]\r\n    function Ltangent_PointPolyC(P: Point, V: Point[]): number {\r\n        var n = V.length - 1;\r\n        // use binary search for large convex polygons\r\n        var a: number, b: number, c: number;             // indices for edge chain endpoints\r\n        var dnA: boolean, dnC: boolean;           // test for down direction of edges a and c\r\n\r\n        // leftmost tangent = minimum for the isLeft() ordering\r\n        // test if V[0] is a local minimum\r\n        if (above(P, V[n - 1], V[0]) && !below(P, V[1], V[0]))\r\n            return 0;               // V[0] is the minimum tangent point\r\n\r\n        for (a = 0, b = n; ;) {          // start chain = [0,n] with V[n] = V[0]\r\n            if (b - a === 1)\r\n                if (below(P, V[a], V[b]))\r\n                    return a;\r\n                else\r\n                    return b;\r\n\r\n            c = Math.floor((a + b) / 2);        // midpoint of [a,b], and 0<c<n\r\n            dnC = below(P, V[c + 1], V[c]);\r\n            if (above(P, V[c - 1], V[c]) && !dnC)\r\n                return c;          // V[c] is the minimum tangent point\r\n\r\n            // no min yet, so continue with the binary search\r\n            // pick one of the two subchains [a,c] or [c,b]\r\n            dnA = below(P, V[a + 1], V[a]);\r\n            if (dnA) {                       // edge a points down\r\n                if (!dnC)                        // edge c points up\r\n                    b = c;                           // select [a,c]\r\n                else {                           // edge c points down\r\n                    if (below(P, V[a], V[c]))     // V[a] below V[c]\r\n                        b = c;                       // select [a,c]\r\n                    else                          // V[a] above V[c]\r\n                        a = c;                       // select [c,b]\r\n                }\r\n            }\r\n            else {                           // edge a points up\r\n                if (dnC)                         // edge c points down\r\n                    a = c;                           // select [c,b]\r\n                else {                           // edge c points up\r\n                    if (above(P, V[a], V[c]))     // V[a] above V[c]\r\n                        b = c;                       // select [a,c]\r\n                    else                          // V[a] below V[c]\r\n                        a = c;                       // select [c,b]\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    // RLtangent_PolyPolyC(): get the RL tangent between two convex polygons\r\n    //    Input:  m = number of vertices in polygon 1\r\n    //            V = array of vertices for convex polygon 1 with V[m]=V[0]\r\n    //            n = number of vertices in polygon 2\r\n    //            W = array of vertices for convex polygon 2 with W[n]=W[0]\r\n    //    Output: *t1 = index of tangent point V[t1] for polygon 1\r\n    //            *t2 = index of tangent point W[t2] for polygon 2\r\n    export function tangent_PolyPolyC(V: Point[], W: Point[], t1: (a: Point, b: Point[]) => number, t2: (a: Point, b: Point[]) => number, cmp1: (a: Point, b: Point, c: Point) => boolean, cmp2: (a: Point, b: Point, c: Point) => boolean): { t1: number; t2: number } {\r\n        var ix1: number, ix2: number;      // search indices for polygons 1 and 2\r\n\r\n        // first get the initial vertex on each polygon\r\n        ix1 = t1(W[0], V);   // right tangent from W[0] to V\r\n        ix2 = t2(V[ix1], W); // left tangent from V[ix1] to W\r\n\r\n        // ping-pong linear search until it stabilizes\r\n        var done = false;                    // flag when done\r\n        while (!done) {\r\n            done = true;                     // assume done until...\r\n            while (true) {\r\n                if (ix1 === V.length - 1) ix1 = 0;\r\n                if (cmp1(W[ix2], V[ix1], V[ix1 + 1])) break;\r\n                ++ix1;                       // get Rtangent from W[ix2] to V\r\n            }\r\n            while (true) {\r\n                if (ix2 === 0) ix2 = W.length - 1;\r\n                if (cmp2(V[ix1], W[ix2], W[ix2 - 1])) break;\r\n                --ix2;                       // get Ltangent from V[ix1] to W\r\n                done = false;                // not done if had to adjust this\r\n            }\r\n        }\r\n        return { t1: ix1, t2: ix2 };\r\n    }\r\n\r\n    export function LRtangent_PolyPolyC(V: Point[], W: Point[]): { t1: number; t2: number } {\r\n        var rl = RLtangent_PolyPolyC(W, V);\r\n        return { t1: rl.t2, t2: rl.t1 };\r\n    }\r\n\r\n    export function RLtangent_PolyPolyC(V: Point[], W: Point[]): { t1: number; t2: number } {\r\n        return tangent_PolyPolyC(V, W, Rtangent_PointPolyC, Ltangent_PointPolyC, above, below);\r\n    }\r\n\r\n    export function LLtangent_PolyPolyC(V: Point[], W: Point[]): { t1: number; t2: number } {\r\n        return tangent_PolyPolyC(V, W, Ltangent_PointPolyC, Ltangent_PointPolyC, below, below);\r\n    }\r\n\r\n    export function RRtangent_PolyPolyC(V: Point[], W: Point[]): { t1: number; t2: number } {\r\n        return tangent_PolyPolyC(V, W, Rtangent_PointPolyC, Rtangent_PointPolyC, above, above);\r\n    }\r\n\r\n    export class BiTangent {\r\n        constructor(public t1: number, public t2: number) { }\r\n    }\r\n\r\n    export class BiTangents {\r\n        rl: BiTangent;\r\n        lr: BiTangent;\r\n        ll: BiTangent;\r\n        rr: BiTangent;\r\n    }\r\n\r\n    export class TVGPoint extends Point {\r\n        vv: VisibilityVertex;\r\n    }\r\n\r\n    export class VisibilityVertex {\r\n        constructor(\r\n            public id: number,\r\n            public polyid: number,\r\n            public polyvertid: number,\r\n            public p: TVGPoint)\r\n        {\r\n            p.vv = this;\r\n        }\r\n    }\r\n\r\n    export class VisibilityEdge {\r\n        constructor(\r\n            public source: VisibilityVertex,\r\n            public target: VisibilityVertex) { }\r\n        length(): number {\r\n            var dx = this.source.p.x - this.target.p.x;\r\n            var dy = this.source.p.y - this.target.p.y;\r\n            return Math.sqrt(dx * dx + dy * dy);\r\n        }\r\n    }\r\n\r\n    export class TangentVisibilityGraph {\r\n        V: VisibilityVertex[] = [];\r\n        E: VisibilityEdge[] = [];\r\n        constructor(public P: TVGPoint[][], g0?: { V: VisibilityVertex[]; E: VisibilityEdge[] }) {\r\n            if (!g0) {\r\n                var n = P.length;\r\n                // For each node...\r\n                for (var i = 0; i < n; i++) {\r\n                    var p = P[i];\r\n                    // For each node vertex.\r\n                    for (var j = 0; j < p.length; ++j) {\r\n                        var pj = p[j],\r\n                            vv = new VisibilityVertex(this.V.length, i, j, pj);\r\n                        this.V.push(vv);\r\n                        // For the every iteration but the first, generate an\r\n                        // edge from the previous visibility vertex to the\r\n                        // current one.\r\n                        if (j > 0) this.E.push(new VisibilityEdge(p[j - 1].vv, vv));\r\n                    }\r\n                    // Add a visibility edge from the first vertex to the last.\r\n                    if (p.length > 1) this.E.push(new VisibilityEdge(p[0].vv, p[p.length - 1].vv));\r\n                }\r\n                for (var i = 0; i < n - 1; i++) {\r\n                    var Pi = P[i];\r\n                    for (var j = i + 1; j < n; j++) {\r\n                        var Pj = P[j],\r\n                            t = tangents(Pi, Pj);\r\n                        for (var q in t) {\r\n                            var c = t[q],\r\n                                source = Pi[c.t1], target = Pj[c.t2];\r\n                            this.addEdgeIfVisible(source, target, i, j);\r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                this.V = g0.V.slice(0);\r\n                this.E = g0.E.slice(0);\r\n            }\r\n        }\r\n        addEdgeIfVisible(u: TVGPoint, v: TVGPoint, i1: number, i2: number) {\r\n            if (!this.intersectsPolys(new LineSegment(u.x, u.y, v.x, v.y), i1, i2)) {\r\n                this.E.push(new VisibilityEdge(u.vv, v.vv));\r\n            }\r\n        }\r\n        addPoint(p: TVGPoint, i1: number): VisibilityVertex {\r\n            var n = this.P.length;\r\n            this.V.push(new VisibilityVertex(this.V.length, n, 0, p));\r\n            for (var i = 0; i < n; ++i) {\r\n                if (i === i1) continue;\r\n                var poly = this.P[i],\r\n                    t = tangent_PointPolyC(p, poly);\r\n                this.addEdgeIfVisible(p, poly[t.ltan], i1, i);\r\n                this.addEdgeIfVisible(p, poly[t.rtan], i1, i);\r\n            }\r\n            return p.vv;\r\n        }\r\n        private intersectsPolys(l: LineSegment, i1: number, i2: number): boolean {\r\n            for (var i = 0, n = this.P.length; i < n; ++i) {\r\n                if (i != i1 && i != i2 && intersects(l, this.P[i]).length > 0) {\r\n                    return true;\r\n                }\r\n            }\r\n            return false;\r\n        }\r\n    }\r\n\r\n    function intersects(l: LineSegment, P: Point[]) {\r\n        var ints = [];\r\n        for (var i = 1, n = P.length; i < n; ++i) {\r\n            var int = Rectangle.lineIntersection(\r\n                l.x1, l.y1,\r\n                l.x2, l.y2,\r\n                P[i - 1].x, P[i - 1].y,\r\n                P[i].x, P[i].y\r\n                );\r\n            if (int) ints.push(int);\r\n        }\r\n        return ints;\r\n    }\r\n\r\n    export function tangents(V: Point[], W: Point[]): BiTangents\r\n    {\r\n        var m = V.length - 1, n = W.length - 1;\r\n        var bt = new BiTangents();\r\n        for (var i = 0; i < m; ++i) {\r\n            for (var j = 0; j < n; ++j) {\r\n                var v1 = V[i == 0 ? m - 1 : i - 1];\r\n                var v2 = V[i];\r\n                var v3 = V[i + 1];\r\n                var w1 = W[j == 0 ? n - 1 : j - 1];\r\n                var w2 = W[j];\r\n                var w3 = W[j + 1];\r\n                var v1v2w2 = isLeft(v1, v2, w2);\r\n                var v2w1w2 = isLeft(v2, w1, w2);\r\n                var v2w2w3 = isLeft(v2, w2, w3);\r\n                var w1w2v2 = isLeft(w1, w2, v2);\r\n                var w2v1v2 = isLeft(w2, v1, v2);\r\n                var w2v2v3 = isLeft(w2, v2, v3);\r\n                if (v1v2w2 >= 0 && v2w1w2 >= 0 && v2w2w3 < 0\r\n                    && w1w2v2 >= 0 && w2v1v2 >= 0 && w2v2v3 < 0) {\r\n                        bt.ll = new BiTangent(i, j);\r\n                } else if (v1v2w2 <= 0 && v2w1w2 <= 0 && v2w2w3 > 0\r\n                    && w1w2v2 <= 0 && w2v1v2 <= 0 && w2v2v3 > 0) {\r\n                        bt.rr = new BiTangent(i, j);\r\n                } else if (v1v2w2 <= 0 && v2w1w2 > 0 && v2w2w3 <= 0\r\n                    && w1w2v2 >= 0 && w2v1v2 < 0 && w2v2v3 >= 0) {\r\n                        bt.rl = new BiTangent(i, j);\r\n                } else if (v1v2w2 >= 0 && v2w1w2 < 0 && v2w2w3 >= 0\r\n                    && w1w2v2 <= 0 && w2v1v2 > 0 && w2v2v3 <= 0) {\r\n                        bt.lr = new BiTangent(i, j);\r\n                }\r\n            }\r\n        }\r\n        return bt;\r\n    }\r\n\r\n    function isPointInsidePoly(p: Point, poly: Point[]): boolean {\r\n        for (var i = 1, n = poly.length; i < n; ++i)\r\n            if (below(poly[i - 1], poly[i], p)) return false;\r\n        return true;\r\n    }\r\n\r\n    function isAnyPInQ(p: Point[], q: Point[]): boolean {\r\n        return !p.every(v => !isPointInsidePoly(v, q));\r\n    }\r\n\r\n    export function polysOverlap(p: Point[], q: Point[]): boolean {\r\n        if (isAnyPInQ(p, q)) return true;\r\n        if (isAnyPInQ(q, p)) return true;\r\n        for (var i = 1, n = p.length; i < n; ++i) {\r\n            var v = p[i], u = p[i - 1];\r\n            if (intersects(new LineSegment(u.x, u.y, v.x, v.y), q).length > 0) return true;\r\n        }\r\n        return false;\r\n    }\r\n","    var packingOptions = {\r\n        PADDING: 10,\r\n        GOLDEN_SECTION: (1 + Math.sqrt(5)) / 2,\r\n        FLOAT_EPSILON: 0.0001,\r\n        MAX_INERATIONS: 100\r\n    };\r\n\r\n    // assign x, y to nodes while using box packing algorithm for disconnected graphs\r\n    export function applyPacking(graphs:Array<any>, w, h, node_size, desired_ratio = 1) {\r\n\r\n        var init_x = 0,\r\n            init_y = 0,\r\n\r\n            svg_width = w,\r\n            svg_height = h,\r\n\r\n            desired_ratio = typeof desired_ratio !== 'undefined' ? desired_ratio : 1,\r\n            node_size = typeof node_size !== 'undefined' ? node_size : 0,\r\n\r\n            real_width = 0,\r\n            real_height = 0,\r\n            min_width = 0,\r\n\r\n            global_bottom = 0,\r\n            line = [];\r\n\r\n        if (graphs.length == 0)\r\n            return;\r\n\r\n        /// that would take care of single nodes problem\r\n        // graphs.forEach(function (g) {\r\n        //     if (g.array.length == 1) {\r\n        //         g.array[0].x = 0;\r\n        //         g.array[0].y = 0;\r\n        //     }\r\n        // });\r\n\r\n        calculate_bb(graphs);\r\n        apply(graphs, desired_ratio);\r\n        put_nodes_to_right_positions(graphs);\r\n\r\n        // get bounding boxes for all separate graphs\r\n        function calculate_bb(graphs) {\r\n\r\n            graphs.forEach(function (g) {\r\n                calculate_single_bb(g)\r\n            });\r\n\r\n            function calculate_single_bb(graph) {\r\n                var min_x = Number.MAX_VALUE, min_y = Number.MAX_VALUE,\r\n                    max_x = 0, max_y = 0;\r\n\r\n                graph.array.forEach(function (v) {\r\n                    var w = typeof v.width !== 'undefined' ? v.width : node_size;\r\n                    var h = typeof v.height !== 'undefined' ? v.height : node_size;\r\n                    w /= 2;\r\n                    h /= 2;\r\n                    max_x = Math.max(v.x + w, max_x);\r\n                    min_x = Math.min(v.x - w, min_x);\r\n                    max_y = Math.max(v.y + h, max_y);\r\n                    min_y = Math.min(v.y - h, min_y);\r\n                });\r\n\r\n                graph.width = max_x - min_x;\r\n                graph.height = max_y - min_y;\r\n            }\r\n        }\r\n\r\n        //function plot(data, left, right, opt_x, opt_y) {\r\n        //    // plot the cost function\r\n        //    var plot_svg = d3.select(\"body\").append(\"svg\")\r\n        //        .attr(\"width\", function () { return 2 * (right - left); })\r\n        //        .attr(\"height\", 200);\r\n\r\n\r\n        //    var x = d3.time.scale().range([0, 2 * (right - left)]);\r\n\r\n        //    var xAxis = d3.svg.axis().scale(x).orient(\"bottom\");\r\n        //    plot_svg.append(\"g\").attr(\"class\", \"x axis\")\r\n        //        .attr(\"transform\", \"translate(0, 199)\")\r\n        //        .call(xAxis);\r\n\r\n        //    var lastX = 0;\r\n        //    var lastY = 0;\r\n        //    var value = 0;\r\n        //    for (var r = left; r < right; r += 1) {\r\n        //        value = step(data, r);\r\n        //        // value = 1;\r\n\r\n        //        plot_svg.append(\"line\").attr(\"x1\", 2 * (lastX - left))\r\n        //            .attr(\"y1\", 200 - 30 * lastY)\r\n        //            .attr(\"x2\", 2 * r - 2 * left)\r\n        //            .attr(\"y2\", 200 - 30 * value)\r\n        //            .style(\"stroke\", \"rgb(6,120,155)\");\r\n\r\n        //        lastX = r;\r\n        //        lastY = value;\r\n        //    }\r\n\r\n        //    plot_svg.append(\"circle\").attr(\"cx\", 2 * opt_x - 2 * left).attr(\"cy\", 200 - 30 * opt_y)\r\n        //        .attr(\"r\", 5).style('fill', \"rgba(0,0,0,0.5)\");\r\n\r\n        //}\r\n\r\n        // actual assigning of position to nodes\r\n        function put_nodes_to_right_positions(graphs) {\r\n            graphs.forEach(function (g) {\r\n                // calculate current graph center:\r\n                var center = { x: 0, y: 0 };\r\n\r\n                g.array.forEach(function (node) {\r\n                    center.x += node.x;\r\n                    center.y += node.y;\r\n                });\r\n\r\n                center.x /= g.array.length;\r\n                center.y /= g.array.length;\r\n\r\n                // calculate current top left corner:\r\n                var corner = { x: center.x - g.width / 2, y: center.y - g.height / 2 };\r\n                var offset = { x: g.x - corner.x + svg_width / 2 - real_width / 2, y: g.y - corner.y + svg_height / 2 - real_height / 2};\r\n\r\n                // put nodes:\r\n                g.array.forEach(function (node) {\r\n                    node.x += offset.x;\r\n                    node.y += offset.y;\r\n                });\r\n            });\r\n        }\r\n\r\n        // starts box packing algorithm\r\n        // desired ratio is 1 by default\r\n        function apply(data, desired_ratio) {\r\n            var curr_best_f = Number.POSITIVE_INFINITY;\r\n            var curr_best = 0;\r\n            data.sort(function (a, b) { return b.height - a.height; });\r\n\r\n            min_width = data.reduce(function (a, b) {\r\n                return a.width < b.width ? a.width : b.width;\r\n            });\r\n\r\n            var left = x1 = min_width;\r\n            var right = x2 = get_entire_width(data);\r\n            var iterationCounter = 0;\r\n\r\n            var f_x1 = Number.MAX_VALUE;\r\n            var f_x2 = Number.MAX_VALUE;\r\n            var flag = -1; // determines which among f_x1 and f_x2 to recompute\r\n\r\n\r\n            var dx = Number.MAX_VALUE;\r\n            var df = Number.MAX_VALUE;\r\n\r\n            while ((dx > min_width) || df > packingOptions.FLOAT_EPSILON) {\r\n\r\n                if (flag != 1) {\r\n                    var x1 = right - (right - left) / packingOptions.GOLDEN_SECTION;\r\n                    var f_x1 = step(data, x1);\r\n                }\r\n                if (flag != 0) {\r\n                    var x2 = left + (right - left) / packingOptions.GOLDEN_SECTION;\r\n                    var f_x2 = step(data, x2);\r\n                }\r\n\r\n                dx = Math.abs(x1 - x2);\r\n                df = Math.abs(f_x1 - f_x2);\r\n\r\n                if (f_x1 < curr_best_f) {\r\n                    curr_best_f = f_x1;\r\n                    curr_best = x1;\r\n                }\r\n\r\n                if (f_x2 < curr_best_f) {\r\n                    curr_best_f = f_x2;\r\n                    curr_best = x2;\r\n                }\r\n\r\n                if (f_x1 > f_x2) {\r\n                    left = x1;\r\n                    x1 = x2;\r\n                    f_x1 = f_x2;\r\n                    flag = 1;\r\n                } else {\r\n                    right = x2;\r\n                    x2 = x1;\r\n                    f_x2 = f_x1;\r\n                    flag = 0;\r\n                }\r\n\r\n                if (iterationCounter++ > 100) {\r\n                    break;\r\n                }\r\n            }\r\n            // plot(data, min_width, get_entire_width(data), curr_best, curr_best_f);\r\n            step(data, curr_best);\r\n        }\r\n\r\n        // one iteration of the optimization method\r\n        // (gives a proper, but not necessarily optimal packing)\r\n        function step(data, max_width) {\r\n            line = [];\r\n            real_width = 0;\r\n            real_height = 0;\r\n            global_bottom = init_y;\r\n\r\n            for (var i = 0; i < data.length; i++) {\r\n                var o = data[i];\r\n                put_rect(o, max_width);\r\n            }\r\n\r\n            return Math.abs(get_real_ratio() - desired_ratio);\r\n        }\r\n\r\n        // looking for a position to one box\r\n        function put_rect(rect, max_width) {\r\n\r\n\r\n            var parent = undefined;\r\n\r\n            for (var i = 0; i < line.length; i++) {\r\n                if ((line[i].space_left >= rect.height) && (line[i].x + line[i].width + rect.width + packingOptions.PADDING - max_width) <= packingOptions.FLOAT_EPSILON) {\r\n                    parent = line[i];\r\n                    break;\r\n                }\r\n            }\r\n\r\n            line.push(rect);\r\n\r\n            if (parent !== undefined) {\r\n                rect.x = parent.x + parent.width + packingOptions.PADDING;\r\n                rect.y = parent.bottom;\r\n                rect.space_left = rect.height;\r\n                rect.bottom = rect.y;\r\n                parent.space_left -= rect.height + packingOptions.PADDING;\r\n                parent.bottom += rect.height + packingOptions.PADDING;\r\n            } else {\r\n                rect.y = global_bottom;\r\n                global_bottom += rect.height + packingOptions.PADDING;\r\n                rect.x = init_x;\r\n                rect.bottom = rect.y;\r\n                rect.space_left = rect.height;\r\n            }\r\n\r\n            if (rect.y + rect.height - real_height > -packingOptions.FLOAT_EPSILON) real_height = rect.y + rect.height - init_y;\r\n            if (rect.x + rect.width - real_width > -packingOptions.FLOAT_EPSILON) real_width = rect.x + rect.width - init_x;\r\n        };\r\n\r\n        function get_entire_width(data) {\r\n            var width = 0;\r\n            data.forEach(function (d) { return width += d.width + packingOptions.PADDING; });\r\n            return width;\r\n        }\r\n\r\n        function get_real_ratio() {\r\n            return (real_width / real_height);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * connected components of graph\r\n     * returns an array of {}\r\n     */\r\n    export function separateGraphs(nodes, links) {\r\n        var marks = {};\r\n        var ways = {};\r\n        var graphs = [];\r\n        var clusters = 0;\r\n\r\n        for (var i = 0; i < links.length; i++) {\r\n            var link = links[i];\r\n            var n1 = link.source;\r\n            var n2 = link.target;\r\n            if (ways[n1.index])\r\n                ways[n1.index].push(n2);\r\n            else\r\n                ways[n1.index] = [n2];\r\n\r\n            if (ways[n2.index])\r\n                ways[n2.index].push(n1);\r\n            else\r\n                ways[n2.index] = [n1];\r\n        }\r\n\r\n        for (var i = 0; i < nodes.length; i++) {\r\n            var node = nodes[i];\r\n            if (marks[node.index]) continue;\r\n            explore_node(node, true);\r\n        }\r\n\r\n        function explore_node(n, is_new) {\r\n            if (marks[n.index] !== undefined) return;\r\n            if (is_new) {\r\n                clusters++;\r\n                graphs.push({ array: [] });\r\n            }\r\n            marks[n.index] = clusters;\r\n            graphs[clusters - 1].array.push(n);\r\n            var adjacent = ways[n.index];\r\n            if (!adjacent) return;\r\n\r\n            for (var j = 0; j < adjacent.length; j++) {\r\n                explore_node(adjacent[j], false);\r\n            }\r\n        }\r\n\r\n        return graphs;\r\n    }\r\n","import * as powergraph from './powergraph'\r\nimport {LinkLengthAccessor, symmetricDiffLinkLengths, jaccardLinkLengths, generateDirectedEdgeConstraints} from './linklengths'\r\nimport {Descent} from './descent'\r\nimport {Rectangle, Projection, makeEdgeTo, makeEdgeBetween} from './rectangle'\r\nimport {Calculator} from './shortestpaths'\r\nimport {TangentVisibilityGraph, TVGPoint} from './geom'\r\nimport {separateGraphs, applyPacking} from './handledisconnected'\r\n    /**\r\n     * The layout process fires three events:\r\n     *  - start: layout iterations started\r\n     *  - tick: fired once per iteration, listen to this to animate\r\n     *  - end: layout converged, you might like to zoom-to-fit or something at notification of this event\r\n     */\r\n    export enum EventType { start, tick, end };\r\n    export interface Event {\r\n        type: EventType;\r\n        alpha: number;\r\n        stress?: number;\r\n        listener?: () => void;\r\n    }\r\n    export interface InputNode {\r\n        /**\r\n         * index in nodes array, this is initialized by Layout.start()\r\n         */\r\n        index?: number;\r\n        /**\r\n         * x and y will be computed by layout as the Node's centroid\r\n         */\r\n        x?: number;\r\n        /**\r\n         * x and y will be computed by layout as the Node's centroid\r\n         */\r\n        y?: number;\r\n        /**\r\n         * specify a width and height of the node's bounding box if you turn on avoidOverlaps\r\n         */\r\n        width?: number;\r\n        /**\r\n         * specify a width and height of the node's bounding box if you turn on avoidOverlaps\r\n         */\r\n        height?: number;\r\n        /**\r\n         * selective bit mask.  !=0 means layout will not move.\r\n         */\r\n        fixed?: number;\r\n    }\r\n    export interface Node extends InputNode {\r\n      // Client-passed node may be missing these properties, which will be set\r\n      // upon ingestion\r\n      x: number;\r\n      y: number;\r\n    }\r\n\r\n    export interface Group {\r\n        bounds?: Rectangle;\r\n        leaves?: Node[];\r\n        groups?: Group[];\r\n        padding: number;\r\n    }\r\n\r\n    function isGroup(g: any): g is Group {\r\n        return typeof g.leaves !== 'undefined' || typeof g.groups !== 'undefined';\r\n    }\r\n\r\n    export interface Link<NodeRefType> {\r\n        source: NodeRefType;\r\n        target: NodeRefType;\r\n\r\n        // ideal length the layout should try to achieve for this link\r\n        length?: number;\r\n\r\n        // how hard we should try to satisfy this link's ideal length\r\n        // must be in the range: 0 < weight <= 1\r\n        // if unspecified 1 is the default\r\n        weight?: number;\r\n    }\r\n\r\n    export type LinkNumericPropertyAccessor = (t: Link<Node | number>) => number;\r\n\r\n    export interface LinkLengthTypeAccessor extends LinkLengthAccessor<Link<Node | number>> {\r\n        getType: LinkNumericPropertyAccessor;\r\n    }\r\n    /**\r\n     * Main interface to cola layout.\r\n     * @class Layout\r\n     */\r\n    export class Layout {\r\n        private _canvasSize = [1, 1];\r\n        private _linkDistance: number | LinkNumericPropertyAccessor = 20;\r\n        private _defaultNodeSize: number = 10;\r\n        private _linkLengthCalculator = null;\r\n        private _linkType = null;\r\n        private _avoidOverlaps = false;\r\n        private _handleDisconnected = true;\r\n        private _alpha;\r\n        private _lastStress;\r\n        private _running = false;\r\n        private _nodes = [];\r\n        private _groups = [];\r\n        private _rootGroup = null;\r\n        private _links: Link<Node | number>[] = [];\r\n        private _constraints = [];\r\n        private _distanceMatrix = null;\r\n        private _descent: Descent = null;\r\n        private _directedLinkConstraints = null;\r\n        private _threshold = 0.01;\r\n        private _visibilityGraph = null;\r\n        private _groupCompactness = 1e-6;\r\n\r\n        // sub-class and override this property to replace with a more sophisticated eventing mechanism\r\n        protected event = null;\r\n\r\n        // subscribe a listener to an event\r\n        // sub-class and override this method to replace with a more sophisticated eventing mechanism\r\n        public on(e: EventType | string, listener: (event?: Event) => void): this {\r\n            // override me!\r\n            if (!this.event) this.event = {};\r\n            if (typeof e === 'string') {\r\n                this.event[EventType[e]] = listener;\r\n            } else {\r\n                this.event[e] = listener;\r\n            }\r\n            return this;\r\n        }\r\n\r\n        // a function that is notified of events like \"tick\"\r\n        // sub-classes can override this method to replace with a more sophisticated eventing mechanism\r\n        protected trigger(e: Event) {\r\n            if (this.event && typeof this.event[e.type] !== 'undefined') {\r\n                this.event[e.type](e);\r\n            }\r\n        }\r\n\r\n        // a function that kicks off the iteration tick loop\r\n        // it calls tick() repeatedly until tick returns true (is converged)\r\n        // subclass and override it with something fancier (e.g. dispatch tick on a timer)\r\n        protected kick(): void {\r\n            while (!this.tick());\r\n        }\r\n\r\n        /**\r\n         * iterate the layout.  Returns true when layout converged.\r\n         */\r\n        protected tick(): boolean {\r\n            if (this._alpha < this._threshold) {\r\n                this._running = false;\r\n                this.trigger({ type: EventType.end, alpha: this._alpha = 0, stress: this._lastStress });\r\n                return true;\r\n            }\r\n            const n = this._nodes.length,\r\n                  m = this._links.length;\r\n            let o, i;\r\n\r\n            this._descent.locks.clear();\r\n            for (i = 0; i < n; ++i) {\r\n                o = this._nodes[i];\r\n                if (o.fixed) {\r\n                    if (typeof o.px === 'undefined' || typeof o.py === 'undefined') {\r\n                        o.px = o.x;\r\n                        o.py = o.y;\r\n                    }\r\n                    var p = [o.px, o.py];\r\n                    this._descent.locks.add(i, p);\r\n                }\r\n            }\r\n\r\n            let s1 = this._descent.rungeKutta();\r\n            //var s1 = descent.reduceStress();\r\n            if (s1 === 0) {\r\n                this._alpha = 0;\r\n            } else if (typeof this._lastStress !== 'undefined') {\r\n                this._alpha = s1; //Math.abs(Math.abs(this._lastStress / s1) - 1);\r\n            }\r\n            this._lastStress = s1;\r\n\r\n            this.updateNodePositions();\r\n\r\n            this.trigger({ type: EventType.tick, alpha: this._alpha, stress: this._lastStress });\r\n            return false;\r\n        }\r\n\r\n        // copy positions out of descent instance into each of the nodes' center coords\r\n        private updateNodePositions(): void {\r\n            const x = this._descent.x[0], y = this._descent.x[1];\r\n            let o, i = this._nodes.length;\r\n            while (i--) {\r\n                o = this._nodes[i];\r\n                o.x = x[i];\r\n                o.y = y[i];\r\n            }\r\n        }\r\n\r\n        /**\r\n         * the list of nodes.\r\n         * If nodes has not been set, but links has, then we instantiate a nodes list here, of the correct size,\r\n         * before returning it.\r\n         * @property nodes {Array}\r\n         * @default empty list\r\n         */\r\n        nodes(): Array<Node>\r\n        nodes(v: Array<InputNode>): this\r\n        nodes(v?: any): any {\r\n            if (!v) {\r\n                if (this._nodes.length === 0 && this._links.length > 0) {\r\n                    // if we have links but no nodes, create the nodes array now with empty objects for the links to point at.\r\n                    // in this case the links are expected to be numeric indices for nodes in the range 0..n-1 where n is the number of nodes\r\n                    var n = 0;\r\n                    this._links.forEach(function (l) {\r\n                        n = Math.max(n, <number>l.source, <number>l.target);\r\n                    });\r\n                    this._nodes = new Array(++n);\r\n                    for (var i = 0; i < n; ++i) {\r\n                        this._nodes[i] = {};\r\n                    }\r\n                }\r\n                return this._nodes;\r\n            }\r\n            this._nodes = v;\r\n            return this;\r\n        }\r\n\r\n        /**\r\n         * a list of hierarchical groups defined over nodes\r\n         * @property groups {Array}\r\n         * @default empty list\r\n         */\r\n        groups(): Array<Group>\r\n        groups(x: Array<Group>): this\r\n        groups(x?: Array<Group>): any {\r\n            if (!x) return this._groups;\r\n            this._groups = x;\r\n            this._rootGroup = {};\r\n            this._groups.forEach(g => {\r\n                if (typeof g.padding === \"undefined\")\r\n                    g.padding = 1;\r\n                if (typeof g.leaves !== \"undefined\") {\r\n                    g.leaves.forEach((v, i) => {\r\n                        if (typeof v === 'number')\r\n                            (g.leaves[i] = this._nodes[v]).parent = g\r\n                    });\r\n                }\r\n                if (typeof g.groups !== \"undefined\") {\r\n                    g.groups.forEach((gi, i) => {\r\n                        if (typeof gi === 'number')\r\n                            (g.groups[i] = this._groups[gi]).parent = g\r\n                    });\r\n                }\r\n            });\r\n            this._rootGroup.leaves = this._nodes.filter(v => typeof v.parent === 'undefined');\r\n            this._rootGroup.groups = this._groups.filter(g => typeof g.parent === 'undefined');\r\n            return this;\r\n        }\r\n\r\n        powerGraphGroups(f: Function): this {\r\n            var g = powergraph.getGroups(this._nodes, this._links, this.linkAccessor, this._rootGroup);\r\n            this.groups(g.groups);\r\n            f(g);\r\n            return this;\r\n        }\r\n\r\n        /**\r\n         * if true, the layout will not permit overlaps of the node bounding boxes (defined by the width and height properties on nodes)\r\n         * @property avoidOverlaps\r\n         * @type bool\r\n         * @default false\r\n         */\r\n        avoidOverlaps(): boolean\r\n        avoidOverlaps(v: boolean): this\r\n        avoidOverlaps(v?: boolean): any {\r\n            if (!arguments.length) return this._avoidOverlaps;\r\n            this._avoidOverlaps = v;\r\n            return this;\r\n        }\r\n\r\n        /**\r\n         * if true, the final step of the start method will be to nicely pack connected components of the graph.\r\n         * works best if start() is called with a reasonable number of iterations specified and\r\n         * each node has a bounding box (defined by the width and height properties on nodes).\r\n         * @property handleDisconnected\r\n         * @type bool\r\n         * @default true\r\n         */\r\n        handleDisconnected(): boolean\r\n        handleDisconnected(v: boolean): this\r\n        handleDisconnected(v?: boolean): any {\r\n            if (!arguments.length) return this._handleDisconnected;\r\n            this._handleDisconnected = v;\r\n            return this;\r\n        }\r\n\r\n        /**\r\n         * causes constraints to be generated such that directed graphs are laid out either from left-to-right or top-to-bottom.\r\n         * a separation constraint is generated in the selected axis for each edge that is not involved in a cycle (part of a strongly connected component)\r\n         * @param axis {string} 'x' for left-to-right, 'y' for top-to-bottom\r\n         * @param minSeparation {number|link=>number} either a number specifying a minimum spacing required across all links or a function to return the minimum spacing for each link\r\n         */\r\n        flowLayout(axis: string, minSeparation: number|((t: any)=>number)): this {\r\n            if (!arguments.length) axis = 'y';\r\n            this._directedLinkConstraints = {\r\n                axis: axis,\r\n                getMinSeparation: typeof minSeparation === 'number' ? function () { return minSeparation } : minSeparation\r\n            };\r\n            return this;\r\n        }\r\n\r\n        /**\r\n         * links defined as source, target pairs over nodes\r\n         * @property links {array}\r\n         * @default empty list\r\n         */\r\n        links(): Array<Link<Node|number>>\r\n        links(x: Array<Link<Node|number>>): this\r\n        links(x?: Array<Link<Node|number>>): any {\r\n            if (!arguments.length) return this._links;\r\n            this._links = x;\r\n            return this;\r\n        }\r\n\r\n        /**\r\n         * list of constraints of various types\r\n         * @property constraints\r\n         * @type {array}\r\n         * @default empty list\r\n         */\r\n        constraints(): Array<any>\r\n        constraints(c: Array<any>): this\r\n        constraints(c?: Array<any>): any {\r\n            if (!arguments.length) return this._constraints;\r\n            this._constraints = c;\r\n            return this;\r\n        }\r\n\r\n        /**\r\n         * Matrix of ideal distances between all pairs of nodes.\r\n         * If unspecified, the ideal distances for pairs of nodes will be based on the shortest path distance between them.\r\n         * @property distanceMatrix\r\n         * @type {Array of Array of Number}\r\n         * @default null\r\n         */\r\n        distanceMatrix(): Array<Array<number>>\r\n        distanceMatrix(d: Array<Array<number>>): this\r\n        distanceMatrix(d?: any): any {\r\n            if (!arguments.length) return this._distanceMatrix;\r\n            this._distanceMatrix = d;\r\n            return this;\r\n        }\r\n\r\n        /**\r\n         * Size of the layout canvas dimensions [x,y]. Currently only used to determine the midpoint which is taken as the starting position\r\n         * for nodes with no preassigned x and y.\r\n         * @property size\r\n         * @type {Array of Number}\r\n         */\r\n        size(): Array<number>\r\n        size(x: Array<number>): this\r\n        size(x?: Array<number>): any {\r\n            if (!x) return this._canvasSize;\r\n            this._canvasSize = x;\r\n            return this;\r\n        }\r\n\r\n        /**\r\n         * Default size (assume nodes are square so both width and height) to use in packing if node width/height are not specified.\r\n         * @property defaultNodeSize\r\n         * @type {Number}\r\n         */\r\n        defaultNodeSize(): number\r\n        defaultNodeSize(x: number): this\r\n        defaultNodeSize(x?: any): any {\r\n            if (!x) return this._defaultNodeSize;\r\n            this._defaultNodeSize = x;\r\n            return this;\r\n        }\r\n\r\n        /**\r\n         * The strength of attraction between the group boundaries to each other.\r\n         * @property defaultNodeSize\r\n         * @type {Number}\r\n         */\r\n        groupCompactness(): number\r\n        groupCompactness(x: number): this\r\n        groupCompactness(x?: any): any {\r\n            if (!x) return this._groupCompactness;\r\n            this._groupCompactness = x;\r\n            return this;\r\n        }\r\n\r\n        /**\r\n         * links have an ideal distance, The automatic layout will compute layout that tries to keep links (AKA edges) as close as possible to this length.\r\n         */\r\n        linkDistance(): number\r\n        linkDistance(): LinkNumericPropertyAccessor\r\n        linkDistance(x: number): this\r\n        linkDistance(x: LinkNumericPropertyAccessor): this\r\n        linkDistance(x?: any): any {\r\n            if (!x) {\r\n                return this._linkDistance;\r\n            }\r\n            this._linkDistance = typeof x === \"function\" ? x : +x;\r\n            this._linkLengthCalculator = null;\r\n            return this;\r\n        }\r\n\r\n        linkType(f: Function | number): this {\r\n            this._linkType = f;\r\n            return this;\r\n        }\r\n\r\n        convergenceThreshold(): number\r\n        convergenceThreshold(x: number): this\r\n        convergenceThreshold(x?: number): any {\r\n            if (!x) return this._threshold;\r\n            this._threshold = typeof x === \"function\" ? x : +x;\r\n            return this;\r\n        }\r\n\r\n        alpha(): number\r\n        alpha(x: number): this\r\n        alpha(x?: number): any {\r\n            if (!arguments.length) return this._alpha;\r\n            else {\r\n                x = +x;\r\n                if (this._alpha) { // if we're already running\r\n                    if (x > 0) this._alpha = x; // we might keep it hot\r\n                    else this._alpha = 0; // or, next tick will dispatch \"end\"\r\n                } else if (x > 0) { // otherwise, fire it up!\r\n                    if (!this._running) {\r\n                        this._running = true;\r\n                        this.trigger({ type: EventType.start, alpha: this._alpha = x});\r\n                        this.kick();\r\n                    }\r\n                }\r\n                return this;\r\n            }\r\n        }\r\n\r\n        getLinkLength(link: Link<Node | number>): number {\r\n            return typeof this._linkDistance === \"function\" ? +((<LinkNumericPropertyAccessor>this._linkDistance)(link)) : <number>this._linkDistance;\r\n        }\r\n\r\n        static setLinkLength(link: Link<Node|number>, length: number) {\r\n            link.length = length;\r\n        }\r\n\r\n        getLinkType(link: Link<Node | number>): number {\r\n            return typeof this._linkType === \"function\" ? this._linkType(link) : 0;\r\n        }\r\n\r\n        linkAccessor: LinkLengthTypeAccessor = {\r\n            getSourceIndex: Layout.getSourceIndex,\r\n            getTargetIndex: Layout.getTargetIndex,\r\n            setLength: Layout.setLinkLength,\r\n            getType: l => typeof this._linkType === \"function\" ? this._linkType(l) : 0\r\n        };\r\n\r\n        /**\r\n         * compute an ideal length for each link based on the graph structure around that link.\r\n         * you can use this (for example) to create extra space around hub-nodes in dense graphs.\r\n         * In particular this calculation is based on the \"symmetric difference\" in the neighbour sets of the source and target:\r\n         * i.e. if neighbours of source is a and neighbours of target are b then calculation is: sqrt(|a union b| - |a intersection b|)\r\n         * Actual computation based on inspection of link structure occurs in start(), so links themselves\r\n         * don't have to have been assigned before invoking this function.\r\n         * @param {number} [idealLength] the base length for an edge when its source and start have no other common neighbours (e.g. 40)\r\n         * @param {number} [w] a multiplier for the effect of the length adjustment (e.g. 0.7)\r\n         */\r\n        symmetricDiffLinkLengths(idealLength: number, w: number = 1): this {\r\n            this.linkDistance(l => idealLength * l.length);\r\n            this._linkLengthCalculator = () => symmetricDiffLinkLengths(this._links, this.linkAccessor, w);\r\n            return this;\r\n        }\r\n\r\n        /**\r\n         * compute an ideal length for each link based on the graph structure around that link.\r\n         * you can use this (for example) to create extra space around hub-nodes in dense graphs.\r\n         * In particular this calculation is based on the \"symmetric difference\" in the neighbour sets of the source and target:\r\n         * i.e. if neighbours of source is a and neighbours of target are b then calculation is: |a intersection b|/|a union b|\r\n         * Actual computation based on inspection of link structure occurs in start(), so links themselves\r\n         * don't have to have been assigned before invoking this function.\r\n         * @param {number} [idealLength] the base length for an edge when its source and start have no other common neighbours (e.g. 40)\r\n         * @param {number} [w] a multiplier for the effect of the length adjustment (e.g. 0.7)\r\n         */\r\n        jaccardLinkLengths(idealLength: number, w: number = 1): this {\r\n            this.linkDistance(l => idealLength * l.length);\r\n            this._linkLengthCalculator = () => jaccardLinkLengths(this._links, this.linkAccessor, w);\r\n            return this;\r\n        }\r\n\r\n        /**\r\n         * start the layout process\r\n         * @method start\r\n         * @param {number} [initialUnconstrainedIterations=0] unconstrained initial layout iterations\r\n         * @param {number} [initialUserConstraintIterations=0] initial layout iterations with user-specified constraints\r\n         * @param {number} [initialAllConstraintsIterations=0] initial layout iterations with all constraints including non-overlap\r\n         * @param {number} [gridSnapIterations=0] iterations of \"grid snap\", which pulls nodes towards grid cell centers - grid of size node[0].width - only really makes sense if all nodes have the same width and height\r\n         * @param [keepRunning=true] keep iterating asynchronously via the tick method\r\n         */\r\n        start(\r\n            initialUnconstrainedIterations: number = 0,\r\n            initialUserConstraintIterations: number = 0,\r\n            initialAllConstraintsIterations: number = 0,\r\n            gridSnapIterations: number = 0,\r\n            keepRunning = true\r\n        ): this {\r\n            var i: number,\r\n                j: number,\r\n                n = (<Array<any>>this.nodes()).length,\r\n                N = n + 2 * this._groups.length,\r\n                m = this._links.length,\r\n                w = this._canvasSize[0],\r\n                h = this._canvasSize[1];\r\n\r\n            var x = new Array(N), y = new Array(N);\r\n\r\n            var G = null;\r\n\r\n            var ao = this._avoidOverlaps;\r\n\r\n            this._nodes.forEach((v, i) => {\r\n                v.index = i;\r\n                if (typeof v.x === 'undefined') {\r\n                    v.x = w / 2, v.y = h / 2;\r\n                }\r\n                x[i] = v.x, y[i] = v.y;\r\n            });\r\n\r\n            if (this._linkLengthCalculator) this._linkLengthCalculator();\r\n\r\n            //should we do this to clearly label groups?\r\n            //this._groups.forEach((g, i) => g.groupIndex = i);\r\n\r\n            var distances;\r\n            if (this._distanceMatrix) {\r\n                // use the user specified distanceMatrix\r\n                distances = this._distanceMatrix;\r\n            } else {\r\n                // construct an n X n distance matrix based on shortest paths through graph (with respect to edge.length).\r\n                distances = (new Calculator(N, this._links, Layout.getSourceIndex, Layout.getTargetIndex, l=> this.getLinkLength(l))).DistanceMatrix();\r\n\r\n                // G is a square matrix with G[i][j] = 1 iff there exists an edge between node i and node j\r\n                // otherwise 2. (\r\n                G = Descent.createSquareMatrix(N, () => 2);\r\n                this._links.forEach(l => {\r\n                    if (typeof l.source == \"number\") l.source = this._nodes[<number>l.source];\r\n                    if (typeof l.target == \"number\") l.target = this._nodes[<number>l.target];\r\n                });\r\n                this._links.forEach(e => {\r\n                    const u = Layout.getSourceIndex(e), v = Layout.getTargetIndex(e);\r\n                    G[u][v] = G[v][u] = e.weight || 1;\r\n                });\r\n            }\r\n\r\n            var D = Descent.createSquareMatrix(N, function (i, j) {\r\n                return distances[i][j];\r\n            });\r\n\r\n            if (this._rootGroup && typeof this._rootGroup.groups !== 'undefined') {\r\n                var i = n;\r\n                var addAttraction = (i, j, strength, idealDistance) => {\r\n                    G[i][j] = G[j][i] = strength;\r\n                    D[i][j] = D[j][i] = idealDistance;\r\n                };\r\n                this._groups.forEach(g => {\r\n                    addAttraction(i, i + 1, this._groupCompactness, 0.1);\r\n\r\n                    // todo: add terms here attracting children of the group to the group dummy nodes\r\n                    //if (typeof g.leaves !== 'undefined')\r\n                    //    g.leaves.forEach(l => {\r\n                    //        addAttraction(l.index, i, 1e-4, 0.1);\r\n                    //        addAttraction(l.index, i + 1, 1e-4, 0.1);\r\n                    //    });\r\n                    //if (typeof g.groups !== 'undefined')\r\n                    //    g.groups.forEach(g => {\r\n                    //        var gid = n + g.groupIndex * 2;\r\n                    //        addAttraction(gid, i, 0.1, 0.1);\r\n                    //        addAttraction(gid + 1, i, 0.1, 0.1);\r\n                    //        addAttraction(gid, i + 1, 0.1, 0.1);\r\n                    //        addAttraction(gid + 1, i + 1, 0.1, 0.1);\r\n                    //    });\r\n\r\n                    x[i] = 0, y[i++] = 0;\r\n                    x[i] = 0, y[i++] = 0;\r\n                });\r\n            } else this._rootGroup = { leaves: this._nodes, groups: [] };\r\n\r\n            var curConstraints = this._constraints || [];\r\n            if (this._directedLinkConstraints) {\r\n                (<any>this.linkAccessor).getMinSeparation = this._directedLinkConstraints.getMinSeparation;\r\n                curConstraints = curConstraints.concat(generateDirectedEdgeConstraints(n, this._links, this._directedLinkConstraints.axis, <any>(this.linkAccessor)));\r\n\r\n                // todo: add containment constraints between group dummy nodes and their children\r\n            }\r\n\r\n            this.avoidOverlaps(false);\r\n            this._descent = new Descent([x, y], D);\r\n\r\n            this._descent.locks.clear();\r\n            for (var i = 0; i < n; ++i) {\r\n                var o = this._nodes[i];\r\n                if (o.fixed) {\r\n                    o.px = o.x;\r\n                    o.py = o.y;\r\n                    var p = [o.x, o.y];\r\n                    this._descent.locks.add(i, p);\r\n                }\r\n            }\r\n            this._descent.threshold = this._threshold;\r\n\r\n            // apply initialIterations without user constraints or nonoverlap constraints\r\n            // if groups are specified, dummy nodes and edges will be added to untangle\r\n            // with respect to group connectivity\r\n            this.initialLayout(initialUnconstrainedIterations, x, y);\r\n\r\n            // apply initialIterations with user constraints but no nonoverlap constraints\r\n            if (curConstraints.length > 0) this._descent.project = new Projection(this._nodes, this._groups, this._rootGroup, curConstraints).projectFunctions();\r\n            this._descent.run(initialUserConstraintIterations);\r\n            this.separateOverlappingComponents(w, h);\r\n\r\n            // subsequent iterations will apply all constraints\r\n            this.avoidOverlaps(ao);\r\n            if (ao) {\r\n                this._nodes.forEach(function (v, i) { v.x = x[i], v.y = y[i]; });\r\n                this._descent.project = new Projection(this._nodes, this._groups, this._rootGroup, curConstraints, true).projectFunctions();\r\n                this._nodes.forEach(function (v, i) { x[i] = v.x, y[i] = v.y; });\r\n            }\r\n\r\n            // allow not immediately connected nodes to relax apart (p-stress)\r\n            this._descent.G = G;\r\n            this._descent.run(initialAllConstraintsIterations);\r\n\r\n            if (gridSnapIterations) {\r\n                this._descent.snapStrength = 1000;\r\n                this._descent.snapGridSize = this._nodes[0].width;\r\n                this._descent.numGridSnapNodes = n;\r\n                this._descent.scaleSnapByMaxH = n != N; // if we have groups then need to scale hessian so grid forces still apply\r\n                var G0 = Descent.createSquareMatrix(N,(i, j) => {\r\n                    if (i >= n || j >= n) return G[i][j];\r\n                    return 0\r\n                });\r\n                this._descent.G = G0;\r\n                this._descent.run(gridSnapIterations);\r\n            }\r\n\r\n            this.updateNodePositions();\r\n            this.separateOverlappingComponents(w, h);\r\n            return keepRunning ? this.resume() : this;\r\n        }\r\n\r\n        private initialLayout(iterations: number, x: number[], y: number[]) {\r\n            if (this._groups.length > 0 && iterations > 0) {\r\n                // construct a flat graph with dummy nodes for the groups and edges connecting group dummy nodes to their children\r\n                // todo: edges attached to groups are replaced with edges connected to the corresponding group dummy node\r\n                var n = this._nodes.length;\r\n                var edges = this._links.map(e => <any>{ source: (<Node>e.source).index, target: (<Node>e.target).index });\r\n                var vs = this._nodes.map(v => <any>{ index: v.index });\r\n                this._groups.forEach((g, i) => {\r\n                    vs.push(<any>{ index: g.index = n + i });\r\n                });\r\n                this._groups.forEach((g, i) => {\r\n                    if (typeof g.leaves !== 'undefined')\r\n                        g.leaves.forEach(v => edges.push({ source: g.index, target: v.index }));\r\n                    if (typeof g.groups !== 'undefined')\r\n                        g.groups.forEach(gg => edges.push({ source: g.index, target: gg.index }));\r\n                });\r\n\r\n                // layout the flat graph with dummy nodes and edges\r\n                new Layout()\r\n                    .size(this.size())\r\n                    .nodes(vs)\r\n                    .links(edges)\r\n                    .avoidOverlaps(false)\r\n                    .linkDistance(this.linkDistance())\r\n                    .symmetricDiffLinkLengths(5)\r\n                    .convergenceThreshold(1e-4)\r\n                    .start(iterations, 0, 0, 0, false);\r\n\r\n                this._nodes.forEach(v => {\r\n                    x[v.index] = vs[v.index].x;\r\n                    y[v.index] = vs[v.index].y;\r\n                });\r\n            } else {\r\n                this._descent.run(iterations);\r\n            }\r\n        }\r\n\r\n        // recalculate nodes position for disconnected graphs\r\n        private separateOverlappingComponents(width: number, height: number): void {\r\n            // recalculate nodes position for disconnected graphs\r\n            if (!this._distanceMatrix && this._handleDisconnected) {\r\n                let x = this._descent.x[0], y = this._descent.x[1];\r\n                this._nodes.forEach(function (v, i) { v.x = x[i], v.y = y[i]; });\r\n                var graphs = separateGraphs(this._nodes, this._links);\r\n                applyPacking(graphs, width, height, this._defaultNodeSize);\r\n                this._nodes.forEach((v, i) => {\r\n                    this._descent.x[0][i] = v.x, this._descent.x[1][i] = v.y;\r\n                    if (v.bounds) {\r\n                        v.bounds.setXCentre(v.x);\r\n                        v.bounds.setYCentre(v.y);\r\n                    }\r\n                });\r\n            }\r\n        }\r\n\r\n        resume(): this {\r\n            return this.alpha(0.1);\r\n        }\r\n\r\n        stop(): this {\r\n            return this.alpha(0);\r\n        }\r\n\r\n        /// find a visibility graph over the set of nodes.  assumes all nodes have a\r\n        /// bounds property (a rectangle) and that no pair of bounds overlaps.\r\n        prepareEdgeRouting(nodeMargin: number = 0) {\r\n            this._visibilityGraph = new TangentVisibilityGraph(\r\n                this._nodes.map(function (v) {\r\n                    return v.bounds.inflate(-nodeMargin).vertices();\r\n                }));\r\n        }\r\n\r\n        /**\r\n         * find a route avoiding node bounds for the given edge.\r\n         * assumes the visibility graph has been created (by prepareEdgeRouting method)\r\n         * and also assumes that nodes have an index property giving their position in the\r\n         * node array.  This index property is created by the start() method.\r\n         * @param [edge] The edge to generate a route for.\r\n         * @param {number} [ah] The size of the arrow head, a distance to shorten the end\r\n         *                      of the edge by.  Defaults to 5.\r\n         */\r\n        routeEdge(edge, ah: number = 5, draw) {\r\n            var lineData = [];\r\n            //if (d.source.id === 10 && d.target.id === 11) {\r\n            //    debugger;\r\n            //}\r\n            var vg2 = new TangentVisibilityGraph(this._visibilityGraph.P, { V: this._visibilityGraph.V, E: this._visibilityGraph.E }),\r\n                port1 = <TVGPoint>{ x: edge.source.x, y: edge.source.y },\r\n                port2 = <TVGPoint>{ x: edge.target.x, y: edge.target.y },\r\n                start = vg2.addPoint(port1, edge.source.index),\r\n                end = vg2.addPoint(port2, edge.target.index);\r\n            vg2.addEdgeIfVisible(port1, port2, edge.source.index, edge.target.index);\r\n            if (typeof draw !== 'undefined') {\r\n                draw(vg2);\r\n            }\r\n            var sourceInd = e => e.source.id, targetInd = e => e.target.id, length = e => e.length(),\r\n                spCalc = new Calculator(vg2.V.length, vg2.E, sourceInd, targetInd, length),\r\n                shortestPath = spCalc.PathFromNodeToNode(start.id, end.id);\r\n            if (shortestPath.length === 1 || shortestPath.length === vg2.V.length) {\r\n                let route = makeEdgeBetween(edge.source.innerBounds, edge.target.innerBounds, ah);\r\n                lineData = [route.sourceIntersection, route.arrowStart];\r\n            } else {\r\n                var n = shortestPath.length - 2,\r\n                    p = vg2.V[shortestPath[n]].p,\r\n                    q = vg2.V[shortestPath[0]].p,\r\n                    lineData = [edge.source.innerBounds.rayIntersection(p.x, p.y)];\r\n                for (var i = n; i >= 0; --i)\r\n                    lineData.push(vg2.V[shortestPath[i]].p);\r\n                lineData.push(makeEdgeTo(q, edge.target.innerBounds, ah));\r\n            }\r\n            //lineData.forEach((v, i) => {\r\n            //    if (i > 0) {\r\n            //        var u = lineData[i - 1];\r\n            //        this._nodes.forEach(function (node) {\r\n            //            if (node.id === getSourceIndex(d) || node.id === getTargetIndex(d)) return;\r\n            //            var ints = node.innerBounds.lineIntersections(u.x, u.y, v.x, v.y);\r\n            //            if (ints.length > 0) {\r\n            //                debugger;\r\n            //            }\r\n            //        })\r\n            //    }\r\n            //})\r\n            return lineData;\r\n        }\r\n\r\n        //The link source and target may be just a node index, or they may be references to nodes themselves.\r\n        static getSourceIndex(e: Link<Node | number>): number {\r\n            return typeof e.source === 'number' ? <number>e.source : (<Node>e.source).index;\r\n        }\r\n\r\n        //The link source and target may be just a node index, or they may be references to nodes themselves.\r\n        static getTargetIndex(e: Link<Node | number>): number {\r\n            return typeof e.target === 'number' ? <number>e.target : (<Node>e.target).index;\r\n        }\r\n\r\n        // Get a string ID for a given link.\r\n        static linkId(e: Link<Node | number>): string {\r\n            return Layout.getSourceIndex(e) + \"-\" + Layout.getTargetIndex(e);\r\n        }\r\n\r\n        // The fixed property has three bits:\r\n        // Bit 1 can be set externally (e.g., d.fixed = true) and show persist.\r\n        // Bit 2 stores the dragging state, from mousedown to mouseup.\r\n        // Bit 3 stores the hover state, from mouseover to mouseout.\r\n        static dragStart(d: Node | Group) {\r\n            if (isGroup(d)) {\r\n                Layout.storeOffset(d, Layout.dragOrigin(d));\r\n            } else {\r\n                Layout.stopNode(d);\r\n                d.fixed |= 2; // set bit 2\r\n            }\r\n        }\r\n\r\n        // we clobber any existing desired positions for nodes\r\n        // in case another tick event occurs before the drag\r\n        private static stopNode(v: Node) {\r\n            (<any>v).px = v.x;\r\n            (<any>v).py = v.y;\r\n        }\r\n\r\n        // we store offsets for each node relative to the centre of the ancestor group\r\n        // being dragged in a pair of properties on the node\r\n        private static storeOffset(d: Group, origin: { x: number, y: number }) {\r\n            if (typeof d.leaves !== 'undefined') {\r\n                d.leaves.forEach(v => {\r\n                    v.fixed |= 2;\r\n                    Layout.stopNode(v);\r\n                    (<any>v)._dragGroupOffsetX = v.x - origin.x;\r\n                    (<any>v)._dragGroupOffsetY = v.y - origin.y;\r\n                });\r\n            }\r\n            if (typeof d.groups !== 'undefined') {\r\n                d.groups.forEach(g => Layout.storeOffset(g, origin));\r\n            }\r\n        }\r\n\r\n        // the drag origin is taken as the centre of the node or group\r\n        static dragOrigin(d: Node | Group): { x: number, y: number } {\r\n            if (isGroup(d)) {\r\n                return {\r\n                    x: d.bounds.cx(),\r\n                    y: d.bounds.cy()\r\n                };\r\n            } else {\r\n                return d;\r\n            }\r\n        }\r\n\r\n        // for groups, the drag translation is propagated down to all of the children of\r\n        // the group.\r\n        static drag(d: Node | Group, position: { x: number, y: number }) {\r\n            if (isGroup(d)) {\r\n                if (typeof d.leaves !== 'undefined') {\r\n                    d.leaves.forEach(v => {\r\n                        d.bounds.setXCentre(position.x);\r\n                        d.bounds.setYCentre(position.y);\r\n                        (<any>v).px = (<any>v)._dragGroupOffsetX + position.x;\r\n                        (<any>v).py = (<any>v)._dragGroupOffsetY + position.y;\r\n                    });\r\n                }\r\n                if (typeof d.groups !== 'undefined') {\r\n                    d.groups.forEach(g => Layout.drag(g, position));\r\n                }\r\n            } else {\r\n                (<any>d).px = position.x;\r\n                (<any>d).py = position.y;\r\n            }\r\n        }\r\n\r\n        // we unset only bits 2 and 3 so that the user can fix nodes with another a different\r\n        // bit such that the lock persists between drags\r\n        static dragEnd(d) {\r\n            if (isGroup(d)) {\r\n                if (typeof d.leaves !== 'undefined') {\r\n                    d.leaves.forEach(v => {\r\n                        Layout.dragEnd(v);\r\n                        delete (<any>v)._dragGroupOffsetX;\r\n                        delete (<any>v)._dragGroupOffsetY;\r\n                    });\r\n                }\r\n                if (typeof d.groups !== 'undefined') {\r\n                    d.groups.forEach(Layout.dragEnd);\r\n                }\r\n            } else {\r\n                d.fixed &= ~6; // unset bits 2 and 3\r\n                //d.fixed = 0;\r\n            }\r\n        }\r\n\r\n        // in d3 hover temporarily locks nodes, currently not used in cola\r\n        static mouseOver(d) {\r\n            d.fixed |= 4; // set bit 3\r\n            d.px = d.x, d.py = d.y; // set velocity to zero\r\n        }\r\n\r\n        // in d3 hover temporarily locks nodes, currently not used in cola\r\n        static mouseOut(d) {\r\n            d.fixed &= ~4; // unset bit 3\r\n        }\r\n    }\r\n","import {Layout, EventType, Event} from './layout'\r\n\r\n    export class LayoutAdaptor extends Layout {\r\n\r\n        // dummy functions in case not defined by client\r\n        trigger(e: Event) {};\r\n        kick() {};\r\n        drag() {};\r\n        on(eventType: EventType | string, listener: () => void) : this { return this; };\r\n\r\n        dragstart: (d:any) => void;\r\n        dragStart: (d:any) => void;\r\n        dragend: (d:any) => void;\r\n        dragEnd: (d:any) => void;\r\n\r\n        constructor( options ) {\r\n            super();\r\n\r\n            // take in implementation as defined by client\r\n\r\n            var self = this;\r\n            var o = options;\r\n\r\n            if ( o.trigger ) {\r\n                this.trigger = o.trigger;\r\n            }\r\n\r\n            if ( o.kick ){\r\n                this.kick = o.kick;\r\n            }\r\n\r\n            if ( o.drag ){\r\n                this.drag = o.drag;\r\n            }\r\n\r\n            if ( o.on ){\r\n                this.on = o.on;\r\n            }\r\n\r\n            this.dragstart = this.dragStart = Layout.dragStart;\r\n            this.dragend = this.dragEnd = Layout.dragEnd;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * provides an interface for use with any external graph system (e.g. Cytoscape.js):\r\n     */\r\n    export function adaptor( options ): LayoutAdaptor {\r\n        return new LayoutAdaptor( options );\r\n    }\r\n","////<reference path=\"../extern/d3v3.d.ts\"/>\r\n////commented out the reference, because the path ended up in the typings, which\r\n////makes it impossible import in other projects.\r\ndeclare const d3;\r\n\r\n\r\nimport {Layout, EventType, Event} from './layout';\r\nimport {ID3StyleLayoutAdaptor} from './d3adaptor'\r\n\r\n    export class D3StyleLayoutAdaptor extends Layout implements ID3StyleLayoutAdaptor {\r\n        event = d3.dispatch(EventType[EventType.start], EventType[EventType.tick], EventType[EventType.end]);\r\n\r\n        trigger(e: Event) {\r\n            var d3event = { type: EventType[e.type], alpha: e.alpha, stress: e.stress };\r\n            this.event[d3event.type](d3event); // via d3 dispatcher, e.g. event.start(e);\r\n        }\r\n\r\n        // iterate layout using a d3.timer, which queues calls to tick repeatedly until tick returns true\r\n        kick() {\r\n            d3.timer(() => super.tick());\r\n        }\r\n\r\n        // a function to allow for dragging of nodes\r\n        drag: () => any;\r\n\r\n        constructor() {\r\n            super();\r\n            // bit of trickyness remapping 'this' so we can reference it in the function body.\r\n            var d3layout = this;\r\n            var drag;\r\n            this.drag = function () {\r\n                if (!drag) {\r\n                    var drag = d3.behavior.drag()\r\n                        .origin(Layout.dragOrigin)\r\n                        .on(\"dragstart.d3adaptor\", Layout.dragStart)\r\n                        .on(\"drag.d3adaptor\", d => {\r\n                            Layout.drag(d, <any>d3.event);\r\n                            d3layout.resume(); // restart annealing\r\n                        })\r\n                        .on(\"dragend.d3adaptor\", Layout.dragEnd);\r\n                }\r\n\r\n                if (!arguments.length) return drag;\r\n\r\n                // this is the context of the function, i.e. the d3 selection\r\n                this//.on(\"mouseover.adaptor\", colaMouseover)\r\n                //.on(\"mouseout.adaptor\", colaMouseout)\r\n                    .call(drag);\r\n            }\r\n        }\r\n\r\n        // a function for binding to events on the adapter\r\n        on(eventType: EventType | string, listener: () => void): this {\r\n            if (typeof eventType === 'string') {\r\n                this.event.on(eventType, listener);\r\n            } else {\r\n                this.event.on(EventType[eventType], listener);\r\n            }\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * provides an interface for use with d3:\r\n     * - uses the d3 event system to dispatch layout events such as:\r\n     *   o \"start\" (start layout process)\r\n     *   o \"tick\" (after each layout iteration)\r\n     *   o \"end\" (layout converged and complete).\r\n     * - uses the d3 timer to queue layout iterations.\r\n     * - sets up d3.behavior.drag to drag nodes\r\n     *   o use `node.call(<the returned instance of Layout>.drag)` to make nodes draggable\r\n     * returns an instance of the cola.Layout itself with which the user\r\n     * can interact directly.\r\n     */\r\n    export function d3adaptor(): D3StyleLayoutAdaptor {\r\n        return new D3StyleLayoutAdaptor();\r\n    }\r\n","import {dispatch} from 'd3-dispatch'\r\nimport {timer} from 'd3-timer'\r\nimport {drag as d3drag} from 'd3-drag'\r\nimport {Layout, EventType, Event} from './layout'\r\nimport {ID3StyleLayoutAdaptor} from './d3adaptor'\r\n\r\nexport interface D3Context {\r\n    timer: typeof timer; \r\n    drag: typeof d3drag; \r\n    dispatch: typeof dispatch;\r\n    event: any;\r\n}\r\n\r\nexport class D3StyleLayoutAdaptor extends Layout implements ID3StyleLayoutAdaptor {\r\n    event:any;\r\n    trigger(e: Event) {\r\n        var d3event = { type: EventType[e.type], alpha: e.alpha, stress: e.stress };\r\n        // the dispatcher is actually expecting something of type EventTarget as the second argument\r\n        // so passing the thing above is totally abusing the pattern... not sure what to do about this yet\r\n        this.event.call(d3event.type, <any>d3event); // via d3 dispatcher, e.g. event.start(e);\r\n    }\r\n\r\n    // iterate layout using a d3.timer, which queues calls to tick repeatedly until tick returns true\r\n    kick() {\r\n        var t = this.d3Context.timer(() => super.tick() && t.stop());\r\n    }\r\n\r\n    // a function to allow for dragging of nodes\r\n    drag: () => any;\r\n\r\n    constructor(private d3Context: D3Context) {\r\n        super();\r\n        this.event = d3Context.dispatch(EventType[EventType.start], EventType[EventType.tick], EventType[EventType.end]);\r\n\r\n        // bit of trickyness remapping 'this' so we can reference it in the function body.\r\n        var d3layout = this;\r\n        var drag;\r\n        this.drag = function () {\r\n            if (!drag) {\r\n                var drag = d3Context.drag()\r\n                    .subject(Layout.dragOrigin)\r\n                    .on(\"start.d3adaptor\", Layout.dragStart)\r\n                    .on(\"drag.d3adaptor\", d => {\r\n                        Layout.drag(<any>d, d3Context.event);\r\n                        d3layout.resume(); // restart annealing\r\n                    })\r\n                    .on(\"end.d3adaptor\", Layout.dragEnd);\r\n            }\r\n\r\n            if (!arguments.length) return drag;\r\n\r\n            // this is the context of the function, i.e. the d3 selection\r\n            //this//.on(\"mouseover.adaptor\", colaMouseover)\r\n            //.on(\"mouseout.adaptor\", colaMouseout)\r\n            arguments[0].call(drag);\r\n        }\r\n    }\r\n\r\n    // a function for binding to events on the adapter\r\n    on(eventType: EventType | string, listener: () => void): this {\r\n        if (typeof eventType === 'string') {\r\n            this.event.on(eventType, listener);\r\n        } else {\r\n            this.event.on(EventType[eventType], listener);\r\n        }\r\n        return this;\r\n    }\r\n}\r\n","import * as d3v3 from './d3v3adaptor'\r\nimport * as d3v4 from './d3v4adaptor'\r\nimport { Layout, EventType, Event } from './layout';\r\n\r\nexport interface D3v3Context { version:string };\r\n\r\nexport interface ID3StyleLayoutAdaptor {\r\n    trigger(e: Event): void;\r\n    kick(): void;\r\n    drag: () => any;\r\n\r\n    on(eventType: EventType | string, listener: () => void): ID3StyleLayoutAdaptor;\r\n}\r\n\r\n\r\n/**\r\n * provides an interface for use with d3:\r\n * Correct way to create way to construct the d3 cola object is to pass the d3 object into the adaptor function, like so:\r\n * \r\n *   `var d3cola = cola.d3adaptor(d3);`\r\n * \r\n * Internally, it will figure out if d3 is version 3 or 4 from the version tag and set up the right event forwarding. Defaults to version 3 if the d3 object is not passed.\r\n * - uses the d3 event system to dispatch layout events such as:\r\n *   o \"start\" (start layout process)\r\n *   o \"tick\" (after each layout iteration)\r\n *   o \"end\" (layout converged and complete).\r\n * - uses the d3 timer to queue layout iterations.\r\n * - sets up d3.behavior.drag to drag nodes\r\n *   o use `node.call(<the returned instance of Layout>.drag)` to make nodes draggable\r\n * returns an instance of the cola.Layout itself with which the user\r\n * can interact directly.\r\n */\r\nexport function d3adaptor(d3Context?: d3v4.D3Context | D3v3Context): Layout & ID3StyleLayoutAdaptor {\r\n    if (!d3Context || isD3V3(d3Context)) {\r\n        return new d3v3.D3StyleLayoutAdaptor();\r\n    }\r\n    return new d3v4.D3StyleLayoutAdaptor(d3Context);\r\n}\r\n\r\nfunction isD3V3(d3Context: d3v4.D3Context | D3v3Context): d3Context is D3v3Context {\r\n    const v3exp = /^3\\./;\r\n    return (<any>d3Context).version && (<any>d3Context).version.match(v3exp) !== null;\r\n}\r\n","import {Point} from './geom'\r\nimport {Rectangle} from './rectangle'\r\nimport {Constraint, Solver, Variable} from './vpsc'\r\nimport {Calculator} from './shortestpaths'\r\n    export interface NodeAccessor<Node>{\r\n        getChildren(v:Node) : number[];\r\n        getBounds(v:Node) : Rectangle;\r\n    }\r\n    export class NodeWrapper {\r\n        leaf: boolean;\r\n        parent: NodeWrapper;\r\n        ports: Vert[];\r\n        constructor(public id: number, public rect: Rectangle, public children: number[]) {\r\n            this.leaf = typeof children === 'undefined' || children.length === 0;\r\n        }\r\n    }\r\n    export class Vert {\r\n        constructor(public id: number, public x:number, public y: number, public node: NodeWrapper = null, public line = null) {}\r\n    }\r\n\r\n    export class LongestCommonSubsequence<T> {\r\n        length: number;\r\n        si: number;\r\n        ti: number;\r\n        reversed: boolean;\r\n        constructor(public s: T[], public t: T[]) {\r\n            var mf = LongestCommonSubsequence.findMatch(s, t);\r\n            var tr = t.slice(0).reverse();\r\n            var mr = LongestCommonSubsequence.findMatch(s, tr);\r\n            if (mf.length >= mr.length) {\r\n                this.length = mf.length;\r\n                this.si = mf.si;\r\n                this.ti = mf.ti;\r\n                this.reversed = false;\r\n            } else {\r\n                this.length = mr.length;\r\n                this.si = mr.si;\r\n                this.ti = t.length - mr.ti - mr.length;\r\n                this.reversed = true;\r\n            }\r\n        }\r\n        private static findMatch<T>(s: T[], t: T[]) {\r\n            var m = s.length;\r\n            var n = t.length;\r\n            var match = { length: 0, si: -1, ti: -1 };\r\n            var l = new Array(m);\r\n            for (var i = 0; i < m; i++) {\r\n                l[i] = new Array(n);\r\n                for (var j = 0; j < n; j++)\r\n                    if (s[i] === t[j]) {\r\n                        var v = l[i][j] = (i === 0 || j === 0) ? 1 : l[i - 1][j - 1] + 1;\r\n                        if (v > match.length) {\r\n                            match.length = v;\r\n                            match.si = i - v + 1;\r\n                            match.ti = j - v + 1;\r\n                        };\r\n                    } else l[i][j] = 0;\r\n            }\r\n            return match;\r\n        }\r\n        getSequence(): T[]{\r\n            return this.length >= 0 ? this.s.slice(this.si, this.si + this.length) : [];\r\n        }\r\n    }\r\n    // a horizontal or vertical line of nodes\r\n    export interface GridLine {\r\n        nodes: NodeWrapper[];\r\n        pos: number;\r\n    }\r\n    export class GridRouter<Node> {\r\n        leaves: NodeWrapper[] = null;\r\n        groups: NodeWrapper[];\r\n        nodes: NodeWrapper[];\r\n        cols: GridLine[];\r\n        rows: GridLine[];\r\n        root;\r\n        verts: Vert[];\r\n        edges;\r\n        backToFront;\r\n        obstacles;\r\n        passableEdges;\r\n        private avg(a) { return a.reduce((x, y) => x + y) / a.length }\r\n\r\n        // in the given axis, find sets of leaves overlapping in that axis\r\n        // center of each GridLine is average of all nodes in column\r\n        private getGridLines(axis): GridLine[] {\r\n            var columns = [];\r\n            var ls = this.leaves.slice(0, this.leaves.length);\r\n            while (ls.length > 0) {\r\n                // find a column of all leaves overlapping in axis with the first leaf\r\n                let overlapping = ls.filter(v=> v.rect['overlap' + axis.toUpperCase()](ls[0].rect));\r\n                let col = {\r\n                    nodes: overlapping,\r\n                    pos: this.avg(overlapping.map(v=> v.rect['c' + axis]()))\r\n                };\r\n                columns.push(col);\r\n                col.nodes.forEach(v=> ls.splice(ls.indexOf(v), 1));\r\n            }\r\n            columns.sort((a, b) => a.pos - b.pos)\r\n            return columns;\r\n        }\r\n\r\n        // get the depth of the given node in the group hierarchy\r\n        private getDepth(v) {\r\n            var depth = 0;\r\n            while (v.parent !== this.root) {\r\n                depth++;\r\n                v = v.parent;\r\n            }\r\n            return depth;\r\n        }\r\n\r\n        // medial axes between node centres and also boundary lines for the grid\r\n        private midPoints(a) {\r\n            var gap = a[1] - a[0];\r\n            var mids = [a[0] - gap / 2];\r\n            for (var i = 1; i < a.length; i++) {\r\n                mids.push((a[i] + a[i - 1]) / 2);\r\n            }\r\n            mids.push(a[a.length - 1] + gap / 2);\r\n            return mids;\r\n        }\r\n\r\n        constructor(public originalnodes: Node[], accessor: NodeAccessor<Node>, public groupPadding: number = 12) {\r\n            this.nodes = originalnodes.map((v, i) => new NodeWrapper(i, accessor.getBounds(v), accessor.getChildren(v)));\r\n            this.leaves = this.nodes.filter(v=> v.leaf);\r\n            this.groups = this.nodes.filter(g=> !g.leaf);\r\n            this.cols = this.getGridLines('x');\r\n            this.rows = this.getGridLines('y');\r\n\r\n            // create parents for each node or group that is a member of another's children\r\n            this.groups.forEach(v=>\r\n                v.children.forEach(c=> this.nodes[<number>c].parent = v));\r\n\r\n            // root claims the remaining orphans\r\n            this.root = { children: [] };\r\n            this.nodes.forEach(v=> {\r\n                if (typeof v.parent === 'undefined') {\r\n                    v.parent = this.root;\r\n                    this.root.children.push(v.id);\r\n                }\r\n\r\n                // each node will have grid vertices associated with it,\r\n                // some inside the node and some on the boundary\r\n                // leaf nodes will have exactly one internal node at the center\r\n                // and four boundary nodes\r\n                // groups will have potentially many of each\r\n                v.ports = []\r\n            });\r\n\r\n            // nodes ordered by their position in the group hierarchy\r\n            this.backToFront = this.nodes.slice(0);\r\n            this.backToFront.sort((x, y) => this.getDepth(x) - this.getDepth(y));\r\n\r\n            // compute boundary rectangles for each group\r\n            // has to be done from front to back, i.e. inside groups to outside groups\r\n            // such that each can be made large enough to enclose its interior\r\n            var frontToBackGroups = this.backToFront.slice(0).reverse().filter(g=> !g.leaf);\r\n            frontToBackGroups.forEach(v=> {\r\n                var r = Rectangle.empty();\r\n                v.children.forEach(c=> r = r.union(this.nodes[c].rect));\r\n                v.rect = r.inflate(this.groupPadding);\r\n            });\r\n\r\n            var colMids = this.midPoints(this.cols.map(r=> r.pos));\r\n            var rowMids = this.midPoints(this.rows.map(r=> r.pos));\r\n\r\n            // setup extents of lines\r\n            var rowx = colMids[0], rowX = colMids[colMids.length - 1];\r\n            var coly = rowMids[0], colY = rowMids[rowMids.length - 1];\r\n\r\n            // horizontal lines\r\n            var hlines = this.rows.map(r=> <any>{ x1: rowx, x2: rowX, y1: r.pos, y2: r.pos })\r\n                .concat(rowMids.map(m=> <any>{ x1: rowx, x2: rowX, y1: m, y2: m }));\r\n\r\n            // vertical lines\r\n            var vlines = this.cols.map(c=> <any>{ x1: c.pos, x2: c.pos, y1: coly, y2: colY })\r\n                .concat(colMids.map(m=> <any>{ x1: m, x2: m, y1: coly, y2: colY }));\r\n\r\n            // the full set of lines\r\n            var lines = hlines.concat(vlines);\r\n\r\n            // we record the vertices associated with each line\r\n            lines.forEach(l=> l.verts = []);\r\n\r\n            // the routing graph\r\n            this.verts = [];\r\n            this.edges = [];\r\n\r\n            // create vertices at the crossings of horizontal and vertical grid-lines\r\n            hlines.forEach(h=>\r\n                vlines.forEach(v=> {\r\n                    var p = new Vert(this.verts.length, v.x1, h.y1);\r\n                    h.verts.push(p);\r\n                    v.verts.push(p);\r\n                    this.verts.push(p);\r\n\r\n                    // assign vertices to the nodes immediately under them\r\n                    var i = this.backToFront.length;\r\n                    while (i-- > 0) {\r\n                        var node = this.backToFront[i],\r\n                            r = node.rect;\r\n                        var dx = Math.abs(p.x - r.cx()),\r\n                            dy = Math.abs(p.y - r.cy());\r\n                        if (dx < r.width() / 2 && dy < r.height() / 2) {\r\n                            (<any>p).node = node;\r\n                            break;\r\n                        }\r\n                    }\r\n                })\r\n                );\r\n\r\n            lines.forEach((l, li) => {\r\n                // create vertices at the intersections of nodes and lines\r\n                this.nodes.forEach((v, i) => {\r\n                    v.rect.lineIntersections(l.x1, l.y1, l.x2, l.y2).forEach((intersect, j) => {\r\n                        //console.log(li+','+i+','+j+':'+intersect.x + ',' + intersect.y);\r\n                        var p = new Vert(this.verts.length, intersect.x, intersect.y, v, l);\r\n                        this.verts.push(p);\r\n                        l.verts.push(p);\r\n                        v.ports.push(p);\r\n                    });\r\n                });\r\n\r\n                // split lines into edges joining vertices\r\n                var isHoriz = Math.abs(l.y1 - l.y2) < 0.1;\r\n                var delta = (a, b) => isHoriz ? b.x - a.x : b.y - a.y;\r\n                l.verts.sort(delta);\r\n                for (var i = 1; i < l.verts.length; i++) {\r\n                    var u = l.verts[i - 1], v = l.verts[i];\r\n                    if (u.node && u.node === v.node && u.node.leaf) continue;\r\n                    this.edges.push({ source: u.id, target: v.id, length: Math.abs(delta(u, v)) });\r\n                }\r\n            });\r\n\r\n\r\n\r\n        }\r\n\r\n        // find path from v to root including both v and root\r\n        private findLineage(v) {\r\n            var lineage = [v];\r\n            do {\r\n                v = v.parent;\r\n                lineage.push(v);\r\n            } while (v !== this.root);\r\n            return lineage.reverse();\r\n        }\r\n\r\n        // find path connecting a and b through their lowest common ancestor\r\n        private findAncestorPathBetween(a, b) {\r\n            var aa = this.findLineage(a), ba = this.findLineage(b), i = 0;\r\n            while (aa[i] === ba[i]) i++;\r\n            // i-1 to include common ancestor only once (as first element)\r\n            return { commonAncestor: aa[i - 1], lineages: aa.slice(i).concat(ba.slice(i)) };\r\n        }\r\n\r\n        // when finding a path between two nodes a and b, siblings of a and b on the\r\n        // paths from a and b to their least common ancestor are obstacles\r\n        siblingObstacles(a, b) {\r\n            var path = this.findAncestorPathBetween(a, b);\r\n            var lineageLookup = {};\r\n            path.lineages.forEach(v=> lineageLookup[v.id] = {});\r\n            var obstacles = path.commonAncestor.children.filter(v=> !(v in lineageLookup));\r\n\r\n            path.lineages\r\n                .filter(v=> v.parent !== path.commonAncestor)\r\n                .forEach(v=> obstacles = obstacles.concat(v.parent.children.filter(c=> c !== v.id)));\r\n\r\n            return obstacles.map(v=> this.nodes[v]);\r\n        }\r\n\r\n        // for the given routes, extract all the segments orthogonal to the axis x\r\n        // and return all them grouped by x position\r\n        static getSegmentSets(routes, x, y) {\r\n            // vsegments is a list of vertical segments sorted by x position\r\n            var vsegments = [];\r\n            for (var ei = 0; ei < routes.length; ei++) {\r\n                var route = routes[ei];\r\n                for (var si = 0; si < route.length; si++) {\r\n                    var s = <any>route[si];\r\n                    s.edgeid = ei;\r\n                    s.i = si;\r\n                    var sdx = s[1][x] - s[0][x];\r\n                    if (Math.abs(sdx) < 0.1) {\r\n                        vsegments.push(s);\r\n                    }\r\n                }\r\n            }\r\n            vsegments.sort((a, b) => a[0][x] - b[0][x]);\r\n\r\n            // vsegmentsets is a set of sets of segments grouped by x position\r\n            var vsegmentsets = [];\r\n            var segmentset = null;\r\n            for (var i = 0; i < vsegments.length; i++) {\r\n                var s = vsegments[i];\r\n                if (!segmentset || Math.abs(s[0][x] - segmentset.pos) > 0.1) {\r\n                    segmentset = { pos: s[0][x], segments: [] };\r\n                    vsegmentsets.push(segmentset);\r\n                }\r\n                segmentset.segments.push(s);\r\n            }\r\n            return vsegmentsets;\r\n        }\r\n\r\n        // for all segments in this bundle create a vpsc problem such that\r\n        // each segment's x position is a variable and separation constraints\r\n        // are given by the partial order over the edges to which the segments belong\r\n        // for each pair s1,s2 of segments in the open set:\r\n        //   e1 = edge of s1, e2 = edge of s2\r\n        //   if leftOf(e1,e2) create constraint s1.x + gap <= s2.x\r\n        //   else if leftOf(e2,e1) create cons. s2.x + gap <= s1.x\r\n        static nudgeSegs(x: string, y: string, routes, segments, leftOf, gap: number) {\r\n            var n = segments.length;\r\n            if (n <= 1) return;\r\n            var vs = segments.map(s => new Variable(s[0][x]));\r\n            var cs = [];\r\n            for (var i = 0; i < n; i++) {\r\n                for (var j = 0; j < n; j++) {\r\n                    if (i === j) continue;\r\n                    var s1 = segments[i],\r\n                        s2 = segments[j],\r\n                        e1 = s1.edgeid,\r\n                        e2 = s2.edgeid,\r\n                        lind = -1,\r\n                        rind = -1;\r\n                    // in page coordinates (not cartesian) the notion of 'leftof' is flipped in the horizontal axis from the vertical axis\r\n                    // that is, when nudging vertical segments, if they increase in the y(conj) direction the segment belonging to the\r\n                    // 'left' edge actually needs to be nudged to the right\r\n                    // when nudging horizontal segments, if the segments increase in the x direction\r\n                    // then the 'left' segment needs to go higher, i.e. to have y pos less than that of the right\r\n                    if (x == 'x') {\r\n                        if (leftOf(e1, e2)) {\r\n                            //console.log('s1: ' + s1[0][x] + ',' + s1[0][y] + '-' + s1[1][x] + ',' + s1[1][y]);\r\n                            if (s1[0][y] < s1[1][y]) {\r\n                                lind = j, rind = i;\r\n                            } else {\r\n                                lind = i, rind = j;\r\n                            }\r\n                        }\r\n                    } else {\r\n                        if (leftOf(e1, e2)) {\r\n                            if (s1[0][y] < s1[1][y]) {\r\n                                lind = i, rind = j;\r\n                            } else {\r\n                                lind = j, rind = i;\r\n                            }\r\n                        }\r\n                    }\r\n                    if (lind >= 0) {\r\n                        //console.log(x+' constraint: ' + lind + '<' + rind);\r\n                        cs.push(new Constraint(vs[lind], vs[rind], gap));\r\n                    }\r\n                }\r\n            }\r\n            var solver = new Solver(vs, cs);\r\n            solver.solve();\r\n            vs.forEach((v, i) => {\r\n                var s = segments[i];\r\n                var pos = v.position();\r\n                s[0][x] = s[1][x] = pos;\r\n                var route = routes[s.edgeid];\r\n                if (s.i > 0) route[s.i - 1][1][x] = pos;\r\n                if (s.i < route.length - 1) route[s.i + 1][0][x] = pos;\r\n            });\r\n        }\r\n\r\n        static nudgeSegments(routes, x: string, y: string, leftOf: (e1: number, e2: number) => boolean, gap: number) {\r\n            var vsegmentsets = GridRouter.getSegmentSets(routes, x, y);\r\n            // scan the grouped (by x) segment sets to find co-linear bundles\r\n            for (var i = 0; i < vsegmentsets.length; i++) {\r\n                var ss = vsegmentsets[i];\r\n                var events = [];\r\n                for (var j = 0; j < ss.segments.length; j++) {\r\n                    var s = ss.segments[j];\r\n                    events.push({ type: 0, s: s, pos: Math.min(s[0][y], s[1][y]) });\r\n                    events.push({ type: 1, s: s, pos: Math.max(s[0][y], s[1][y]) });\r\n                }\r\n                events.sort((a, b) => a.pos - b.pos + a.type - b.type);\r\n                var open = [];\r\n                var openCount = 0;\r\n                events.forEach(e=> {\r\n                    if (e.type === 0) {\r\n                        open.push(e.s);\r\n                        openCount++;\r\n                    } else {\r\n                        openCount--;\r\n                    }\r\n                    if (openCount == 0) {\r\n                        GridRouter.nudgeSegs(x, y, routes, open, leftOf, gap);\r\n                        open = [];\r\n                    }\r\n                });\r\n            }\r\n        }\r\n\r\n        // obtain routes for the specified edges, nicely nudged apart\r\n        // warning: edge paths may be reversed such that common paths are ordered consistently within bundles!\r\n        // @param edges list of edges\r\n        // @param nudgeGap how much to space parallel edge segements\r\n        // @param source function to retrieve the index of the source node for a given edge\r\n        // @param target function to retrieve the index of the target node for a given edge\r\n        // @returns an array giving, for each edge, an array of segments, each segment a pair of points in an array\r\n        routeEdges<Edge>(edges: Edge[], nudgeGap: number, source: (e: Edge) => number, target: (e: Edge) => number): Point[][][] {\r\n            var routePaths = edges.map(e=> this.route(source(e), target(e)));\r\n            var order = GridRouter.orderEdges(routePaths);\r\n            var routes = routePaths.map(function (e) { return GridRouter.makeSegments(e); });\r\n            GridRouter.nudgeSegments(routes, 'x', 'y', order, nudgeGap);\r\n            GridRouter.nudgeSegments(routes, 'y', 'x', order, nudgeGap);\r\n            GridRouter.unreverseEdges(routes, routePaths);\r\n            return routes;\r\n        }\r\n\r\n        // path may have been reversed by the subsequence processing in orderEdges\r\n        // so now we need to restore the original order\r\n        static unreverseEdges(routes, routePaths) {\r\n            routes.forEach((segments, i) => {\r\n                var path = routePaths[i];\r\n                if ((<any>path).reversed) {\r\n                    segments.reverse(); // reverse order of segments\r\n                    segments.forEach(function (segment) {\r\n                        segment.reverse();  // reverse each segment\r\n                    });\r\n                }\r\n            });\r\n        }\r\n\r\n        static angleBetween2Lines(line1: Point[], line2: Point[]): number {\r\n            var angle1 = Math.atan2(line1[0].y - line1[1].y,\r\n                line1[0].x - line1[1].x);\r\n            var angle2 = Math.atan2(line2[0].y - line2[1].y,\r\n                line2[0].x - line2[1].x);\r\n            var diff = angle1 - angle2;\r\n            if (diff > Math.PI || diff < -Math.PI) {\r\n                diff = angle2 - angle1;\r\n            }\r\n            return diff;\r\n        }\r\n\r\n        // does the path a-b-c describe a left turn?\r\n        private static isLeft(a, b, c) {\r\n            return ((b.x - a.x) * (c.y - a.y) - (b.y - a.y) * (c.x - a.x)) <= 0;\r\n        }\r\n\r\n        // for the given list of ordered pairs, returns a function that (efficiently) looks-up a specific pair to\r\n        // see if it exists in the list\r\n        private static getOrder(pairs: { l: number; r: number }[]): (l: number, r: number) => boolean {\r\n            var outgoing = {};\r\n            for (var i = 0; i < pairs.length; i++) {\r\n                var p = pairs[i];\r\n                if (typeof outgoing[p.l] === 'undefined') outgoing[p.l] = {};\r\n                outgoing[p.l][p.r] = true;\r\n            }\r\n            return (l, r) => typeof outgoing[l] !== 'undefined' && outgoing[l][r];\r\n        }\r\n\r\n        // returns an ordering (a lookup function) that determines the correct order to nudge the\r\n        // edge paths apart to minimize crossings\r\n        static orderEdges(edges) {\r\n            var edgeOrder = [];\r\n            for (var i = 0; i < edges.length - 1; i++) {\r\n                for (var j = i + 1; j < edges.length; j++) {\r\n                    var e = edges[i],\r\n                        f = edges[j],\r\n                        lcs = new LongestCommonSubsequence(e, f);\r\n                    var u, vi, vj;\r\n                    if (lcs.length === 0)\r\n                        continue; // no common subpath\r\n                    if (lcs.reversed) {\r\n                        // if we found a common subpath but one of the edges runs the wrong way,\r\n                        // then reverse f.\r\n                        f.reverse();\r\n                        f.reversed = true;\r\n                        lcs = new LongestCommonSubsequence(e, f);\r\n                    }\r\n                    if ((lcs.si <= 0 || lcs.ti <= 0) &&\r\n                        (lcs.si + lcs.length >= e.length || lcs.ti + lcs.length >= f.length)) {\r\n                        // the paths do not diverge, so make an arbitrary ordering decision\r\n                        edgeOrder.push({ l: i, r: j });\r\n                        continue;\r\n                    }\r\n                    if (lcs.si + lcs.length >= e.length || lcs.ti + lcs.length >= f.length) {\r\n                        // if the common subsequence of the\r\n                        // two edges being considered goes all the way to the\r\n                        // end of one (or both) of the lines then we have to\r\n                        // base our ordering decision on the other end of the\r\n                        // common subsequence\r\n                        u = e[lcs.si + 1];\r\n                        vj = e[lcs.si - 1];\r\n                        vi = f[lcs.ti - 1];\r\n                    } else {\r\n                        u = e[lcs.si + lcs.length - 2];\r\n                        vi = e[lcs.si + lcs.length];\r\n                        vj = f[lcs.ti + lcs.length];\r\n                    }\r\n                    if (GridRouter.isLeft(u, vi, vj)) {\r\n                        edgeOrder.push({ l: j, r: i });\r\n                    } else {\r\n                        edgeOrder.push({ l: i, r: j });\r\n                    }\r\n                }\r\n            }\r\n            //edgeOrder.forEach(function (e) { console.log('l:' + e.l + ',r:' + e.r) });\r\n            return GridRouter.getOrder(edgeOrder);\r\n        }\r\n\r\n        // for an orthogonal path described by a sequence of points, create a list of segments\r\n        // if consecutive segments would make a straight line they are merged into a single segment\r\n        // segments are over cloned points, not the original vertices\r\n        static makeSegments(path: Point[]): Point[][] {\r\n            function copyPoint(p: Point) {\r\n                return <Point>{ x: p.x, y: p.y };\r\n            }\r\n            var isStraight = (a, b, c) => Math.abs((b.x - a.x) * (c.y - a.y) - (b.y - a.y) * (c.x - a.x)) < 0.001;\r\n            var segments = [];\r\n            var a = copyPoint(path[0]);\r\n            for (var i = 1; i < path.length; i++) {\r\n                var b = copyPoint(path[i]), c = i < path.length - 1 ? path[i + 1] : null;\r\n                if (!c || !isStraight(a, b, c)) {\r\n                    segments.push([a, b]);\r\n                    a = b;\r\n                }\r\n            }\r\n            return segments;\r\n        }\r\n\r\n        // find a route between node s and node t\r\n        // returns an array of indices to verts\r\n        route(s: number, t: number): Point[] {\r\n            var source = this.nodes[<number>s], target = this.nodes[<number>t];\r\n            this.obstacles = this.siblingObstacles(source, target);\r\n\r\n            var obstacleLookup = {};\r\n            this.obstacles.forEach(o => obstacleLookup[o.id] = o);\r\n            this.passableEdges = this.edges.filter(e=> {\r\n                var u = this.verts[e.source],\r\n                    v = this.verts[e.target];\r\n                return !(u.node && u.node.id in obstacleLookup\r\n                    || v.node && v.node.id in obstacleLookup);\r\n            });\r\n\r\n            // add dummy segments linking ports inside source and target\r\n            for (var i = 1; i < source.ports.length; i++) {\r\n                var u = source.ports[0].id;\r\n                var v = source.ports[i].id;\r\n                this.passableEdges.push({\r\n                    source: u,\r\n                    target: v,\r\n                    length: 0\r\n                });\r\n            }\r\n            for (var i = 1; i < target.ports.length; i++) {\r\n                var u = target.ports[0].id;\r\n                var v = target.ports[i].id;\r\n                this.passableEdges.push({\r\n                    source: u,\r\n                    target: v,\r\n                    length: 0\r\n                });\r\n            }\r\n\r\n            var getSource = e=> e.source,\r\n                getTarget = e=> e.target,\r\n                getLength = e=> e.length;\r\n\r\n            var shortestPathCalculator = new Calculator(this.verts.length, this.passableEdges, getSource, getTarget, getLength);\r\n            var bendPenalty = (u, v, w) => {\r\n                var a = this.verts[u], b = this.verts[v], c = this.verts[w];\r\n                var dx = Math.abs(c.x - a.x), dy = Math.abs(c.y - a.y);\r\n                // don't count bends from internal node edges\r\n                if (a.node === source && a.node === b.node || b.node === target && b.node === c.node)\r\n                    return 0;\r\n                return dx > 1 && dy > 1 ? 1000 : 0;\r\n            };\r\n\r\n            // get shortest path\r\n            var shortestPath = shortestPathCalculator.PathFromNodeToNodeWithPrevCost(\r\n                source.ports[0].id, target.ports[0].id,\r\n                bendPenalty);\r\n\r\n            // shortest path is reversed and does not include the target port\r\n            var pathPoints = shortestPath.reverse().map(vi => this.verts[vi]);\r\n            pathPoints.push(this.nodes[target.id].ports[0]);\r\n\r\n            // filter out any extra end points that are inside the source or target (i.e. the dummy segments above)\r\n            return pathPoints.filter((v, i) =>\r\n                !(i < pathPoints.length - 1 && pathPoints[i + 1].node === source && v.node === source\r\n                    || i > 0 && v.node === target && pathPoints[i - 1].node === target));\r\n        }\r\n\r\n        static getRoutePath(route: Point[][], cornerradius: number, arrowwidth: number, arrowheight: number): { routepath: string; arrowpath: string } {\r\n            var result = {\r\n                routepath: 'M ' + route[0][0].x + ' ' + route[0][0].y + ' ',\r\n                arrowpath: ''\r\n            };\r\n            if (route.length > 1) {\r\n                for (var i = 0; i < route.length; i++) {\r\n                    var li = route[i];\r\n                    var x = li[1].x, y = li[1].y;\r\n                    var dx = x - li[0].x;\r\n                    var dy = y - li[0].y;\r\n                    if (i < route.length - 1) {\r\n                        if (Math.abs(dx) > 0) {\r\n                            x -= dx / Math.abs(dx) * cornerradius;\r\n                        } else {\r\n                            y -= dy / Math.abs(dy) * cornerradius;\r\n                        }\r\n                        result.routepath += 'L ' + x + ' ' + y + ' ';\r\n                        var l = route[i + 1];\r\n                        var x0 = l[0].x, y0 = l[0].y;\r\n                        var x1 = l[1].x;\r\n                        var y1 = l[1].y;\r\n                        dx = x1 - x0;\r\n                        dy = y1 - y0;\r\n                        var angle = GridRouter.angleBetween2Lines(li, l) < 0 ? 1 : 0;\r\n                        //console.log(cola.GridRouter.angleBetween2Lines(li, l))\r\n                        var x2, y2;\r\n                        if (Math.abs(dx) > 0) {\r\n                            x2 = x0 + dx / Math.abs(dx) * cornerradius;\r\n                            y2 = y0;\r\n                        } else {\r\n                            x2 = x0;\r\n                            y2 = y0 + dy / Math.abs(dy) * cornerradius;\r\n                        }\r\n                        var cx = Math.abs(x2 - x);\r\n                        var cy = Math.abs(y2 - y);\r\n                        result.routepath += 'A ' + cx + ' ' + cy + ' 0 0 ' + angle + ' ' + x2 + ' ' + y2 + ' ';\r\n                    } else {\r\n                        var arrowtip = [x, y];\r\n                        var arrowcorner1, arrowcorner2;\r\n                        if (Math.abs(dx) > 0) {\r\n                            x -= dx / Math.abs(dx) * arrowheight;\r\n                            arrowcorner1 = [x, y + arrowwidth];\r\n                            arrowcorner2 = [x, y - arrowwidth];\r\n                        } else {\r\n                            y -= dy / Math.abs(dy) * arrowheight;\r\n                            arrowcorner1 = [x + arrowwidth, y];\r\n                            arrowcorner2 = [x - arrowwidth, y];\r\n                        }\r\n                        result.routepath += 'L ' + x + ' ' + y + ' ';\r\n                        if (arrowheight > 0) {\r\n                            result.arrowpath = 'M ' + arrowtip[0] + ' ' + arrowtip[1] + ' L ' + arrowcorner1[0] + ' ' + arrowcorner1[1]\r\n                            + ' L ' + arrowcorner2[0] + ' ' + arrowcorner2[1];\r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                var li = route[0];\r\n                var x = li[1].x, y = li[1].y;\r\n                var dx = x - li[0].x;\r\n                var dy = y - li[0].y;\r\n                var arrowtip = [x, y];\r\n                var arrowcorner1, arrowcorner2;\r\n                if (Math.abs(dx) > 0) {\r\n                    x -= dx / Math.abs(dx) * arrowheight;\r\n                    arrowcorner1 = [x, y + arrowwidth];\r\n                    arrowcorner2 = [x, y - arrowwidth];\r\n                } else {\r\n                    y -= dy / Math.abs(dy) * arrowheight;\r\n                    arrowcorner1 = [x + arrowwidth, y];\r\n                    arrowcorner2 = [x - arrowwidth, y];\r\n                }\r\n                result.routepath += 'L ' + x + ' ' + y + ' ';\r\n                if (arrowheight > 0) {\r\n                    result.arrowpath = 'M ' + arrowtip[0] + ' ' + arrowtip[1] + ' L ' + arrowcorner1[0] + ' ' + arrowcorner1[1]\r\n                    + ' L ' + arrowcorner2[0] + ' ' + arrowcorner2[1];\r\n                }\r\n            }\r\n            return result;\r\n        }\r\n    }\r\n","import {Calculator} from './shortestpaths'\r\nimport {Descent} from './descent'\r\nimport {Projection, GraphNode, Rectangle} from './rectangle'\r\nimport {Variable} from './vpsc'\r\nimport {jaccardLinkLengths, LinkLengthAccessor} from './linklengths'\r\n\r\nexport class Link3D {\r\n        length: number;\r\n        constructor(public source: number, public target: number) { }\r\n        actualLength(x: number[][]) {\r\n            return Math.sqrt(\r\n                x.reduce((c: number, v: number[]) => {\r\n                    const dx = v[this.target] - v[this.source];\r\n                    return c + dx * dx;\r\n                }, 0));\r\n        }\r\n    }\r\n    export class Node3D implements GraphNode {\r\n        // if fixed, layout will not move the node from its specified starting position\r\n        fixed: boolean;\r\n        width: number;\r\n        height: number;\r\n        px: number;\r\n        py: number;\r\n        bounds: Rectangle;\r\n        variable: Variable;\r\n        constructor(\r\n            public x: number = 0,\r\n            public y: number = 0,\r\n            public z: number = 0) { }\r\n    }\r\n    export class Layout3D {\r\n        static dims = ['x', 'y', 'z'];\r\n        static k = Layout3D.dims.length;\r\n        result: number[][];\r\n        constraints: any[] = null;\r\n\r\n        constructor(public nodes: Node3D[], public links: Link3D[], public idealLinkLength: number = 1) {\r\n            this.result = new Array(Layout3D.k);\r\n            for (var i = 0; i < Layout3D.k; ++i) {\r\n                this.result[i] = new Array(nodes.length);\r\n            }\r\n            nodes.forEach((v, i) => {\r\n                for (var dim of Layout3D.dims) {\r\n                    if (typeof v[dim] == 'undefined') v[dim] = Math.random();\r\n                }\r\n                this.result[0][i] = v.x;\r\n                this.result[1][i] = v.y;\r\n                this.result[2][i] = v.z;\r\n            });\r\n        };\r\n\r\n        linkLength(l: Link3D): number {\r\n            return l.actualLength(this.result);\r\n        }\r\n\r\n        useJaccardLinkLengths: boolean = true;\r\n\r\n        descent: Descent;\r\n        start(iterations: number = 100): Layout3D {\r\n            const n = this.nodes.length;\r\n\r\n            var linkAccessor = new LinkAccessor();\r\n\r\n            if (this.useJaccardLinkLengths)\r\n                jaccardLinkLengths(this.links, linkAccessor, 1.5);\r\n\r\n            this.links.forEach(e => e.length *= this.idealLinkLength);\r\n\r\n            // Create the distance matrix that Cola needs\r\n            const distanceMatrix = (new Calculator(n, this.links,\r\n                e=> e.source, e=> e.target, e => e.length)).DistanceMatrix();\r\n\r\n            const D = Descent.createSquareMatrix(n, (i, j) => distanceMatrix[i][j]);\r\n\r\n            // G is a square matrix with G[i][j] = 1 iff there exists an edge between node i and node j\r\n            // otherwise 2.\r\n            var G = Descent.createSquareMatrix(n, function () { return 2 });\r\n            this.links.forEach(({ source, target }) => G[source][target] = G[target][source] = 1);\r\n\r\n            this.descent = new Descent(this.result, D);\r\n            this.descent.threshold = 1e-3;\r\n            this.descent.G = G;\r\n            //let constraints = this.links.map(e=> <any>{\r\n            //    axis: 'y', left: e.source, right: e.target, gap: e.length*1.5\r\n            //});\r\n            if (this.constraints)\r\n                this.descent.project = new Projection(<GraphNode[]>this.nodes, null, null, this.constraints).projectFunctions();\r\n\r\n            for (var i = 0; i < this.nodes.length; i++) {\r\n                var v = this.nodes[i];\r\n                if (v.fixed) {\r\n                    this.descent.locks.add(i, [v.x, v.y, v.z]);\r\n                }\r\n            }\r\n\r\n            this.descent.run(iterations);\r\n            return this;\r\n        }\r\n\r\n        tick(): number {\r\n            this.descent.locks.clear();\r\n            for (var i = 0; i < this.nodes.length; i++) {\r\n                var v = this.nodes[i];\r\n                if (v.fixed) {\r\n                    this.descent.locks.add(i, [v.x, v.y, v.z]);\r\n                }\r\n            }\r\n            return this.descent.rungeKutta();\r\n        }\r\n    }\r\n\r\n    class LinkAccessor implements LinkLengthAccessor<any> {\r\n        getSourceIndex(e: any): number { return e.source; }\r\n        getTargetIndex(e: any): number { return e.target; }\r\n        getLength(e: any): number { return e.length; }\r\n        setLength(e: any, l: number) { e.length = l; }\r\n    }\r\n","import {Node, Link, Layout} from './layout'\r\nimport {GridRouter} from './gridrouter'\r\nimport {Point} from './geom'\r\n\r\n/**\r\n * @property nudgeGap spacing between parallel edge segments\r\n * @property margin space around nodes\r\n * @property groupMargin space around groups\r\n */\r\nexport function gridify(pgLayout, nudgeGap: number, margin: number, groupMargin: number) {\r\n    pgLayout.cola.start(0, 0, 0, 10, false);\r\n    let gridrouter = route(pgLayout.cola.nodes(), pgLayout.cola.groups(), margin, groupMargin);\r\n    return gridrouter.routeEdges<any>(pgLayout.powerGraph.powerEdges, nudgeGap, e=> e.source.routerNode.id, e=> e.target.routerNode.id);\r\n}\r\n\r\nfunction route(nodes, groups, margin: number, groupMargin: number) {\r\n    nodes.forEach(d => {\r\n        d.routerNode = <any>{\r\n            name: d.name,\r\n            bounds: d.bounds.inflate(-margin)\r\n        };\r\n    });\r\n    groups.forEach(d => {\r\n        d.routerNode = <any>{\r\n            bounds: d.bounds.inflate(-groupMargin),\r\n            children: (typeof d.groups !== 'undefined' ? d.groups.map(c=> nodes.length + c.id) : [])\r\n                .concat(typeof d.leaves !== 'undefined' ? d.leaves.map(c=> c.index) : [])\r\n        };\r\n    });\r\n    let gridRouterNodes = nodes.concat(groups).map((d, i) => {\r\n        d.routerNode.id = i;\r\n        return d.routerNode;\r\n    });\r\n    return new GridRouter(gridRouterNodes, {\r\n        getChildren: (v: any) => v.children,\r\n        getBounds: v => v.bounds\r\n    }, margin - groupMargin);\r\n}\r\n\r\nexport function powerGraphGridLayout(\r\n    graph: { nodes: Node[], links: Link<Node>[] },\r\n    size: number[],\r\n    grouppadding: number)\r\n{\r\n    // compute power graph\r\n    var powerGraph;\r\n    graph.nodes.forEach((v,i) => (<any>v).index = i);\r\n    new Layout()\r\n        .avoidOverlaps(false)\r\n        .nodes(graph.nodes)\r\n        .links(graph.links)\r\n        .powerGraphGroups(function (d) {\r\n            powerGraph = d;\r\n            powerGraph.groups.forEach(v=> v.padding = grouppadding);\r\n        });\r\n\r\n    // construct a flat graph with dummy nodes for the groups and edges connecting group dummy nodes to their children\r\n    // power edges attached to groups are replaced with edges connected to the corresponding group dummy node\r\n    var n = graph.nodes.length;\r\n    var edges = [];\r\n    var vs = graph.nodes.slice(0);\r\n    vs.forEach((v, i) => (<any>v).index = i);\r\n    powerGraph.groups.forEach(g => {\r\n        var sourceInd = g.index = g.id + n;\r\n        vs.push(g);\r\n        if (typeof g.leaves !== 'undefined')\r\n            g.leaves.forEach(v => edges.push({ source: sourceInd, target: v.index }));\r\n        if (typeof g.groups !== 'undefined')\r\n            g.groups.forEach(gg => edges.push({ source: sourceInd, target: gg.id + n }));\r\n    });\r\n    powerGraph.powerEdges.forEach(e=> {\r\n        edges.push({ source: e.source.index, target: e.target.index });\r\n    });\r\n\r\n    // layout the flat graph with dummy nodes and edges\r\n    new Layout()\r\n        .size(size)\r\n        .nodes(vs)\r\n        .links(edges)\r\n        .avoidOverlaps(false)\r\n        .linkDistance(30)\r\n        .symmetricDiffLinkLengths(5)\r\n        .convergenceThreshold(1e-4)\r\n        .start(100, 0, 0, 0, false);\r\n\r\n    // final layout taking node positions from above as starting positions\r\n    // subject to group containment constraints\r\n    // and then gridifying the layout\r\n    return {\r\n        cola:\r\n            new Layout()\r\n            .convergenceThreshold(1e-3)\r\n            .size(size)\r\n            .avoidOverlaps(true)\r\n            .nodes(graph.nodes)\r\n            .links(graph.links)\r\n        //.flowLayout('y', 30)\r\n            .groupCompactness(1e-4)\r\n            .linkDistance(30)\r\n            .symmetricDiffLinkLengths(5)\r\n            .powerGraphGroups(function (d) {\r\n                powerGraph = d;\r\n                powerGraph.groups.forEach(function (v) {\r\n                    v.padding = grouppadding\r\n                });\r\n            }).start(50, 0, 100, 0, false),\r\n        powerGraph: powerGraph\r\n    };\r\n}\r\n","export * from './src/adaptor'\r\nexport * from './src/d3adaptor'\r\nexport * from './src/descent'\r\nexport * from './src/geom'\r\nexport * from './src/gridrouter'\r\nexport * from './src/handledisconnected'\r\nexport * from './src/layout'\r\nexport * from './src/layout3d'\r\nexport * from './src/linklengths'\r\nexport * from './src/powergraph'\r\nexport * from './src/pqueue'\r\nexport * from './src/rbtree'\r\nexport * from './src/rectangle'\r\nexport * from './src/shortestpaths'\r\nexport * from './src/vpsc'\r\nexport * from './src/batch'\r\n","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"webcola\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"webcola\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"cytoscapeCola\"] = factory(require(\"webcola\"));\n\telse\n\t\troot[\"cytoscapeCola\"] = factory(root[\"webcola\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_5__) {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// identity function for calling harmony imports with the correct context\n/******/ \t__webpack_require__.i = function(value) { return value; };\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 3);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar assign = __webpack_require__(1);\nvar defaults = __webpack_require__(2);\nvar cola = __webpack_require__(5) || (typeof window !== 'undefined' ? window.cola : null);\nvar raf = __webpack_require__(4);\nvar isString = function isString(o) {\n  return (typeof o === 'undefined' ? 'undefined' : _typeof(o)) === _typeof('');\n};\nvar isNumber = function isNumber(o) {\n  return (typeof o === 'undefined' ? 'undefined' : _typeof(o)) === _typeof(0);\n};\nvar isObject = function isObject(o) {\n  return o != null && (typeof o === 'undefined' ? 'undefined' : _typeof(o)) === _typeof({});\n};\nvar isFunction = function isFunction(o) {\n  return o != null && (typeof o === 'undefined' ? 'undefined' : _typeof(o)) === _typeof(function () {});\n};\nvar nop = function nop() {};\n\nvar getOptVal = function getOptVal(val, ele) {\n  if (isFunction(val)) {\n    var fn = val;\n    return fn.apply(ele, [ele]);\n  } else {\n    return val;\n  }\n};\n\n// constructor\n// options : object containing layout options\nfunction ColaLayout(options) {\n  this.options = assign({}, defaults, options);\n}\n\n// runs the layout\nColaLayout.prototype.run = function () {\n  var layout = this;\n  var options = this.options;\n\n  layout.manuallyStopped = false;\n\n  var cy = options.cy; // cy is automatically populated for us in the constructor\n  var eles = options.eles;\n  var nodes = eles.nodes();\n  var edges = eles.edges();\n  var ready = false;\n\n  var isParent = function isParent(ele) {\n    return ele.isParent();\n  };\n\n  var parentNodes = nodes.filter(isParent);\n\n  var nonparentNodes = nodes.subtract(parentNodes);\n\n  var bb = options.boundingBox || { x1: 0, y1: 0, w: cy.width(), h: cy.height() };\n  if (bb.x2 === undefined) {\n    bb.x2 = bb.x1 + bb.w;\n  }\n  if (bb.w === undefined) {\n    bb.w = bb.x2 - bb.x1;\n  }\n  if (bb.y2 === undefined) {\n    bb.y2 = bb.y1 + bb.h;\n  }\n  if (bb.h === undefined) {\n    bb.h = bb.y2 - bb.y1;\n  }\n\n  var updateNodePositions = function updateNodePositions() {\n    for (var i = 0; i < nodes.length; i++) {\n      var node = nodes[i];\n      var dimensions = node.layoutDimensions(options);\n      var scratch = node.scratch('cola');\n\n      // update node dims\n      if (!scratch.updatedDims) {\n        var padding = getOptVal(options.nodeSpacing, node);\n\n        scratch.width = dimensions.w + 2 * padding;\n        scratch.height = dimensions.h + 2 * padding;\n      }\n    }\n\n    nodes.positions(function (node) {\n      var scratch = node.scratch().cola;\n      var retPos = void 0;\n\n      if (!node.grabbed() && nonparentNodes.contains(node)) {\n        retPos = {\n          x: bb.x1 + scratch.x,\n          y: bb.y1 + scratch.y\n        };\n\n        if (!isNumber(retPos.x) || !isNumber(retPos.y)) {\n          retPos = undefined;\n        }\n      }\n\n      return retPos;\n    });\n\n    nodes.updateCompoundBounds(); // because the way this layout sets positions is buggy for some reason; ref #878\n\n    if (!ready) {\n      onReady();\n      ready = true;\n    }\n\n    if (options.fit) {\n      cy.fit(options.padding);\n    }\n  };\n\n  var onDone = function onDone() {\n    if (options.ungrabifyWhileSimulating) {\n      grabbableNodes.grabify();\n    }\n\n    cy.off('destroy', destroyHandler);\n\n    nodes.off('grab free position', grabHandler);\n    nodes.off('lock unlock', lockHandler);\n\n    // trigger layoutstop when the layout stops (e.g. finishes)\n    layout.one('layoutstop', options.stop);\n    layout.trigger({ type: 'layoutstop', layout: layout });\n  };\n\n  var onReady = function onReady() {\n    // trigger layoutready when each node has had its position set at least once\n    layout.one('layoutready', options.ready);\n    layout.trigger({ type: 'layoutready', layout: layout });\n  };\n\n  var ticksPerFrame = options.refresh;\n\n  if (options.refresh < 0) {\n    ticksPerFrame = 1;\n  } else {\n    ticksPerFrame = Math.max(1, ticksPerFrame); // at least 1\n  }\n\n  var adaptor = layout.adaptor = cola.adaptor({\n    trigger: function trigger(e) {\n      // on sim event\n      var TICK = cola.EventType ? cola.EventType.tick : null;\n      var END = cola.EventType ? cola.EventType.end : null;\n\n      switch (e.type) {\n        case 'tick':\n        case TICK:\n          if (options.animate) {\n            updateNodePositions();\n          }\n          break;\n\n        case 'end':\n        case END:\n          updateNodePositions();\n          if (!options.infinite) {\n            onDone();\n          }\n          break;\n      }\n    },\n\n    kick: function kick() {\n      // kick off the simulation\n      //let skip = 0;\n\n      var firstTick = true;\n\n      var inftick = function inftick() {\n        if (layout.manuallyStopped) {\n          onDone();\n\n          return true;\n        }\n\n        var ret = adaptor.tick();\n\n        if (!options.infinite && !firstTick) {\n          adaptor.convergenceThreshold(options.convergenceThreshold);\n        }\n\n        firstTick = false;\n\n        if (ret && options.infinite) {\n          // resume layout if done\n          adaptor.resume(); // resume => new kick\n        }\n\n        return ret; // allow regular finish b/c of new kick\n      };\n\n      var multitick = function multitick() {\n        // multiple ticks in a row\n        var ret = void 0;\n\n        for (var i = 0; i < ticksPerFrame && !ret; i++) {\n          ret = ret || inftick(); // pick up true ret vals => sim done\n        }\n\n        return ret;\n      };\n\n      if (options.animate) {\n        var frame = function frame() {\n          if (multitick()) {\n            return;\n          }\n\n          raf(frame);\n        };\n\n        raf(frame);\n      } else {\n        while (!inftick()) {\n          // keep going...\n        }\n      }\n    },\n\n    on: nop, // dummy; not needed\n\n    drag: nop // not needed for our case\n  });\n  layout.adaptor = adaptor;\n\n  // if set no grabbing during layout\n  var grabbableNodes = nodes.filter(':grabbable');\n  if (options.ungrabifyWhileSimulating) {\n    grabbableNodes.ungrabify();\n  }\n\n  var destroyHandler = void 0;\n  cy.one('destroy', destroyHandler = function destroyHandler() {\n    layout.stop();\n  });\n\n  // handle node dragging\n  var grabHandler = void 0;\n  nodes.on('grab free position', grabHandler = function grabHandler(e) {\n    var node = this;\n    var scrCola = node.scratch().cola;\n    var pos = node.position();\n    var nodeIsTarget = e.cyTarget === node || e.target === node;\n\n    if (!nodeIsTarget) {\n      return;\n    }\n\n    switch (e.type) {\n      case 'grab':\n        adaptor.dragstart(scrCola);\n        break;\n      case 'free':\n        adaptor.dragend(scrCola);\n        break;\n      case 'position':\n        // only update when different (i.e. manual .position() call or drag) so we don't loop needlessly\n        if (scrCola.px !== pos.x - bb.x1 || scrCola.py !== pos.y - bb.y1) {\n          scrCola.px = pos.x - bb.x1;\n          scrCola.py = pos.y - bb.y1;\n        }\n        break;\n    }\n  });\n\n  var lockHandler = void 0;\n  nodes.on('lock unlock', lockHandler = function lockHandler() {\n    var node = this;\n    var scrCola = node.scratch().cola;\n\n    scrCola.fixed = node.locked();\n\n    if (node.locked()) {\n      adaptor.dragstart(scrCola);\n    } else {\n      adaptor.dragend(scrCola);\n    }\n  });\n\n  // add nodes to cola\n  adaptor.nodes(nonparentNodes.map(function (node, i) {\n    var padding = getOptVal(options.nodeSpacing, node);\n    var pos = node.position();\n    var dimensions = node.layoutDimensions(options);\n\n    var struct = node.scratch().cola = {\n      x: options.randomize || pos.x === undefined ? Math.round(Math.random() * bb.w) : pos.x,\n      y: options.randomize || pos.y === undefined ? Math.round(Math.random() * bb.h) : pos.y,\n      width: dimensions.w + 2 * padding,\n      height: dimensions.h + 2 * padding,\n      index: i,\n      fixed: node.locked()\n    };\n\n    return struct;\n  }));\n\n  // the constraints to be added on nodes\n  var constraints = [];\n\n  if (options.alignment) {\n    // then set alignment constraints\n\n    var offsetsX = [];\n    var offsetsY = [];\n\n    nonparentNodes.forEach(function (node) {\n      var align = getOptVal(options.alignment, node);\n      var scrCola = node.scratch().cola;\n      var index = scrCola.index;\n\n      if (!align) {\n        return;\n      }\n\n      if (align.x != null) {\n        offsetsX.push({\n          node: index,\n          offset: align.x\n        });\n      }\n\n      if (align.y != null) {\n        offsetsY.push({\n          node: index,\n          offset: align.y\n        });\n      }\n    });\n\n    if (offsetsX.length > 0) {\n      constraints.push({\n        type: 'alignment',\n        axis: 'x',\n        offsets: offsetsX\n      });\n    }\n\n    if (offsetsY.length > 0) {\n      constraints.push({\n        type: 'alignment',\n        axis: 'y',\n        offsets: offsetsY\n      });\n    }\n  }\n\n  // if gapInequalities variable is set add each inequality constraint to list of constraints\n  if (options.gapInequalities) {\n    options.gapInequalities.forEach(function (inequality) {\n\n      // for the constraints to be passed to cola layout adaptor use indices of nodes,\n      // not the nodes themselves\n      var leftIndex = inequality.left.scratch().cola.index;\n      var rightIndex = inequality.right.scratch().cola.index;\n\n      constraints.push({\n        axis: inequality.axis,\n        left: leftIndex,\n        right: rightIndex,\n        gap: inequality.gap,\n        equality: inequality.equality\n      });\n    });\n  }\n\n  // add constraints if any\n  if (constraints.length > 0) {\n    adaptor.constraints(constraints);\n  }\n\n  // add compound nodes to cola\n  adaptor.groups(parentNodes.map(function (node, i) {\n    // add basic group incl leaf nodes\n    var optPadding = getOptVal(options.nodeSpacing, node);\n    var getPadding = function getPadding(d) {\n      return parseFloat(node.style('padding-' + d));\n    };\n\n    var pleft = getPadding('left') + optPadding;\n    var pright = getPadding('right') + optPadding;\n    var ptop = getPadding('top') + optPadding;\n    var pbottom = getPadding('bottom') + optPadding;\n\n    node.scratch().cola = {\n      index: i,\n\n      padding: Math.max(pleft, pright, ptop, pbottom),\n\n      // leaves should only contain direct descendants (children),\n      // not the leaves of nested compound nodes or any nodes that are compounds themselves\n      leaves: node.children().intersection(nonparentNodes).map(function (child) {\n        return child[0].scratch().cola.index;\n      }),\n\n      fixed: node.locked()\n    };\n\n    return node;\n  }).map(function (node) {\n    // add subgroups\n    node.scratch().cola.groups = node.children().intersection(parentNodes).map(function (child) {\n      return child.scratch().cola.index;\n    });\n\n    return node.scratch().cola;\n  }));\n\n  // get the edge length setting mechanism\n  var length = void 0;\n  var lengthFnName = void 0;\n  if (options.edgeLength != null) {\n    length = options.edgeLength;\n    lengthFnName = 'linkDistance';\n  } else if (options.edgeSymDiffLength != null) {\n    length = options.edgeSymDiffLength;\n    lengthFnName = 'symmetricDiffLinkLengths';\n  } else if (options.edgeJaccardLength != null) {\n    length = options.edgeJaccardLength;\n    lengthFnName = 'jaccardLinkLengths';\n  } else {\n    length = 100;\n    lengthFnName = 'linkDistance';\n  }\n\n  var lengthGetter = function lengthGetter(link) {\n    return link.calcLength;\n  };\n\n  // add the edges to cola\n  adaptor.links(edges.stdFilter(function (edge) {\n    return nonparentNodes.contains(edge.source()) && nonparentNodes.contains(edge.target());\n  }).map(function (edge) {\n    var c = edge.scratch().cola = {\n      source: edge.source()[0].scratch().cola.index,\n      target: edge.target()[0].scratch().cola.index\n    };\n\n    if (length != null) {\n      c.calcLength = getOptVal(length, edge);\n    }\n\n    return c;\n  }));\n\n  adaptor.size([bb.w, bb.h]);\n\n  if (length != null) {\n    adaptor[lengthFnName](lengthGetter);\n  }\n\n  // set the flow of cola\n  if (options.flow) {\n    var flow = void 0;\n    var defAxis = 'y';\n    var defMinSep = 50;\n\n    if (isString(options.flow)) {\n      flow = {\n        axis: options.flow,\n        minSeparation: defMinSep\n      };\n    } else if (isNumber(options.flow)) {\n      flow = {\n        axis: defAxis,\n        minSeparation: options.flow\n      };\n    } else if (isObject(options.flow)) {\n      flow = options.flow;\n\n      flow.axis = flow.axis || defAxis;\n      flow.minSeparation = flow.minSeparation != null ? flow.minSeparation : defMinSep;\n    } else {\n      // e.g. options.flow: true\n      flow = {\n        axis: defAxis,\n        minSeparation: defMinSep\n      };\n    }\n\n    adaptor.flowLayout(flow.axis, flow.minSeparation);\n  }\n\n  layout.trigger({ type: 'layoutstart', layout: layout });\n\n  adaptor.avoidOverlaps(options.avoidOverlap).handleDisconnected(options.handleDisconnected).start(options.unconstrIter, options.userConstIter, options.allConstIter);\n\n  if (!options.infinite) {\n    setTimeout(function () {\n      if (!layout.manuallyStopped) {\n        adaptor.stop();\n      }\n    }, options.maxSimulationTime);\n  }\n\n  return this; // chaining\n};\n\n// called on continuous layouts to stop them before they finish\nColaLayout.prototype.stop = function () {\n  if (this.adaptor) {\n    this.manuallyStopped = true;\n    this.adaptor.stop();\n  }\n\n  return this; // chaining\n};\n\nmodule.exports = ColaLayout;\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n// Simple, internal Object.assign() polyfill for options objects etc.\n\nmodule.exports = Object.assign != null ? Object.assign.bind(Object) : function (tgt) {\n  for (var _len = arguments.length, srcs = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    srcs[_key - 1] = arguments[_key];\n  }\n\n  srcs.filter(function (src) {\n    return src != null;\n  }).forEach(function (src) {\n    Object.keys(src).forEach(function (k) {\n      return tgt[k] = src[k];\n    });\n  });\n\n  return tgt;\n};\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n// default layout options\nvar defaults = {\n  animate: true, // whether to show the layout as it's running\n  refresh: 1, // number of ticks per frame; higher is faster but more jerky\n  maxSimulationTime: 4000, // max length in ms to run the layout\n  ungrabifyWhileSimulating: false, // so you can't drag nodes during layout\n  fit: true, // on every layout reposition of nodes, fit the viewport\n  padding: 30, // padding around the simulation\n  boundingBox: undefined, // constrain layout bounds; { x1, y1, x2, y2 } or { x1, y1, w, h }\n  nodeDimensionsIncludeLabels: false, // whether labels should be included in determining the space used by a node\n\n  // layout event callbacks\n  ready: function ready() {}, // on layoutready\n  stop: function stop() {}, // on layoutstop\n\n  // positioning options\n  randomize: false, // use random node positions at beginning of layout\n  avoidOverlap: true, // if true, prevents overlap of node bounding boxes\n  handleDisconnected: true, // if true, avoids disconnected components from overlapping\n  convergenceThreshold: 0.01, // when the alpha value (system energy) falls below this value, the layout stops\n  nodeSpacing: function nodeSpacing(node) {\n    return 10;\n  }, // extra spacing around nodes\n  flow: undefined, // use DAG/tree flow layout if specified, e.g. { axis: 'y', minSeparation: 30 }\n  alignment: undefined, // relative alignment constraints on nodes, e.g. function( node ){ return { x: 0, y: 1 } }\n  gapInequalities: undefined, // list of inequality constraints for the gap between the nodes, e.g. [{\"axis\":\"y\", \"left\":node1, \"right\":node2, \"gap\":25}]\n\n  // different methods of specifying edge length\n  // each can be a constant numerical value or a function like `function( edge ){ return 2; }`\n  edgeLength: undefined, // sets edge length directly in simulation\n  edgeSymDiffLength: undefined, // symmetric diff edge length in simulation\n  edgeJaccardLength: undefined, // jaccard edge length in simulation\n\n  // iterations of cola algorithm; uses default values on undefined\n  unconstrIter: undefined, // unconstrained initial layout iterations\n  userConstIter: undefined, // initial layout iterations with user-specified constraints\n  allConstIter: undefined, // initial layout iterations with all constraints including non-overlap\n\n  // infinite layout options\n  infinite: false // overrides all other options for a forces-all-the-time mode\n};\n\nmodule.exports = defaults;\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar impl = __webpack_require__(0);\n\n// registers the extension on a cytoscape lib ref\nvar register = function register(cytoscape) {\n  if (!cytoscape) {\n    return;\n  } // can't register if cytoscape unspecified\n\n  cytoscape('layout', 'cola', impl); // register with cytoscape.js\n};\n\nif (typeof cytoscape !== 'undefined') {\n  // expose to global cytoscape (i.e. window.cytoscape)\n  register(cytoscape);\n}\n\nmodule.exports = register;\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar raf = void 0;\n\nif ((typeof window === \"undefined\" ? \"undefined\" : _typeof(window)) !== ( true ? \"undefined\" : _typeof(undefined))) {\n  raf = window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.msRequestAnimationFrame || function (fn) {\n    return setTimeout(fn, 16);\n  };\n} else {\n  // if not available, all you get is immediate calls\n  raf = function raf(cb) {\n    cb();\n  };\n}\n\nmodule.exports = raf;\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports) {\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE_5__;\n\n/***/ })\n/******/ ]);\n});","// A build of cola as of 2016-12-01 for demo purposes only!\n\n// Use npm to get the latest version or build from source:\n// https://github.com/tgdwyer/WebCola\n// import cytoscape from 'cytoscape';\n// import cola from 'cytoscape-cola';\n \nvar cola = require('cytoscape-cola');\n(function (cola) {\n    var packingOptions = {\n        PADDING: 10,\n        GOLDEN_SECTION: (1 + Math.sqrt(5)) / 2,\n        FLOAT_EPSILON: 0.0001,\n        MAX_INERATIONS: 100\n    };\n    // assign x, y to nodes while using box packing algorithm for disconnected graphs\n    function applyPacking(graphs, w, h, node_size, desired_ratio) {\n        if (desired_ratio === void 0) { desired_ratio = 1; }\n        var init_x = 0, init_y = 0, svg_width = w, svg_height = h, desired_ratio = typeof desired_ratio !== 'undefined' ? desired_ratio : 1, node_size = typeof node_size !== 'undefined' ? node_size : 0, real_width = 0, real_height = 0, min_width = 0, global_bottom = 0, line = [];\n        if (graphs.length == 0)\n            return;\n        /// that would take care of single nodes problem\n        // graphs.forEach(function (g) {\n        //     if (g.array.length == 1) {\n        //         g.array[0].x = 0;\n        //         g.array[0].y = 0;\n        //     }\n        // });\n        calculate_bb(graphs);\n        apply(graphs, desired_ratio);\n        put_nodes_to_right_positions(graphs);\n        // get bounding boxes for all separate graphs\n        function calculate_bb(graphs) {\n            graphs.forEach(function (g) {\n                calculate_single_bb(g);\n            });\n            function calculate_single_bb(graph) {\n                var min_x = Number.MAX_VALUE, min_y = Number.MAX_VALUE, max_x = 0, max_y = 0;\n                graph.array.forEach(function (v) {\n                    var w = typeof v.width !== 'undefined' ? v.width : node_size;\n                    var h = typeof v.height !== 'undefined' ? v.height : node_size;\n                    w /= 2;\n                    h /= 2;\n                    max_x = Math.max(v.x + w, max_x);\n                    min_x = Math.min(v.x - w, min_x);\n                    max_y = Math.max(v.y + h, max_y);\n                    min_y = Math.min(v.y - h, min_y);\n                });\n                graph.width = max_x - min_x;\n                graph.height = max_y - min_y;\n            }\n        }\n        //function plot(data, left, right, opt_x, opt_y) {\n        //    // plot the cost function\n        //    var plot_svg = d3.select(\"body\").append(\"svg\")\n        //        .attr(\"width\", function () { return 2 * (right - left); })\n        //        .attr(\"height\", 200);\n        //    var x = d3.time.scale().range([0, 2 * (right - left)]);\n        //    var xAxis = d3.svg.axis().scale(x).orient(\"bottom\");\n        //    plot_svg.append(\"g\").attr(\"class\", \"x axis\")\n        //        .attr(\"transform\", \"translate(0, 199)\")\n        //        .call(xAxis);\n        //    var lastX = 0;\n        //    var lastY = 0;\n        //    var value = 0;\n        //    for (var r = left; r < right; r += 1) {\n        //        value = step(data, r);\n        //        // value = 1;\n        //        plot_svg.append(\"line\").attr(\"x1\", 2 * (lastX - left))\n        //            .attr(\"y1\", 200 - 30 * lastY)\n        //            .attr(\"x2\", 2 * r - 2 * left)\n        //            .attr(\"y2\", 200 - 30 * value)\n        //            .style(\"stroke\", \"rgb(6,120,155)\");\n        //        lastX = r;\n        //        lastY = value;\n        //    }\n        //    plot_svg.append(\"circle\").attr(\"cx\", 2 * opt_x - 2 * left).attr(\"cy\", 200 - 30 * opt_y)\n        //        .attr(\"r\", 5).style('fill', \"rgba(0,0,0,0.5)\");\n        //}\n        // actual assigning of position to nodes\n        function put_nodes_to_right_positions(graphs) {\n            graphs.forEach(function (g) {\n                // calculate current graph center:\n                var center = { x: 0, y: 0 };\n                g.array.forEach(function (node) {\n                    center.x += node.x;\n                    center.y += node.y;\n                });\n                center.x /= g.array.length;\n                center.y /= g.array.length;\n                // calculate current top left corner:\n                var corner = { x: center.x - g.width / 2, y: center.y - g.height / 2 };\n                var offset = { x: g.x - corner.x + svg_width / 2 - real_width / 2, y: g.y - corner.y + svg_height / 2 - real_height / 2 };\n                // put nodes:\n                g.array.forEach(function (node) {\n                    node.x += offset.x;\n                    node.y += offset.y;\n                });\n            });\n        }\n        // starts box packing algorithm\n        // desired ratio is 1 by default\n        function apply(data, desired_ratio) {\n            var curr_best_f = Number.POSITIVE_INFINITY;\n            var curr_best = 0;\n            data.sort(function (a, b) { return b.height - a.height; });\n            min_width = data.reduce(function (a, b) {\n                return a.width < b.width ? a.width : b.width;\n            });\n            var left = x1 = min_width;\n            var right = x2 = get_entire_width(data);\n            var iterationCounter = 0;\n            var f_x1 = Number.MAX_VALUE;\n            var f_x2 = Number.MAX_VALUE;\n            var flag = -1; // determines which among f_x1 and f_x2 to recompute\n            var dx = Number.MAX_VALUE;\n            var df = Number.MAX_VALUE;\n            while ((dx > min_width) || df > packingOptions.FLOAT_EPSILON) {\n                if (flag != 1) {\n                    var x1 = right - (right - left) / packingOptions.GOLDEN_SECTION;\n                    var f_x1 = step(data, x1);\n                }\n                if (flag != 0) {\n                    var x2 = left + (right - left) / packingOptions.GOLDEN_SECTION;\n                    var f_x2 = step(data, x2);\n                }\n                dx = Math.abs(x1 - x2);\n                df = Math.abs(f_x1 - f_x2);\n                if (f_x1 < curr_best_f) {\n                    curr_best_f = f_x1;\n                    curr_best = x1;\n                }\n                if (f_x2 < curr_best_f) {\n                    curr_best_f = f_x2;\n                    curr_best = x2;\n                }\n                if (f_x1 > f_x2) {\n                    left = x1;\n                    x1 = x2;\n                    f_x1 = f_x2;\n                    flag = 1;\n                }\n                else {\n                    right = x2;\n                    x2 = x1;\n                    f_x2 = f_x1;\n                    flag = 0;\n                }\n                if (iterationCounter++ > 100) {\n                    break;\n                }\n            }\n            // plot(data, min_width, get_entire_width(data), curr_best, curr_best_f);\n            step(data, curr_best);\n        }\n        // one iteration of the optimization method\n        // (gives a proper, but not necessarily optimal packing)\n        function step(data, max_width) {\n            line = [];\n            real_width = 0;\n            real_height = 0;\n            global_bottom = init_y;\n            for (var i = 0; i < data.length; i++) {\n                var o = data[i];\n                put_rect(o, max_width);\n            }\n            return Math.abs(get_real_ratio() - desired_ratio);\n        }\n        // looking for a position to one box\n        function put_rect(rect, max_width) {\n            var parent = undefined;\n            for (var i = 0; i < line.length; i++) {\n                if ((line[i].space_left >= rect.height) && (line[i].x + line[i].width + rect.width + packingOptions.PADDING - max_width) <= packingOptions.FLOAT_EPSILON) {\n                    parent = line[i];\n                    break;\n                }\n            }\n            line.push(rect);\n            if (parent !== undefined) {\n                rect.x = parent.x + parent.width + packingOptions.PADDING;\n                rect.y = parent.bottom;\n                rect.space_left = rect.height;\n                rect.bottom = rect.y;\n                parent.space_left -= rect.height + packingOptions.PADDING;\n                parent.bottom += rect.height + packingOptions.PADDING;\n            }\n            else {\n                rect.y = global_bottom;\n                global_bottom += rect.height + packingOptions.PADDING;\n                rect.x = init_x;\n                rect.bottom = rect.y;\n                rect.space_left = rect.height;\n            }\n            if (rect.y + rect.height - real_height > -packingOptions.FLOAT_EPSILON)\n                real_height = rect.y + rect.height - init_y;\n            if (rect.x + rect.width - real_width > -packingOptions.FLOAT_EPSILON)\n                real_width = rect.x + rect.width - init_x;\n        }\n        ;\n        function get_entire_width(data) {\n            var width = 0;\n            data.forEach(function (d) { return width += d.width + packingOptions.PADDING; });\n            return width;\n        }\n        function get_real_ratio() {\n            return (real_width / real_height);\n        }\n    }\n    cola.applyPacking = applyPacking;\n    /**\n     * connected components of graph\n     * returns an array of {}\n     */\n    function separateGraphs(nodes, links) {\n        var marks = {};\n        var ways = {};\n        var graphs = [];\n        var clusters = 0;\n        for (var i = 0; i < links.length; i++) {\n            var link = links[i];\n            var n1 = link.source;\n            var n2 = link.target;\n            if (ways[n1.index])\n                ways[n1.index].push(n2);\n            else\n                ways[n1.index] = [n2];\n            if (ways[n2.index])\n                ways[n2.index].push(n1);\n            else\n                ways[n2.index] = [n1];\n        }\n        for (var i = 0; i < nodes.length; i++) {\n            var node = nodes[i];\n            if (marks[node.index])\n                continue;\n            explore_node(node, true);\n        }\n        function explore_node(n, is_new) {\n            if (marks[n.index] !== undefined)\n                return;\n            if (is_new) {\n                clusters++;\n                graphs.push({ array: [] });\n            }\n            marks[n.index] = clusters;\n            graphs[clusters - 1].array.push(n);\n            var adjacent = ways[n.index];\n            if (!adjacent)\n                return;\n            for (var j = 0; j < adjacent.length; j++) {\n                explore_node(adjacent[j], false);\n            }\n        }\n        return graphs;\n    }\n    cola.separateGraphs = separateGraphs;\n})(cola || (cola = {}));\nvar cola = require('cytoscape-cola');;\n(function (cola) {\n    var vpsc;\n    (function (vpsc) {\n        var PositionStats = (function () {\n            function PositionStats(scale) {\n                this.scale = scale;\n                this.AB = 0;\n                this.AD = 0;\n                this.A2 = 0;\n            }\n            PositionStats.prototype.addVariable = function (v) {\n                var ai = this.scale / v.scale;\n                var bi = v.offset / v.scale;\n                var wi = v.weight;\n                this.AB += wi * ai * bi;\n                this.AD += wi * ai * v.desiredPosition;\n                this.A2 += wi * ai * ai;\n            };\n            PositionStats.prototype.getPosn = function () {\n                return (this.AD - this.AB) / this.A2;\n            };\n            return PositionStats;\n        })();\n        vpsc.PositionStats = PositionStats;\n        var Constraint = (function () {\n            function Constraint(left, right, gap, equality) {\n                if (equality === void 0) { equality = false; }\n                this.left = left;\n                this.right = right;\n                this.gap = gap;\n                this.equality = equality;\n                this.active = false;\n                this.unsatisfiable = false;\n                this.left = left;\n                this.right = right;\n                this.gap = gap;\n                this.equality = equality;\n            }\n            Constraint.prototype.slack = function () {\n                return this.unsatisfiable ? Number.MAX_VALUE\n                    : this.right.scale * this.right.position() - this.gap\n                        - this.left.scale * this.left.position();\n            };\n            return Constraint;\n        })();\n        vpsc.Constraint = Constraint;\n        var Variable = (function () {\n            function Variable(desiredPosition, weight, scale) {\n                if (weight === void 0) { weight = 1; }\n                if (scale === void 0) { scale = 1; }\n                this.desiredPosition = desiredPosition;\n                this.weight = weight;\n                this.scale = scale;\n                this.offset = 0;\n            }\n            Variable.prototype.dfdv = function () {\n                return 2.0 * this.weight * (this.position() - this.desiredPosition);\n            };\n            Variable.prototype.position = function () {\n                return (this.block.ps.scale * this.block.posn + this.offset) / this.scale;\n            };\n            // visit neighbours by active constraints within the same block\n            Variable.prototype.visitNeighbours = function (prev, f) {\n                var ff = function (c, next) { return c.active && prev !== next && f(c, next); };\n                this.cOut.forEach(function (c) { return ff(c, c.right); });\n                this.cIn.forEach(function (c) { return ff(c, c.left); });\n            };\n            return Variable;\n        })();\n        vpsc.Variable = Variable;\n        var Block = (function () {\n            function Block(v) {\n                this.vars = [];\n                v.offset = 0;\n                this.ps = new PositionStats(v.scale);\n                this.addVariable(v);\n            }\n            Block.prototype.addVariable = function (v) {\n                v.block = this;\n                this.vars.push(v);\n                this.ps.addVariable(v);\n                this.posn = this.ps.getPosn();\n            };\n            // move the block where it needs to be to minimize cost\n            Block.prototype.updateWeightedPosition = function () {\n                this.ps.AB = this.ps.AD = this.ps.A2 = 0;\n                for (var i = 0, n = this.vars.length; i < n; ++i)\n                    this.ps.addVariable(this.vars[i]);\n                this.posn = this.ps.getPosn();\n            };\n            Block.prototype.compute_lm = function (v, u, postAction) {\n                var _this = this;\n                var dfdv = v.dfdv();\n                v.visitNeighbours(u, function (c, next) {\n                    var _dfdv = _this.compute_lm(next, v, postAction);\n                    if (next === c.right) {\n                        dfdv += _dfdv * c.left.scale;\n                        c.lm = _dfdv;\n                    }\n                    else {\n                        dfdv += _dfdv * c.right.scale;\n                        c.lm = -_dfdv;\n                    }\n                    postAction(c);\n                });\n                return dfdv / v.scale;\n            };\n            Block.prototype.populateSplitBlock = function (v, prev) {\n                var _this = this;\n                v.visitNeighbours(prev, function (c, next) {\n                    next.offset = v.offset + (next === c.right ? c.gap : -c.gap);\n                    _this.addVariable(next);\n                    _this.populateSplitBlock(next, v);\n                });\n            };\n            // traverse the active constraint tree applying visit to each active constraint\n            Block.prototype.traverse = function (visit, acc, v, prev) {\n                var _this = this;\n                if (v === void 0) { v = this.vars[0]; }\n                if (prev === void 0) { prev = null; }\n                v.visitNeighbours(prev, function (c, next) {\n                    acc.push(visit(c));\n                    _this.traverse(visit, acc, next, v);\n                });\n            };\n            // calculate lagrangian multipliers on constraints and\n            // find the active constraint in this block with the smallest lagrangian.\n            // if the lagrangian is negative, then the constraint is a split candidate.\n            Block.prototype.findMinLM = function () {\n                var m = null;\n                this.compute_lm(this.vars[0], null, function (c) {\n                    if (!c.equality && (m === null || c.lm < m.lm))\n                        m = c;\n                });\n                return m;\n            };\n            Block.prototype.findMinLMBetween = function (lv, rv) {\n                this.compute_lm(lv, null, function () { });\n                var m = null;\n                this.findPath(lv, null, rv, function (c, next) {\n                    if (!c.equality && c.right === next && (m === null || c.lm < m.lm))\n                        m = c;\n                });\n                return m;\n            };\n            Block.prototype.findPath = function (v, prev, to, visit) {\n                var _this = this;\n                var endFound = false;\n                v.visitNeighbours(prev, function (c, next) {\n                    if (!endFound && (next === to || _this.findPath(next, v, to, visit))) {\n                        endFound = true;\n                        visit(c, next);\n                    }\n                });\n                return endFound;\n            };\n            // Search active constraint tree from u to see if there is a directed path to v.\n            // Returns true if path is found.\n            Block.prototype.isActiveDirectedPathBetween = function (u, v) {\n                if (u === v)\n                    return true;\n                var i = u.cOut.length;\n                while (i--) {\n                    var c = u.cOut[i];\n                    if (c.active && this.isActiveDirectedPathBetween(c.right, v))\n                        return true;\n                }\n                return false;\n            };\n            // split the block into two by deactivating the specified constraint\n            Block.split = function (c) {\n                /* DEBUG\n                            console.log(\"split on \" + c);\n                            console.assert(c.active, \"attempt to split on inactive constraint\");\n                DEBUG */\n                c.active = false;\n                return [Block.createSplitBlock(c.left), Block.createSplitBlock(c.right)];\n            };\n            Block.createSplitBlock = function (startVar) {\n                var b = new Block(startVar);\n                b.populateSplitBlock(startVar, null);\n                return b;\n            };\n            // find a split point somewhere between the specified variables\n            Block.prototype.splitBetween = function (vl, vr) {\n                /* DEBUG\n                            console.assert(vl.block === this);\n                            console.assert(vr.block === this);\n                DEBUG */\n                var c = this.findMinLMBetween(vl, vr);\n                if (c !== null) {\n                    var bs = Block.split(c);\n                    return { constraint: c, lb: bs[0], rb: bs[1] };\n                }\n                // couldn't find a split point - for example the active path is all equality constraints\n                return null;\n            };\n            Block.prototype.mergeAcross = function (b, c, dist) {\n                c.active = true;\n                for (var i = 0, n = b.vars.length; i < n; ++i) {\n                    var v = b.vars[i];\n                    v.offset += dist;\n                    this.addVariable(v);\n                }\n                this.posn = this.ps.getPosn();\n            };\n            Block.prototype.cost = function () {\n                var sum = 0, i = this.vars.length;\n                while (i--) {\n                    var v = this.vars[i], d = v.position() - v.desiredPosition;\n                    sum += d * d * v.weight;\n                }\n                return sum;\n            };\n            return Block;\n        })();\n        vpsc.Block = Block;\n        var Blocks = (function () {\n            function Blocks(vs) {\n                this.vs = vs;\n                var n = vs.length;\n                this.list = new Array(n);\n                while (n--) {\n                    var b = new Block(vs[n]);\n                    this.list[n] = b;\n                    b.blockInd = n;\n                }\n            }\n            Blocks.prototype.cost = function () {\n                var sum = 0, i = this.list.length;\n                while (i--)\n                    sum += this.list[i].cost();\n                return sum;\n            };\n            Blocks.prototype.insert = function (b) {\n                /* DEBUG\n                            console.assert(!this.contains(b), \"blocks error: tried to reinsert block \" + b.blockInd)\n                DEBUG */\n                b.blockInd = this.list.length;\n                this.list.push(b);\n                /* DEBUG\n                            console.log(\"insert block: \" + b.blockInd);\n                            this.contains(b);\n                DEBUG */\n            };\n            Blocks.prototype.remove = function (b) {\n                /* DEBUG\n                            console.log(\"remove block: \" + b.blockInd);\n                            console.assert(this.contains(b));\n                DEBUG */\n                var last = this.list.length - 1;\n                var swapBlock = this.list[last];\n                this.list.length = last;\n                if (b !== swapBlock) {\n                    this.list[b.blockInd] = swapBlock;\n                    swapBlock.blockInd = b.blockInd;\n                }\n            };\n            // merge the blocks on either side of the specified constraint, by copying the smaller block into the larger\n            // and deleting the smaller.\n            Blocks.prototype.merge = function (c) {\n                var l = c.left.block, r = c.right.block;\n                /* DEBUG\n                            console.assert(l!==r, \"attempt to merge within the same block\");\n                DEBUG */\n                var dist = c.right.offset - c.left.offset - c.gap;\n                if (l.vars.length < r.vars.length) {\n                    r.mergeAcross(l, c, dist);\n                    this.remove(l);\n                }\n                else {\n                    l.mergeAcross(r, c, -dist);\n                    this.remove(r);\n                }\n                /* DEBUG\n                            console.assert(Math.abs(c.slack()) < 1e-6, \"Error: Constraint should be at equality after merge!\");\n                            console.log(\"merged on \" + c);\n                DEBUG */\n            };\n            Blocks.prototype.forEach = function (f) {\n                this.list.forEach(f);\n            };\n            // useful, for example, after variable desired positions change.\n            Blocks.prototype.updateBlockPositions = function () {\n                this.list.forEach(function (b) { return b.updateWeightedPosition(); });\n            };\n            // split each block across its constraint with the minimum lagrangian\n            Blocks.prototype.split = function (inactive) {\n                var _this = this;\n                this.updateBlockPositions();\n                this.list.forEach(function (b) {\n                    var v = b.findMinLM();\n                    if (v !== null && v.lm < Solver.LAGRANGIAN_TOLERANCE) {\n                        b = v.left.block;\n                        Block.split(v).forEach(function (nb) { return _this.insert(nb); });\n                        _this.remove(b);\n                        inactive.push(v);\n                    }\n                });\n            };\n            return Blocks;\n        })();\n        vpsc.Blocks = Blocks;\n        var Solver = (function () {\n            function Solver(vs, cs) {\n                this.vs = vs;\n                this.cs = cs;\n                this.vs = vs;\n                vs.forEach(function (v) {\n                    v.cIn = [], v.cOut = [];\n                    /* DEBUG\n                                    v.toString = () => \"v\" + vs.indexOf(v);\n                    DEBUG */\n                });\n                this.cs = cs;\n                cs.forEach(function (c) {\n                    c.left.cOut.push(c);\n                    c.right.cIn.push(c);\n                    /* DEBUG\n                                    c.toString = () => c.left + \"+\" + c.gap + \"<=\" + c.right + \" slack=\" + c.slack() + \" active=\" + c.active;\n                    DEBUG */\n                });\n                this.inactive = cs.map(function (c) { c.active = false; return c; });\n                this.bs = null;\n            }\n            Solver.prototype.cost = function () {\n                return this.bs.cost();\n            };\n            // set starting positions without changing desired positions.\n            // Note: it throws away any previous block structure.\n            Solver.prototype.setStartingPositions = function (ps) {\n                this.inactive = this.cs.map(function (c) { c.active = false; return c; });\n                this.bs = new Blocks(this.vs);\n                this.bs.forEach(function (b, i) { return b.posn = ps[i]; });\n            };\n            Solver.prototype.setDesiredPositions = function (ps) {\n                this.vs.forEach(function (v, i) { return v.desiredPosition = ps[i]; });\n            };\n            /* DEBUG\n                    private getId(v: Variable): number {\n                        return this.vs.indexOf(v);\n                    }\n\n                    // sanity check of the index integrity of the inactive list\n                    checkInactive(): void {\n                        var inactiveCount = 0;\n                        this.cs.forEach(c=> {\n                            var i = this.inactive.indexOf(c);\n                            console.assert(!c.active && i >= 0 || c.active && i < 0, \"constraint should be in the inactive list if it is not active: \" + c);\n                            if (i >= 0) {\n                                inactiveCount++;\n                            } else {\n                                console.assert(c.active, \"inactive constraint not found in inactive list: \" + c);\n                            }\n                        });\n                        console.assert(inactiveCount === this.inactive.length, inactiveCount + \" inactive constraints found, \" + this.inactive.length + \"in inactive list\");\n                    }\n                    // after every call to satisfy the following should check should pass\n                    checkSatisfied(): void {\n                        this.cs.forEach(c=>console.assert(c.slack() >= vpsc.Solver.ZERO_UPPERBOUND, \"Error: Unsatisfied constraint! \"+c));\n                    }\n            DEBUG */\n            Solver.prototype.mostViolated = function () {\n                var minSlack = Number.MAX_VALUE, v = null, l = this.inactive, n = l.length, deletePoint = n;\n                for (var i = 0; i < n; ++i) {\n                    var c = l[i];\n                    if (c.unsatisfiable)\n                        continue;\n                    var slack = c.slack();\n                    if (c.equality || slack < minSlack) {\n                        minSlack = slack;\n                        v = c;\n                        deletePoint = i;\n                        if (c.equality)\n                            break;\n                    }\n                }\n                if (deletePoint !== n &&\n                    (minSlack < Solver.ZERO_UPPERBOUND && !v.active || v.equality)) {\n                    l[deletePoint] = l[n - 1];\n                    l.length = n - 1;\n                }\n                return v;\n            };\n            // satisfy constraints by building block structure over violated constraints\n            // and moving the blocks to their desired positions\n            Solver.prototype.satisfy = function () {\n                if (this.bs == null) {\n                    this.bs = new Blocks(this.vs);\n                }\n                /* DEBUG\n                            console.log(\"satisfy: \" + this.bs);\n                DEBUG */\n                this.bs.split(this.inactive);\n                var v = null;\n                while ((v = this.mostViolated()) && (v.equality || v.slack() < Solver.ZERO_UPPERBOUND && !v.active)) {\n                    var lb = v.left.block, rb = v.right.block;\n                    /* DEBUG\n                                    console.log(\"most violated is: \" + v);\n                                    this.bs.contains(lb);\n                                    this.bs.contains(rb);\n                    DEBUG */\n                    if (lb !== rb) {\n                        this.bs.merge(v);\n                    }\n                    else {\n                        if (lb.isActiveDirectedPathBetween(v.right, v.left)) {\n                            // cycle found!\n                            v.unsatisfiable = true;\n                            continue;\n                        }\n                        // constraint is within block, need to split first\n                        var split = lb.splitBetween(v.left, v.right);\n                        if (split !== null) {\n                            this.bs.insert(split.lb);\n                            this.bs.insert(split.rb);\n                            this.bs.remove(lb);\n                            this.inactive.push(split.constraint);\n                        }\n                        else {\n                            /* DEBUG\n                                                    console.log(\"unsatisfiable constraint found\");\n                            DEBUG */\n                            v.unsatisfiable = true;\n                            continue;\n                        }\n                        if (v.slack() >= 0) {\n                            /* DEBUG\n                                                    console.log(\"violated constraint indirectly satisfied: \" + v);\n                            DEBUG */\n                            // v was satisfied by the above split!\n                            this.inactive.push(v);\n                        }\n                        else {\n                            /* DEBUG\n                                                    console.log(\"merge after split:\");\n                            DEBUG */\n                            this.bs.merge(v);\n                        }\n                    }\n                }\n                /* DEBUG\n                            this.checkSatisfied();\n                DEBUG */\n            };\n            // repeatedly build and split block structure until we converge to an optimal solution\n            Solver.prototype.solve = function () {\n                this.satisfy();\n                var lastcost = Number.MAX_VALUE, cost = this.bs.cost();\n                while (Math.abs(lastcost - cost) > 0.0001) {\n                    this.satisfy();\n                    lastcost = cost;\n                    cost = this.bs.cost();\n                }\n                return cost;\n            };\n            Solver.LAGRANGIAN_TOLERANCE = -1e-4;\n            Solver.ZERO_UPPERBOUND = -1e-10;\n            return Solver;\n        })();\n        vpsc.Solver = Solver;\n        /**\n          * Remove overlap between spans while keeping their centers as close as possible to the specified desiredCenters.\n          * Lower and upper bounds will be respected if the spans physically fit between them\n          * (otherwise they'll be moved and their new position returned).\n          * If no upper/lower bound is specified then the bounds of the moved spans will be returned.\n          * returns a new center for each span.\n          */\n        function removeOverlapInOneDimension(spans, lowerBound, upperBound) {\n            var vs = spans.map(function (s) { return new Variable(s.desiredCenter); });\n            var cs = [];\n            var n = spans.length;\n            for (var i = 0; i < n - 1; i++) {\n                var left = spans[i], right = spans[i + 1];\n                cs.push(new Constraint(vs[i], vs[i + 1], (left.size + right.size) / 2));\n            }\n            var leftMost = vs[0], rightMost = vs[n - 1], leftMostSize = spans[0].size / 2, rightMostSize = spans[n - 1].size / 2;\n            var vLower = null, vUpper = null;\n            if (lowerBound) {\n                vLower = new Variable(lowerBound, leftMost.weight * 1000);\n                vs.push(vLower);\n                cs.push(new Constraint(vLower, leftMost, leftMostSize));\n            }\n            if (upperBound) {\n                vUpper = new Variable(upperBound, rightMost.weight * 1000);\n                vs.push(vUpper);\n                cs.push(new Constraint(rightMost, vUpper, rightMostSize));\n            }\n            var solver = new Solver(vs, cs);\n            solver.solve();\n            return {\n                newCenters: vs.slice(0, spans.length).map(function (v) { return v.position(); }),\n                lowerBound: vLower ? vLower.position() : leftMost.position() - leftMostSize,\n                upperBound: vUpper ? vUpper.position() : rightMost.position() + rightMostSize\n            };\n        }\n        vpsc.removeOverlapInOneDimension = removeOverlapInOneDimension;\n    })(vpsc = cola.vpsc || (cola.vpsc = {}));\n})(cola || (cola = {}));\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar cola = require('cytoscape-cola');;\n(function (cola) {\n    var vpsc;\n    (function (vpsc) {\n        //Based on js_es:\n        //\n        //https://github.com/vadimg/js_bintrees\n        //\n        //Copyright (C) 2011 by Vadim Graboys\n        //\n        //Permission is hereby granted, free of charge, to any person obtaining a copy\n        //of this software and associated documentation files (the \"Software\"), to deal\n        //in the Software without restriction, including without limitation the rights\n        //to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n        //copies of the Software, and to permit persons to whom the Software is\n        //furnished to do so, subject to the following conditions:\n        //\n        //The above copyright notice and this permission notice shall be included in\n        //all copies or substantial portions of the Software.\n        //\n        //THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n        //IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n        //FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n        //AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n        //LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n        //OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n        //THE SOFTWARE.\n        var TreeBase = (function () {\n            function TreeBase() {\n                // returns iterator to node if found, null otherwise\n                this.findIter = function (data) {\n                    var res = this._root;\n                    var iter = this.iterator();\n                    while (res !== null) {\n                        var c = this._comparator(data, res.data);\n                        if (c === 0) {\n                            iter._cursor = res;\n                            return iter;\n                        }\n                        else {\n                            iter._ancestors.push(res);\n                            res = res.get_child(c > 0);\n                        }\n                    }\n                    return null;\n                };\n            }\n            // removes all nodes from the tree\n            TreeBase.prototype.clear = function () {\n                this._root = null;\n                this.size = 0;\n            };\n            ;\n            // returns node data if found, null otherwise\n            TreeBase.prototype.find = function (data) {\n                var res = this._root;\n                while (res !== null) {\n                    var c = this._comparator(data, res.data);\n                    if (c === 0) {\n                        return res.data;\n                    }\n                    else {\n                        res = res.get_child(c > 0);\n                    }\n                }\n                return null;\n            };\n            ;\n            // Returns an interator to the tree node immediately before (or at) the element\n            TreeBase.prototype.lowerBound = function (data) {\n                return this._bound(data, this._comparator);\n            };\n            ;\n            // Returns an interator to the tree node immediately after (or at) the element\n            TreeBase.prototype.upperBound = function (data) {\n                var cmp = this._comparator;\n                function reverse_cmp(a, b) {\n                    return cmp(b, a);\n                }\n                return this._bound(data, reverse_cmp);\n            };\n            ;\n            // returns null if tree is empty\n            TreeBase.prototype.min = function () {\n                var res = this._root;\n                if (res === null) {\n                    return null;\n                }\n                while (res.left !== null) {\n                    res = res.left;\n                }\n                return res.data;\n            };\n            ;\n            // returns null if tree is empty\n            TreeBase.prototype.max = function () {\n                var res = this._root;\n                if (res === null) {\n                    return null;\n                }\n                while (res.right !== null) {\n                    res = res.right;\n                }\n                return res.data;\n            };\n            ;\n            // returns a null iterator\n            // call next() or prev() to point to an element\n            TreeBase.prototype.iterator = function () {\n                return new Iterator(this);\n            };\n            ;\n            // calls cb on each node's data, in order\n            TreeBase.prototype.each = function (cb) {\n                var it = this.iterator(), data;\n                while ((data = it.next()) !== null) {\n                    cb(data);\n                }\n            };\n            ;\n            // calls cb on each node's data, in reverse order\n            TreeBase.prototype.reach = function (cb) {\n                var it = this.iterator(), data;\n                while ((data = it.prev()) !== null) {\n                    cb(data);\n                }\n            };\n            ;\n            // used for lowerBound and upperBound\n            TreeBase.prototype._bound = function (data, cmp) {\n                var cur = this._root;\n                var iter = this.iterator();\n                while (cur !== null) {\n                    var c = this._comparator(data, cur.data);\n                    if (c === 0) {\n                        iter._cursor = cur;\n                        return iter;\n                    }\n                    iter._ancestors.push(cur);\n                    cur = cur.get_child(c > 0);\n                }\n                for (var i = iter._ancestors.length - 1; i >= 0; --i) {\n                    cur = iter._ancestors[i];\n                    if (cmp(data, cur.data) > 0) {\n                        iter._cursor = cur;\n                        iter._ancestors.length = i;\n                        return iter;\n                    }\n                }\n                iter._ancestors.length = 0;\n                return iter;\n            };\n            ;\n            return TreeBase;\n        })();\n        vpsc.TreeBase = TreeBase;\n        var Iterator = (function () {\n            function Iterator(tree) {\n                this._tree = tree;\n                this._ancestors = [];\n                this._cursor = null;\n            }\n            Iterator.prototype.data = function () {\n                return this._cursor !== null ? this._cursor.data : null;\n            };\n            ;\n            // if null-iterator, returns first node\n            // otherwise, returns next node\n            Iterator.prototype.next = function () {\n                if (this._cursor === null) {\n                    var root = this._tree._root;\n                    if (root !== null) {\n                        this._minNode(root);\n                    }\n                }\n                else {\n                    if (this._cursor.right === null) {\n                        // no greater node in subtree, go up to parent\n                        // if coming from a right child, continue up the stack\n                        var save;\n                        do {\n                            save = this._cursor;\n                            if (this._ancestors.length) {\n                                this._cursor = this._ancestors.pop();\n                            }\n                            else {\n                                this._cursor = null;\n                                break;\n                            }\n                        } while (this._cursor.right === save);\n                    }\n                    else {\n                        // get the next node from the subtree\n                        this._ancestors.push(this._cursor);\n                        this._minNode(this._cursor.right);\n                    }\n                }\n                return this._cursor !== null ? this._cursor.data : null;\n            };\n            ;\n            // if null-iterator, returns last node\n            // otherwise, returns previous node\n            Iterator.prototype.prev = function () {\n                if (this._cursor === null) {\n                    var root = this._tree._root;\n                    if (root !== null) {\n                        this._maxNode(root);\n                    }\n                }\n                else {\n                    if (this._cursor.left === null) {\n                        var save;\n                        do {\n                            save = this._cursor;\n                            if (this._ancestors.length) {\n                                this._cursor = this._ancestors.pop();\n                            }\n                            else {\n                                this._cursor = null;\n                                break;\n                            }\n                        } while (this._cursor.left === save);\n                    }\n                    else {\n                        this._ancestors.push(this._cursor);\n                        this._maxNode(this._cursor.left);\n                    }\n                }\n                return this._cursor !== null ? this._cursor.data : null;\n            };\n            ;\n            Iterator.prototype._minNode = function (start) {\n                while (start.left !== null) {\n                    this._ancestors.push(start);\n                    start = start.left;\n                }\n                this._cursor = start;\n            };\n            ;\n            Iterator.prototype._maxNode = function (start) {\n                while (start.right !== null) {\n                    this._ancestors.push(start);\n                    start = start.right;\n                }\n                this._cursor = start;\n            };\n            ;\n            return Iterator;\n        })();\n        vpsc.Iterator = Iterator;\n        var Node = (function () {\n            function Node(data) {\n                this.data = data;\n                this.left = null;\n                this.right = null;\n                this.red = true;\n            }\n            Node.prototype.get_child = function (dir) {\n                return dir ? this.right : this.left;\n            };\n            ;\n            Node.prototype.set_child = function (dir, val) {\n                if (dir) {\n                    this.right = val;\n                }\n                else {\n                    this.left = val;\n                }\n            };\n            ;\n            return Node;\n        })();\n        var RBTree = (function (_super) {\n            __extends(RBTree, _super);\n            function RBTree(comparator) {\n                _super.call(this);\n                this._root = null;\n                this._comparator = comparator;\n                this.size = 0;\n            }\n            // returns true if inserted, false if duplicate\n            RBTree.prototype.insert = function (data) {\n                var ret = false;\n                if (this._root === null) {\n                    // empty tree\n                    this._root = new Node(data);\n                    ret = true;\n                    this.size++;\n                }\n                else {\n                    var head = new Node(undefined); // fake tree root\n                    var dir = false;\n                    var last = false;\n                    // setup\n                    var gp = null; // grandparent\n                    var ggp = head; // grand-grand-parent\n                    var p = null; // parent\n                    var node = this._root;\n                    ggp.right = this._root;\n                    // search down\n                    while (true) {\n                        if (node === null) {\n                            // insert new node at the bottom\n                            node = new Node(data);\n                            p.set_child(dir, node);\n                            ret = true;\n                            this.size++;\n                        }\n                        else if (RBTree.is_red(node.left) && RBTree.is_red(node.right)) {\n                            // color flip\n                            node.red = true;\n                            node.left.red = false;\n                            node.right.red = false;\n                        }\n                        // fix red violation\n                        if (RBTree.is_red(node) && RBTree.is_red(p)) {\n                            var dir2 = ggp.right === gp;\n                            if (node === p.get_child(last)) {\n                                ggp.set_child(dir2, RBTree.single_rotate(gp, !last));\n                            }\n                            else {\n                                ggp.set_child(dir2, RBTree.double_rotate(gp, !last));\n                            }\n                        }\n                        var cmp = this._comparator(node.data, data);\n                        // stop if found\n                        if (cmp === 0) {\n                            break;\n                        }\n                        last = dir;\n                        dir = cmp < 0;\n                        // update helpers\n                        if (gp !== null) {\n                            ggp = gp;\n                        }\n                        gp = p;\n                        p = node;\n                        node = node.get_child(dir);\n                    }\n                    // update root\n                    this._root = head.right;\n                }\n                // make root black\n                this._root.red = false;\n                return ret;\n            };\n            ;\n            // returns true if removed, false if not found\n            RBTree.prototype.remove = function (data) {\n                if (this._root === null) {\n                    return false;\n                }\n                var head = new Node(undefined); // fake tree root\n                var node = head;\n                node.right = this._root;\n                var p = null; // parent\n                var gp = null; // grand parent\n                var found = null; // found item\n                var dir = true;\n                while (node.get_child(dir) !== null) {\n                    var last = dir;\n                    // update helpers\n                    gp = p;\n                    p = node;\n                    node = node.get_child(dir);\n                    var cmp = this._comparator(data, node.data);\n                    dir = cmp > 0;\n                    // save found node\n                    if (cmp === 0) {\n                        found = node;\n                    }\n                    // push the red node down\n                    if (!RBTree.is_red(node) && !RBTree.is_red(node.get_child(dir))) {\n                        if (RBTree.is_red(node.get_child(!dir))) {\n                            var sr = RBTree.single_rotate(node, dir);\n                            p.set_child(last, sr);\n                            p = sr;\n                        }\n                        else if (!RBTree.is_red(node.get_child(!dir))) {\n                            var sibling = p.get_child(!last);\n                            if (sibling !== null) {\n                                if (!RBTree.is_red(sibling.get_child(!last)) && !RBTree.is_red(sibling.get_child(last))) {\n                                    // color flip\n                                    p.red = false;\n                                    sibling.red = true;\n                                    node.red = true;\n                                }\n                                else {\n                                    var dir2 = gp.right === p;\n                                    if (RBTree.is_red(sibling.get_child(last))) {\n                                        gp.set_child(dir2, RBTree.double_rotate(p, last));\n                                    }\n                                    else if (RBTree.is_red(sibling.get_child(!last))) {\n                                        gp.set_child(dir2, RBTree.single_rotate(p, last));\n                                    }\n                                    // ensure correct coloring\n                                    var gpc = gp.get_child(dir2);\n                                    gpc.red = true;\n                                    node.red = true;\n                                    gpc.left.red = false;\n                                    gpc.right.red = false;\n                                }\n                            }\n                        }\n                    }\n                }\n                // replace and remove if found\n                if (found !== null) {\n                    found.data = node.data;\n                    p.set_child(p.right === node, node.get_child(node.left === null));\n                    this.size--;\n                }\n                // update root and make it black\n                this._root = head.right;\n                if (this._root !== null) {\n                    this._root.red = false;\n                }\n                return found !== null;\n            };\n            ;\n            RBTree.is_red = function (node) {\n                return node !== null && node.red;\n            };\n            RBTree.single_rotate = function (root, dir) {\n                var save = root.get_child(!dir);\n                root.set_child(!dir, save.get_child(dir));\n                save.set_child(dir, root);\n                root.red = true;\n                save.red = false;\n                return save;\n            };\n            RBTree.double_rotate = function (root, dir) {\n                root.set_child(!dir, RBTree.single_rotate(root.get_child(!dir), !dir));\n                return RBTree.single_rotate(root, dir);\n            };\n            return RBTree;\n        })(TreeBase);\n        vpsc.RBTree = RBTree;\n    })(vpsc = cola.vpsc || (cola.vpsc = {}));\n})(cola || (cola = {}));\n///<reference path=\"vpsc.ts\"/>\n///<reference path=\"rbtree.ts\"/>\nvar cola = require('cytoscape-cola');;\n(function (cola) {\n    var vpsc;\n    (function (vpsc) {\n        function computeGroupBounds(g) {\n            g.bounds = typeof g.leaves !== \"undefined\" ?\n                g.leaves.reduce(function (r, c) { return c.bounds.union(r); }, Rectangle.empty()) :\n                Rectangle.empty();\n            if (typeof g.groups !== \"undefined\")\n                g.bounds = g.groups.reduce(function (r, c) { return computeGroupBounds(c).union(r); }, g.bounds);\n            g.bounds = g.bounds.inflate(g.padding);\n            return g.bounds;\n        }\n        vpsc.computeGroupBounds = computeGroupBounds;\n        var Rectangle = (function () {\n            function Rectangle(x, X, y, Y) {\n                this.x = x;\n                this.X = X;\n                this.y = y;\n                this.Y = Y;\n            }\n            Rectangle.empty = function () { return new Rectangle(Number.POSITIVE_INFINITY, Number.NEGATIVE_INFINITY, Number.POSITIVE_INFINITY, Number.NEGATIVE_INFINITY); };\n            Rectangle.prototype.cx = function () { return (this.x + this.X) / 2; };\n            Rectangle.prototype.cy = function () { return (this.y + this.Y) / 2; };\n            Rectangle.prototype.overlapX = function (r) {\n                var ux = this.cx(), vx = r.cx();\n                if (ux <= vx && r.x < this.X)\n                    return this.X - r.x;\n                if (vx <= ux && this.x < r.X)\n                    return r.X - this.x;\n                return 0;\n            };\n            Rectangle.prototype.overlapY = function (r) {\n                var uy = this.cy(), vy = r.cy();\n                if (uy <= vy && r.y < this.Y)\n                    return this.Y - r.y;\n                if (vy <= uy && this.y < r.Y)\n                    return r.Y - this.y;\n                return 0;\n            };\n            Rectangle.prototype.setXCentre = function (cx) {\n                var dx = cx - this.cx();\n                this.x += dx;\n                this.X += dx;\n            };\n            Rectangle.prototype.setYCentre = function (cy) {\n                var dy = cy - this.cy();\n                this.y += dy;\n                this.Y += dy;\n            };\n            Rectangle.prototype.width = function () {\n                return this.X - this.x;\n            };\n            Rectangle.prototype.height = function () {\n                return this.Y - this.y;\n            };\n            Rectangle.prototype.union = function (r) {\n                return new Rectangle(Math.min(this.x, r.x), Math.max(this.X, r.X), Math.min(this.y, r.y), Math.max(this.Y, r.Y));\n            };\n            /**\n             * return any intersection points between the given line and the sides of this rectangle\n             * @method lineIntersection\n             * @param x1 number first x coord of line\n             * @param y1 number first y coord of line\n             * @param x2 number second x coord of line\n             * @param y2 number second y coord of line\n             * @return any intersection points found\n             */\n            Rectangle.prototype.lineIntersections = function (x1, y1, x2, y2) {\n                var sides = [[this.x, this.y, this.X, this.y],\n                    [this.X, this.y, this.X, this.Y],\n                    [this.X, this.Y, this.x, this.Y],\n                    [this.x, this.Y, this.x, this.y]];\n                var intersections = [];\n                for (var i = 0; i < 4; ++i) {\n                    var r = Rectangle.lineIntersection(x1, y1, x2, y2, sides[i][0], sides[i][1], sides[i][2], sides[i][3]);\n                    if (r !== null)\n                        intersections.push({ x: r.x, y: r.y });\n                }\n                return intersections;\n            };\n            /**\n             * return any intersection points between a line extending from the centre of this rectangle to the given point,\n             *  and the sides of this rectangle\n             * @method lineIntersection\n             * @param x2 number second x coord of line\n             * @param y2 number second y coord of line\n             * @return any intersection points found\n             */\n            Rectangle.prototype.rayIntersection = function (x2, y2) {\n                var ints = this.lineIntersections(this.cx(), this.cy(), x2, y2);\n                return ints.length > 0 ? ints[0] : null;\n            };\n            Rectangle.prototype.vertices = function () {\n                return [\n                    { x: this.x, y: this.y },\n                    { x: this.X, y: this.y },\n                    { x: this.X, y: this.Y },\n                    { x: this.x, y: this.Y },\n                    { x: this.x, y: this.y }];\n            };\n            Rectangle.lineIntersection = function (x1, y1, x2, y2, x3, y3, x4, y4) {\n                var dx12 = x2 - x1, dx34 = x4 - x3, dy12 = y2 - y1, dy34 = y4 - y3, denominator = dy34 * dx12 - dx34 * dy12;\n                if (denominator == 0)\n                    return null;\n                var dx31 = x1 - x3, dy31 = y1 - y3, numa = dx34 * dy31 - dy34 * dx31, a = numa / denominator, numb = dx12 * dy31 - dy12 * dx31, b = numb / denominator;\n                if (a >= 0 && a <= 1 && b >= 0 && b <= 1) {\n                    return {\n                        x: x1 + a * dx12,\n                        y: y1 + a * dy12\n                    };\n                }\n                return null;\n            };\n            Rectangle.prototype.inflate = function (pad) {\n                return new Rectangle(this.x - pad, this.X + pad, this.y - pad, this.Y + pad);\n            };\n            return Rectangle;\n        })();\n        vpsc.Rectangle = Rectangle;\n        function makeEdgeBetween(source, target, ah) {\n            var si = source.rayIntersection(target.cx(), target.cy()) || { x: source.cx(), y: source.cy() }, ti = target.rayIntersection(source.cx(), source.cy()) || { x: target.cx(), y: target.cy() }, dx = ti.x - si.x, dy = ti.y - si.y, l = Math.sqrt(dx * dx + dy * dy), al = l - ah;\n            return {\n                sourceIntersection: si,\n                targetIntersection: ti,\n                arrowStart: { x: si.x + al * dx / l, y: si.y + al * dy / l }\n            };\n        }\n        vpsc.makeEdgeBetween = makeEdgeBetween;\n        function makeEdgeTo(s, target, ah) {\n            var ti = target.rayIntersection(s.x, s.y);\n            if (!ti)\n                ti = { x: target.cx(), y: target.cy() };\n            var dx = ti.x - s.x, dy = ti.y - s.y, l = Math.sqrt(dx * dx + dy * dy);\n            return { x: ti.x - ah * dx / l, y: ti.y - ah * dy / l };\n        }\n        vpsc.makeEdgeTo = makeEdgeTo;\n        var Node = (function () {\n            function Node(v, r, pos) {\n                this.v = v;\n                this.r = r;\n                this.pos = pos;\n                this.prev = makeRBTree();\n                this.next = makeRBTree();\n            }\n            return Node;\n        })();\n        var Event = (function () {\n            function Event(isOpen, v, pos) {\n                this.isOpen = isOpen;\n                this.v = v;\n                this.pos = pos;\n            }\n            return Event;\n        })();\n        function compareEvents(a, b) {\n            if (a.pos > b.pos) {\n                return 1;\n            }\n            if (a.pos < b.pos) {\n                return -1;\n            }\n            if (a.isOpen) {\n                // open must come before close\n                return -1;\n            }\n            if (b.isOpen) {\n                // open must come before close\n                return 1;\n            }\n            return 0;\n        }\n        function makeRBTree() {\n            return new vpsc.RBTree(function (a, b) { return a.pos - b.pos; });\n        }\n        var xRect = {\n            getCentre: function (r) { return r.cx(); },\n            getOpen: function (r) { return r.y; },\n            getClose: function (r) { return r.Y; },\n            getSize: function (r) { return r.width(); },\n            makeRect: function (open, close, center, size) { return new Rectangle(center - size / 2, center + size / 2, open, close); },\n            findNeighbours: findXNeighbours\n        };\n        var yRect = {\n            getCentre: function (r) { return r.cy(); },\n            getOpen: function (r) { return r.x; },\n            getClose: function (r) { return r.X; },\n            getSize: function (r) { return r.height(); },\n            makeRect: function (open, close, center, size) { return new Rectangle(open, close, center - size / 2, center + size / 2); },\n            findNeighbours: findYNeighbours\n        };\n        function generateGroupConstraints(root, f, minSep, isContained) {\n            if (isContained === void 0) { isContained = false; }\n            var padding = root.padding, gn = typeof root.groups !== 'undefined' ? root.groups.length : 0, ln = typeof root.leaves !== 'undefined' ? root.leaves.length : 0, childConstraints = !gn ? []\n                : root.groups.reduce(function (ccs, g) { return ccs.concat(generateGroupConstraints(g, f, minSep, true)); }, []), n = (isContained ? 2 : 0) + ln + gn, vs = new Array(n), rs = new Array(n), i = 0, add = function (r, v) { rs[i] = r; vs[i++] = v; };\n            if (isContained) {\n                // if this group is contained by another, then we add two dummy vars and rectangles for the borders\n                var b = root.bounds, c = f.getCentre(b), s = f.getSize(b) / 2, open = f.getOpen(b), close = f.getClose(b), min = c - s + padding / 2, max = c + s - padding / 2;\n                root.minVar.desiredPosition = min;\n                add(f.makeRect(open, close, min, padding), root.minVar);\n                root.maxVar.desiredPosition = max;\n                add(f.makeRect(open, close, max, padding), root.maxVar);\n            }\n            if (ln)\n                root.leaves.forEach(function (l) { return add(l.bounds, l.variable); });\n            if (gn)\n                root.groups.forEach(function (g) {\n                    var b = g.bounds;\n                    add(f.makeRect(f.getOpen(b), f.getClose(b), f.getCentre(b), f.getSize(b)), g.minVar);\n                });\n            var cs = generateConstraints(rs, vs, f, minSep);\n            if (gn) {\n                vs.forEach(function (v) { v.cOut = [], v.cIn = []; });\n                cs.forEach(function (c) { c.left.cOut.push(c), c.right.cIn.push(c); });\n                root.groups.forEach(function (g) {\n                    var gapAdjustment = (g.padding - f.getSize(g.bounds)) / 2;\n                    g.minVar.cIn.forEach(function (c) { return c.gap += gapAdjustment; });\n                    g.minVar.cOut.forEach(function (c) { c.left = g.maxVar; c.gap += gapAdjustment; });\n                });\n            }\n            return childConstraints.concat(cs);\n        }\n        function generateConstraints(rs, vars, rect, minSep) {\n            var i, n = rs.length;\n            var N = 2 * n;\n            console.assert(vars.length >= n);\n            var events = new Array(N);\n            for (i = 0; i < n; ++i) {\n                var r = rs[i];\n                var v = new Node(vars[i], r, rect.getCentre(r));\n                events[i] = new Event(true, v, rect.getOpen(r));\n                events[i + n] = new Event(false, v, rect.getClose(r));\n            }\n            events.sort(compareEvents);\n            var cs = new Array();\n            var scanline = makeRBTree();\n            for (i = 0; i < N; ++i) {\n                var e = events[i];\n                var v = e.v;\n                if (e.isOpen) {\n                    scanline.insert(v);\n                    rect.findNeighbours(v, scanline);\n                }\n                else {\n                    // close event\n                    scanline.remove(v);\n                    var makeConstraint = function (l, r) {\n                        var sep = (rect.getSize(l.r) + rect.getSize(r.r)) / 2 + minSep;\n                        cs.push(new vpsc.Constraint(l.v, r.v, sep));\n                    };\n                    var visitNeighbours = function (forward, reverse, mkcon) {\n                        var u, it = v[forward].iterator();\n                        while ((u = it[forward]()) !== null) {\n                            mkcon(u, v);\n                            u[reverse].remove(v);\n                        }\n                    };\n                    visitNeighbours(\"prev\", \"next\", function (u, v) { return makeConstraint(u, v); });\n                    visitNeighbours(\"next\", \"prev\", function (u, v) { return makeConstraint(v, u); });\n                }\n            }\n            console.assert(scanline.size === 0);\n            return cs;\n        }\n        function findXNeighbours(v, scanline) {\n            var f = function (forward, reverse) {\n                var it = scanline.findIter(v);\n                var u;\n                while ((u = it[forward]()) !== null) {\n                    var uovervX = u.r.overlapX(v.r);\n                    if (uovervX <= 0 || uovervX <= u.r.overlapY(v.r)) {\n                        v[forward].insert(u);\n                        u[reverse].insert(v);\n                    }\n                    if (uovervX <= 0) {\n                        break;\n                    }\n                }\n            };\n            f(\"next\", \"prev\");\n            f(\"prev\", \"next\");\n        }\n        function findYNeighbours(v, scanline) {\n            var f = function (forward, reverse) {\n                var u = scanline.findIter(v)[forward]();\n                if (u !== null && u.r.overlapX(v.r) > 0) {\n                    v[forward].insert(u);\n                    u[reverse].insert(v);\n                }\n            };\n            f(\"next\", \"prev\");\n            f(\"prev\", \"next\");\n        }\n        function generateXConstraints(rs, vars) {\n            return generateConstraints(rs, vars, xRect, 1e-6);\n        }\n        vpsc.generateXConstraints = generateXConstraints;\n        function generateYConstraints(rs, vars) {\n            return generateConstraints(rs, vars, yRect, 1e-6);\n        }\n        vpsc.generateYConstraints = generateYConstraints;\n        function generateXGroupConstraints(root) {\n            return generateGroupConstraints(root, xRect, 1e-6);\n        }\n        vpsc.generateXGroupConstraints = generateXGroupConstraints;\n        function generateYGroupConstraints(root) {\n            return generateGroupConstraints(root, yRect, 1e-6);\n        }\n        vpsc.generateYGroupConstraints = generateYGroupConstraints;\n        function removeOverlaps(rs) {\n            var vs = rs.map(function (r) { return new vpsc.Variable(r.cx()); });\n            var cs = vpsc.generateXConstraints(rs, vs);\n            var solver = new vpsc.Solver(vs, cs);\n            solver.solve();\n            vs.forEach(function (v, i) { return rs[i].setXCentre(v.position()); });\n            vs = rs.map(function (r) { return new vpsc.Variable(r.cy()); });\n            cs = vpsc.generateYConstraints(rs, vs);\n            solver = new vpsc.Solver(vs, cs);\n            solver.solve();\n            vs.forEach(function (v, i) { return rs[i].setYCentre(v.position()); });\n        }\n        vpsc.removeOverlaps = removeOverlaps;\n        var IndexedVariable = (function (_super) {\n            __extends(IndexedVariable, _super);\n            function IndexedVariable(index, w) {\n                _super.call(this, 0, w);\n                this.index = index;\n            }\n            return IndexedVariable;\n        })(vpsc.Variable);\n        vpsc.IndexedVariable = IndexedVariable;\n        var Projection = (function () {\n            function Projection(nodes, groups, rootGroup, constraints, avoidOverlaps) {\n                var _this = this;\n                if (rootGroup === void 0) { rootGroup = null; }\n                if (constraints === void 0) { constraints = null; }\n                if (avoidOverlaps === void 0) { avoidOverlaps = false; }\n                this.nodes = nodes;\n                this.groups = groups;\n                this.rootGroup = rootGroup;\n                this.avoidOverlaps = avoidOverlaps;\n                this.variables = nodes.map(function (v, i) {\n                    return v.variable = new IndexedVariable(i, 1);\n                });\n                if (constraints)\n                    this.createConstraints(constraints);\n                if (avoidOverlaps && rootGroup && typeof rootGroup.groups !== 'undefined') {\n                    nodes.forEach(function (v) {\n                        if (!v.width || !v.height) {\n                            //If undefined, default to nothing\n                            v.bounds = new vpsc.Rectangle(v.x, v.x, v.y, v.y);\n                            return;\n                        }\n                        var w2 = v.width / 2, h2 = v.height / 2;\n                        v.bounds = new vpsc.Rectangle(v.x - w2, v.x + w2, v.y - h2, v.y + h2);\n                    });\n                    computeGroupBounds(rootGroup);\n                    var i = nodes.length;\n                    groups.forEach(function (g) {\n                        _this.variables[i] = g.minVar = new IndexedVariable(i++, typeof g.stiffness !== \"undefined\" ? g.stiffness : 0.01);\n                        _this.variables[i] = g.maxVar = new IndexedVariable(i++, typeof g.stiffness !== \"undefined\" ? g.stiffness : 0.01);\n                    });\n                }\n            }\n            Projection.prototype.createSeparation = function (c) {\n                return new vpsc.Constraint(this.nodes[c.left].variable, this.nodes[c.right].variable, c.gap, typeof c.equality !== \"undefined\" ? c.equality : false);\n            };\n            Projection.prototype.makeFeasible = function (c) {\n                var _this = this;\n                if (!this.avoidOverlaps)\n                    return;\n                var axis = 'x', dim = 'width';\n                if (c.axis === 'x')\n                    axis = 'y', dim = 'height';\n                var vs = c.offsets.map(function (o) { return _this.nodes[o.node]; }).sort(function (a, b) { return a[axis] - b[axis]; });\n                var p = null;\n                vs.forEach(function (v) {\n                    if (p)\n                        v[axis] = p[axis] + p[dim] + 1;\n                    p = v;\n                });\n            };\n            Projection.prototype.createAlignment = function (c) {\n                var _this = this;\n                var u = this.nodes[c.offsets[0].node].variable;\n                this.makeFeasible(c);\n                var cs = c.axis === 'x' ? this.xConstraints : this.yConstraints;\n                c.offsets.slice(1).forEach(function (o) {\n                    var v = _this.nodes[o.node].variable;\n                    cs.push(new vpsc.Constraint(u, v, o.offset, true));\n                });\n            };\n            Projection.prototype.createConstraints = function (constraints) {\n                var _this = this;\n                var isSep = function (c) { return typeof c.type === 'undefined' || c.type === 'separation'; };\n                this.xConstraints = constraints\n                    .filter(function (c) { return c.axis === \"x\" && isSep(c); })\n                    .map(function (c) { return _this.createSeparation(c); });\n                this.yConstraints = constraints\n                    .filter(function (c) { return c.axis === \"y\" && isSep(c); })\n                    .map(function (c) { return _this.createSeparation(c); });\n                constraints\n                    .filter(function (c) { return c.type === 'alignment'; })\n                    .forEach(function (c) { return _this.createAlignment(c); });\n            };\n            Projection.prototype.setupVariablesAndBounds = function (x0, y0, desired, getDesired) {\n                this.nodes.forEach(function (v, i) {\n                    if (v.fixed) {\n                        v.variable.weight = v.fixedWeight ? v.fixedWeight : 1000;\n                        desired[i] = getDesired(v);\n                    }\n                    else {\n                        v.variable.weight = 1;\n                    }\n                    var w = (v.width || 0) / 2, h = (v.height || 0) / 2;\n                    var ix = x0[i], iy = y0[i];\n                    v.bounds = new Rectangle(ix - w, ix + w, iy - h, iy + h);\n                });\n            };\n            Projection.prototype.xProject = function (x0, y0, x) {\n                if (!this.rootGroup && !(this.avoidOverlaps || this.xConstraints))\n                    return;\n                this.project(x0, y0, x0, x, function (v) { return v.px; }, this.xConstraints, generateXGroupConstraints, function (v) { return v.bounds.setXCentre(x[v.variable.index] = v.variable.position()); }, function (g) {\n                    var xmin = x[g.minVar.index] = g.minVar.position();\n                    var xmax = x[g.maxVar.index] = g.maxVar.position();\n                    var p2 = g.padding / 2;\n                    g.bounds.x = xmin - p2;\n                    g.bounds.X = xmax + p2;\n                });\n            };\n            Projection.prototype.yProject = function (x0, y0, y) {\n                if (!this.rootGroup && !this.yConstraints)\n                    return;\n                this.project(x0, y0, y0, y, function (v) { return v.py; }, this.yConstraints, generateYGroupConstraints, function (v) { return v.bounds.setYCentre(y[v.variable.index] = v.variable.position()); }, function (g) {\n                    var ymin = y[g.minVar.index] = g.minVar.position();\n                    var ymax = y[g.maxVar.index] = g.maxVar.position();\n                    var p2 = g.padding / 2;\n                    g.bounds.y = ymin - p2;\n                    ;\n                    g.bounds.Y = ymax + p2;\n                });\n            };\n            Projection.prototype.projectFunctions = function () {\n                var _this = this;\n                return [\n                    function (x0, y0, x) { return _this.xProject(x0, y0, x); },\n                    function (x0, y0, y) { return _this.yProject(x0, y0, y); }\n                ];\n            };\n            Projection.prototype.project = function (x0, y0, start, desired, getDesired, cs, generateConstraints, updateNodeBounds, updateGroupBounds) {\n                this.setupVariablesAndBounds(x0, y0, desired, getDesired);\n                if (this.rootGroup && this.avoidOverlaps) {\n                    computeGroupBounds(this.rootGroup);\n                    cs = cs.concat(generateConstraints(this.rootGroup));\n                }\n                this.solve(this.variables, cs, start, desired);\n                this.nodes.forEach(updateNodeBounds);\n                if (this.rootGroup && this.avoidOverlaps) {\n                    this.groups.forEach(updateGroupBounds);\n                    computeGroupBounds(this.rootGroup);\n                }\n            };\n            Projection.prototype.solve = function (vs, cs, starting, desired) {\n                var solver = new vpsc.Solver(vs, cs);\n                solver.setStartingPositions(starting);\n                solver.setDesiredPositions(desired);\n                solver.solve();\n            };\n            return Projection;\n        })();\n        vpsc.Projection = Projection;\n    })(vpsc = cola.vpsc || (cola.vpsc = {}));\n})(cola || (cola = {}));\n///<reference path=\"vpsc.ts\"/>\n///<reference path=\"rectangle.ts\"/>\nvar cola = require('cytoscape-cola');;\n(function (cola) {\n    var geom;\n    (function (geom) {\n        var Point = (function () {\n            function Point() {\n            }\n            return Point;\n        })();\n        geom.Point = Point;\n        var LineSegment = (function () {\n            function LineSegment(x1, y1, x2, y2) {\n                this.x1 = x1;\n                this.y1 = y1;\n                this.x2 = x2;\n                this.y2 = y2;\n            }\n            return LineSegment;\n        })();\n        geom.LineSegment = LineSegment;\n        var PolyPoint = (function (_super) {\n            __extends(PolyPoint, _super);\n            function PolyPoint() {\n                _super.apply(this, arguments);\n            }\n            return PolyPoint;\n        })(Point);\n        geom.PolyPoint = PolyPoint;\n        /** tests if a point is Left|On|Right of an infinite line.\n         * @param points P0, P1, and P2\n         * @return >0 for P2 left of the line through P0 and P1\n         *            =0 for P2 on the line\n         *            <0 for P2 right of the line\n         */\n        function isLeft(P0, P1, P2) {\n            return (P1.x - P0.x) * (P2.y - P0.y) - (P2.x - P0.x) * (P1.y - P0.y);\n        }\n        geom.isLeft = isLeft;\n        function above(p, vi, vj) {\n            return isLeft(p, vi, vj) > 0;\n        }\n        function below(p, vi, vj) {\n            return isLeft(p, vi, vj) < 0;\n        }\n        /**\n         * returns the convex hull of a set of points using Andrew's monotone chain algorithm\n         * see: http://geomalgorithms.com/a10-_hull-1.html#Monotone%20Chain\n         * @param S array of points\n         * @return the convex hull as an array of points\n         */\n        function ConvexHull(S) {\n            var P = S.slice(0).sort(function (a, b) { return a.x !== b.x ? b.x - a.x : b.y - a.y; });\n            var n = S.length, i;\n            var minmin = 0;\n            var xmin = P[0].x;\n            for (i = 1; i < n; ++i) {\n                if (P[i].x !== xmin)\n                    break;\n            }\n            var minmax = i - 1;\n            var H = [];\n            H.push(P[minmin]); // push minmin point onto stack\n            if (minmax === n - 1) {\n                if (P[minmax].y !== P[minmin].y)\n                    H.push(P[minmax]);\n            }\n            else {\n                // Get the indices of points with max x-coord and min|max y-coord\n                var maxmin, maxmax = n - 1;\n                var xmax = P[n - 1].x;\n                for (i = n - 2; i >= 0; i--)\n                    if (P[i].x !== xmax)\n                        break;\n                maxmin = i + 1;\n                // Compute the lower hull on the stack H\n                i = minmax;\n                while (++i <= maxmin) {\n                    // the lower line joins P[minmin]  with P[maxmin]\n                    if (isLeft(P[minmin], P[maxmin], P[i]) >= 0 && i < maxmin)\n                        continue; // ignore P[i] above or on the lower line\n                    while (H.length > 1) {\n                        // test if  P[i] is left of the line at the stack top\n                        if (isLeft(H[H.length - 2], H[H.length - 1], P[i]) > 0)\n                            break; // P[i] is a new hull  vertex\n                        else\n                            H.length -= 1; // pop top point off  stack\n                    }\n                    if (i != minmin)\n                        H.push(P[i]);\n                }\n                // Next, compute the upper hull on the stack H above the bottom hull\n                if (maxmax != maxmin)\n                    H.push(P[maxmax]); // push maxmax point onto stack\n                var bot = H.length; // the bottom point of the upper hull stack\n                i = maxmin;\n                while (--i >= minmax) {\n                    // the upper line joins P[maxmax]  with P[minmax]\n                    if (isLeft(P[maxmax], P[minmax], P[i]) >= 0 && i > minmax)\n                        continue; // ignore P[i] below or on the upper line\n                    while (H.length > bot) {\n                        // test if  P[i] is left of the line at the stack top\n                        if (isLeft(H[H.length - 2], H[H.length - 1], P[i]) > 0)\n                            break; // P[i] is a new hull  vertex\n                        else\n                            H.length -= 1; // pop top point off  stack\n                    }\n                    if (i != minmin)\n                        H.push(P[i]); // push P[i] onto stack\n                }\n            }\n            return H;\n        }\n        geom.ConvexHull = ConvexHull;\n        // apply f to the points in P in clockwise order around the point p\n        function clockwiseRadialSweep(p, P, f) {\n            P.slice(0).sort(function (a, b) { return Math.atan2(a.y - p.y, a.x - p.x) - Math.atan2(b.y - p.y, b.x - p.x); }).forEach(f);\n        }\n        geom.clockwiseRadialSweep = clockwiseRadialSweep;\n        function nextPolyPoint(p, ps) {\n            if (p.polyIndex === ps.length - 1)\n                return ps[0];\n            return ps[p.polyIndex + 1];\n        }\n        function prevPolyPoint(p, ps) {\n            if (p.polyIndex === 0)\n                return ps[ps.length - 1];\n            return ps[p.polyIndex - 1];\n        }\n        // tangent_PointPolyC(): fast binary search for tangents to a convex polygon\n        //    Input:  P = a 2D point (exterior to the polygon)\n        //            n = number of polygon vertices\n        //            V = array of vertices for a 2D convex polygon with V[n] = V[0]\n        //    Output: rtan = index of rightmost tangent point V[rtan]\n        //            ltan = index of leftmost tangent point V[ltan]\n        function tangent_PointPolyC(P, V) {\n            return { rtan: Rtangent_PointPolyC(P, V), ltan: Ltangent_PointPolyC(P, V) };\n        }\n        // Rtangent_PointPolyC(): binary search for convex polygon right tangent\n        //    Input:  P = a 2D point (exterior to the polygon)\n        //            n = number of polygon vertices\n        //            V = array of vertices for a 2D convex polygon with V[n] = V[0]\n        //    Return: index \"i\" of rightmost tangent point V[i]\n        function Rtangent_PointPolyC(P, V) {\n            var n = V.length - 1;\n            // use binary search for large convex polygons\n            var a, b, c; // indices for edge chain endpoints\n            var upA, dnC; // test for up direction of edges a and c\n            // rightmost tangent = maximum for the isLeft() ordering\n            // test if V[0] is a local maximum\n            if (below(P, V[1], V[0]) && !above(P, V[n - 1], V[0]))\n                return 0; // V[0] is the maximum tangent point\n            for (a = 0, b = n;;) {\n                if (b - a === 1)\n                    if (above(P, V[a], V[b]))\n                        return a;\n                    else\n                        return b;\n                c = Math.floor((a + b) / 2); // midpoint of [a,b], and 0<c<n\n                dnC = below(P, V[c + 1], V[c]);\n                if (dnC && !above(P, V[c - 1], V[c]))\n                    return c; // V[c] is the maximum tangent point\n                // no max yet, so continue with the binary search\n                // pick one of the two subchains [a,c] or [c,b]\n                upA = above(P, V[a + 1], V[a]);\n                if (upA) {\n                    if (dnC)\n                        b = c; // select [a,c]\n                    else {\n                        if (above(P, V[a], V[c]))\n                            b = c; // select [a,c]\n                        else\n                            a = c; // select [c,b]\n                    }\n                }\n                else {\n                    if (!dnC)\n                        a = c; // select [c,b]\n                    else {\n                        if (below(P, V[a], V[c]))\n                            b = c; // select [a,c]\n                        else\n                            a = c; // select [c,b]\n                    }\n                }\n            }\n        }\n        // Ltangent_PointPolyC(): binary search for convex polygon left tangent\n        //    Input:  P = a 2D point (exterior to the polygon)\n        //            n = number of polygon vertices\n        //            V = array of vertices for a 2D convex polygon with V[n]=V[0]\n        //    Return: index \"i\" of leftmost tangent point V[i]\n        function Ltangent_PointPolyC(P, V) {\n            var n = V.length - 1;\n            // use binary search for large convex polygons\n            var a, b, c; // indices for edge chain endpoints\n            var dnA, dnC; // test for down direction of edges a and c\n            // leftmost tangent = minimum for the isLeft() ordering\n            // test if V[0] is a local minimum\n            if (above(P, V[n - 1], V[0]) && !below(P, V[1], V[0]))\n                return 0; // V[0] is the minimum tangent point\n            for (a = 0, b = n;;) {\n                if (b - a === 1)\n                    if (below(P, V[a], V[b]))\n                        return a;\n                    else\n                        return b;\n                c = Math.floor((a + b) / 2); // midpoint of [a,b], and 0<c<n\n                dnC = below(P, V[c + 1], V[c]);\n                if (above(P, V[c - 1], V[c]) && !dnC)\n                    return c; // V[c] is the minimum tangent point\n                // no min yet, so continue with the binary search\n                // pick one of the two subchains [a,c] or [c,b]\n                dnA = below(P, V[a + 1], V[a]);\n                if (dnA) {\n                    if (!dnC)\n                        b = c; // select [a,c]\n                    else {\n                        if (below(P, V[a], V[c]))\n                            b = c; // select [a,c]\n                        else\n                            a = c; // select [c,b]\n                    }\n                }\n                else {\n                    if (dnC)\n                        a = c; // select [c,b]\n                    else {\n                        if (above(P, V[a], V[c]))\n                            b = c; // select [a,c]\n                        else\n                            a = c; // select [c,b]\n                    }\n                }\n            }\n        }\n        // RLtangent_PolyPolyC(): get the RL tangent between two convex polygons\n        //    Input:  m = number of vertices in polygon 1\n        //            V = array of vertices for convex polygon 1 with V[m]=V[0]\n        //            n = number of vertices in polygon 2\n        //            W = array of vertices for convex polygon 2 with W[n]=W[0]\n        //    Output: *t1 = index of tangent point V[t1] for polygon 1\n        //            *t2 = index of tangent point W[t2] for polygon 2\n        function tangent_PolyPolyC(V, W, t1, t2, cmp1, cmp2) {\n            var ix1, ix2; // search indices for polygons 1 and 2\n            // first get the initial vertex on each polygon\n            ix1 = t1(W[0], V); // right tangent from W[0] to V\n            ix2 = t2(V[ix1], W); // left tangent from V[ix1] to W\n            // ping-pong linear search until it stabilizes\n            var done = false; // flag when done\n            while (!done) {\n                done = true; // assume done until...\n                while (true) {\n                    if (ix1 === V.length - 1)\n                        ix1 = 0;\n                    if (cmp1(W[ix2], V[ix1], V[ix1 + 1]))\n                        break;\n                    ++ix1; // get Rtangent from W[ix2] to V\n                }\n                while (true) {\n                    if (ix2 === 0)\n                        ix2 = W.length - 1;\n                    if (cmp2(V[ix1], W[ix2], W[ix2 - 1]))\n                        break;\n                    --ix2; // get Ltangent from V[ix1] to W\n                    done = false; // not done if had to adjust this\n                }\n            }\n            return { t1: ix1, t2: ix2 };\n        }\n        geom.tangent_PolyPolyC = tangent_PolyPolyC;\n        function LRtangent_PolyPolyC(V, W) {\n            var rl = RLtangent_PolyPolyC(W, V);\n            return { t1: rl.t2, t2: rl.t1 };\n        }\n        geom.LRtangent_PolyPolyC = LRtangent_PolyPolyC;\n        function RLtangent_PolyPolyC(V, W) {\n            return tangent_PolyPolyC(V, W, Rtangent_PointPolyC, Ltangent_PointPolyC, above, below);\n        }\n        geom.RLtangent_PolyPolyC = RLtangent_PolyPolyC;\n        function LLtangent_PolyPolyC(V, W) {\n            return tangent_PolyPolyC(V, W, Ltangent_PointPolyC, Ltangent_PointPolyC, below, below);\n        }\n        geom.LLtangent_PolyPolyC = LLtangent_PolyPolyC;\n        function RRtangent_PolyPolyC(V, W) {\n            return tangent_PolyPolyC(V, W, Rtangent_PointPolyC, Rtangent_PointPolyC, above, above);\n        }\n        geom.RRtangent_PolyPolyC = RRtangent_PolyPolyC;\n        var BiTangent = (function () {\n            function BiTangent(t1, t2) {\n                this.t1 = t1;\n                this.t2 = t2;\n            }\n            return BiTangent;\n        })();\n        geom.BiTangent = BiTangent;\n        var BiTangents = (function () {\n            function BiTangents() {\n            }\n            return BiTangents;\n        })();\n        geom.BiTangents = BiTangents;\n        var TVGPoint = (function (_super) {\n            __extends(TVGPoint, _super);\n            function TVGPoint() {\n                _super.apply(this, arguments);\n            }\n            return TVGPoint;\n        })(Point);\n        geom.TVGPoint = TVGPoint;\n        var VisibilityVertex = (function () {\n            function VisibilityVertex(id, polyid, polyvertid, p) {\n                this.id = id;\n                this.polyid = polyid;\n                this.polyvertid = polyvertid;\n                this.p = p;\n                p.vv = this;\n            }\n            return VisibilityVertex;\n        })();\n        geom.VisibilityVertex = VisibilityVertex;\n        var VisibilityEdge = (function () {\n            function VisibilityEdge(source, target) {\n                this.source = source;\n                this.target = target;\n            }\n            VisibilityEdge.prototype.length = function () {\n                var dx = this.source.p.x - this.target.p.x;\n                var dy = this.source.p.y - this.target.p.y;\n                return Math.sqrt(dx * dx + dy * dy);\n            };\n            return VisibilityEdge;\n        })();\n        geom.VisibilityEdge = VisibilityEdge;\n        var TangentVisibilityGraph = (function () {\n            function TangentVisibilityGraph(P, g0) {\n                this.P = P;\n                this.V = [];\n                this.E = [];\n                if (!g0) {\n                    var n = P.length;\n                    for (var i = 0; i < n; i++) {\n                        var p = P[i];\n                        for (var j = 0; j < p.length; ++j) {\n                            var pj = p[j], vv = new VisibilityVertex(this.V.length, i, j, pj);\n                            this.V.push(vv);\n                            if (j > 0)\n                                this.E.push(new VisibilityEdge(p[j - 1].vv, vv));\n                        }\n                    }\n                    for (var i = 0; i < n - 1; i++) {\n                        var Pi = P[i];\n                        for (var j = i + 1; j < n; j++) {\n                            var Pj = P[j], t = geom.tangents(Pi, Pj);\n                            for (var q in t) {\n                                var c = t[q], source = Pi[c.t1], target = Pj[c.t2];\n                                this.addEdgeIfVisible(source, target, i, j);\n                            }\n                        }\n                    }\n                }\n                else {\n                    this.V = g0.V.slice(0);\n                    this.E = g0.E.slice(0);\n                }\n            }\n            TangentVisibilityGraph.prototype.addEdgeIfVisible = function (u, v, i1, i2) {\n                if (!this.intersectsPolys(new LineSegment(u.x, u.y, v.x, v.y), i1, i2)) {\n                    this.E.push(new VisibilityEdge(u.vv, v.vv));\n                }\n            };\n            TangentVisibilityGraph.prototype.addPoint = function (p, i1) {\n                var n = this.P.length;\n                this.V.push(new VisibilityVertex(this.V.length, n, 0, p));\n                for (var i = 0; i < n; ++i) {\n                    if (i === i1)\n                        continue;\n                    var poly = this.P[i], t = tangent_PointPolyC(p, poly);\n                    this.addEdgeIfVisible(p, poly[t.ltan], i1, i);\n                    this.addEdgeIfVisible(p, poly[t.rtan], i1, i);\n                }\n                return p.vv;\n            };\n            TangentVisibilityGraph.prototype.intersectsPolys = function (l, i1, i2) {\n                for (var i = 0, n = this.P.length; i < n; ++i) {\n                    if (i != i1 && i != i2 && intersects(l, this.P[i]).length > 0) {\n                        return true;\n                    }\n                }\n                return false;\n            };\n            return TangentVisibilityGraph;\n        })();\n        geom.TangentVisibilityGraph = TangentVisibilityGraph;\n        function intersects(l, P) {\n            var ints = [];\n            for (var i = 1, n = P.length; i < n; ++i) {\n                var int = cola.vpsc.Rectangle.lineIntersection(l.x1, l.y1, l.x2, l.y2, P[i - 1].x, P[i - 1].y, P[i].x, P[i].y);\n                if (int)\n                    ints.push(int);\n            }\n            return ints;\n        }\n        function tangents(V, W) {\n            var m = V.length - 1, n = W.length - 1;\n            var bt = new BiTangents();\n            for (var i = 0; i < m; ++i) {\n                for (var j = 0; j < n; ++j) {\n                    var v1 = V[i == 0 ? m - 1 : i - 1];\n                    var v2 = V[i];\n                    var v3 = V[i + 1];\n                    var w1 = W[j == 0 ? n - 1 : j - 1];\n                    var w2 = W[j];\n                    var w3 = W[j + 1];\n                    var v1v2w2 = isLeft(v1, v2, w2);\n                    var v2w1w2 = isLeft(v2, w1, w2);\n                    var v2w2w3 = isLeft(v2, w2, w3);\n                    var w1w2v2 = isLeft(w1, w2, v2);\n                    var w2v1v2 = isLeft(w2, v1, v2);\n                    var w2v2v3 = isLeft(w2, v2, v3);\n                    if (v1v2w2 >= 0 && v2w1w2 >= 0 && v2w2w3 < 0\n                        && w1w2v2 >= 0 && w2v1v2 >= 0 && w2v2v3 < 0) {\n                        bt.ll = new BiTangent(i, j);\n                    }\n                    else if (v1v2w2 <= 0 && v2w1w2 <= 0 && v2w2w3 > 0\n                        && w1w2v2 <= 0 && w2v1v2 <= 0 && w2v2v3 > 0) {\n                        bt.rr = new BiTangent(i, j);\n                    }\n                    else if (v1v2w2 <= 0 && v2w1w2 > 0 && v2w2w3 <= 0\n                        && w1w2v2 >= 0 && w2v1v2 < 0 && w2v2v3 >= 0) {\n                        bt.rl = new BiTangent(i, j);\n                    }\n                    else if (v1v2w2 >= 0 && v2w1w2 < 0 && v2w2w3 >= 0\n                        && w1w2v2 <= 0 && w2v1v2 > 0 && w2v2v3 <= 0) {\n                        bt.lr = new BiTangent(i, j);\n                    }\n                }\n            }\n            return bt;\n        }\n        geom.tangents = tangents;\n        function isPointInsidePoly(p, poly) {\n            for (var i = 1, n = poly.length; i < n; ++i)\n                if (below(poly[i - 1], poly[i], p))\n                    return false;\n            return true;\n        }\n        function isAnyPInQ(p, q) {\n            return !p.every(function (v) { return !isPointInsidePoly(v, q); });\n        }\n        function polysOverlap(p, q) {\n            if (isAnyPInQ(p, q))\n                return true;\n            if (isAnyPInQ(q, p))\n                return true;\n            for (var i = 1, n = p.length; i < n; ++i) {\n                var v = p[i], u = p[i - 1];\n                if (intersects(new LineSegment(u.x, u.y, v.x, v.y), q).length > 0)\n                    return true;\n            }\n            return false;\n        }\n        geom.polysOverlap = polysOverlap;\n    })(geom = cola.geom || (cola.geom = {}));\n})(cola || (cola = {}));\n/**\n * @module cola\n */\nvar cola = require('cytoscape-cola');;\n(function (cola) {\n    /**\n     * Descent respects a collection of locks over nodes that should not move\n     * @class Locks\n     */\n    var Locks = (function () {\n        function Locks() {\n            this.locks = {};\n        }\n        /**\n         * add a lock on the node at index id\n         * @method add\n         * @param id index of node to be locked\n         * @param x required position for node\n         */\n        Locks.prototype.add = function (id, x) {\n            /* DEBUG\n                        if (isNaN(x[0]) || isNaN(x[1])) debugger;\n            DEBUG */\n            this.locks[id] = x;\n        };\n        /**\n         * @method clear clear all locks\n         */\n        Locks.prototype.clear = function () {\n            this.locks = {};\n        };\n        /**\n         * @isEmpty\n         * @returns false if no locks exist\n         */\n        Locks.prototype.isEmpty = function () {\n            for (var l in this.locks)\n                return false;\n            return true;\n        };\n        /**\n         * perform an operation on each lock\n         * @apply\n         */\n        Locks.prototype.apply = function (f) {\n            for (var l in this.locks) {\n                f(l, this.locks[l]);\n            }\n        };\n        return Locks;\n    })();\n    cola.Locks = Locks;\n    /**\n     * Uses a gradient descent approach to reduce a stress or p-stress goal function over a graph with specified ideal edge lengths or a square matrix of dissimilarities.\n     * The standard stress function over a graph nodes with position vectors x,y,z is (mathematica input):\n     *   stress[x_,y_,z_,D_,w_]:=Sum[w[[i,j]] (length[x[[i]],y[[i]],z[[i]],x[[j]],y[[j]],z[[j]]]-d[[i,j]])^2,{i,Length[x]-1},{j,i+1,Length[x]}]\n     * where: D is a square matrix of ideal separations between nodes, w is matrix of weights for those separations\n     *        length[x1_, y1_, z1_, x2_, y2_, z2_] = Sqrt[(x1 - x2)^2 + (y1 - y2)^2 + (z1 - z2)^2]\n     * below, we use wij = 1/(Dij^2)\n     *\n     * @class Descent\n     */\n    var Descent = (function () {\n        /**\n         * @method constructor\n         * @param x {number[][]} initial coordinates for nodes\n         * @param D {number[][]} matrix of desired distances between pairs of nodes\n         * @param G {number[][]} [default=null] if specified, G is a matrix of weights for goal terms between pairs of nodes.\n         * If G[i][j] > 1 and the separation between nodes i and j is greater than their ideal distance, then there is no contribution for this pair to the goal\n         * If G[i][j] <= 1 then it is used as a weighting on the contribution of the variance between ideal and actual separation between i and j to the goal function\n         */\n        function Descent(x, D, G) {\n            if (G === void 0) { G = null; }\n            this.D = D;\n            this.G = G;\n            this.threshold = 0.0001;\n            // Parameters for grid snap stress.\n            // TODO: Make a pluggable \"StressTerm\" class instead of this\n            // mess.\n            this.numGridSnapNodes = 0;\n            this.snapGridSize = 100;\n            this.snapStrength = 1000;\n            this.scaleSnapByMaxH = false;\n            this.random = new PseudoRandom();\n            this.project = null;\n            this.x = x;\n            this.k = x.length; // dimensionality\n            var n = this.n = x[0].length; // number of nodes\n            this.H = new Array(this.k);\n            this.g = new Array(this.k);\n            this.Hd = new Array(this.k);\n            this.a = new Array(this.k);\n            this.b = new Array(this.k);\n            this.c = new Array(this.k);\n            this.d = new Array(this.k);\n            this.e = new Array(this.k);\n            this.ia = new Array(this.k);\n            this.ib = new Array(this.k);\n            this.xtmp = new Array(this.k);\n            this.locks = new Locks();\n            this.minD = Number.MAX_VALUE;\n            var i = n, j;\n            while (i--) {\n                j = n;\n                while (--j > i) {\n                    var d = D[i][j];\n                    if (d > 0 && d < this.minD) {\n                        this.minD = d;\n                    }\n                }\n            }\n            if (this.minD === Number.MAX_VALUE)\n                this.minD = 1;\n            i = this.k;\n            while (i--) {\n                this.g[i] = new Array(n);\n                this.H[i] = new Array(n);\n                j = n;\n                while (j--) {\n                    this.H[i][j] = new Array(n);\n                }\n                this.Hd[i] = new Array(n);\n                this.a[i] = new Array(n);\n                this.b[i] = new Array(n);\n                this.c[i] = new Array(n);\n                this.d[i] = new Array(n);\n                this.e[i] = new Array(n);\n                this.ia[i] = new Array(n);\n                this.ib[i] = new Array(n);\n                this.xtmp[i] = new Array(n);\n            }\n        }\n        Descent.createSquareMatrix = function (n, f) {\n            var M = new Array(n);\n            for (var i = 0; i < n; ++i) {\n                M[i] = new Array(n);\n                for (var j = 0; j < n; ++j) {\n                    M[i][j] = f(i, j);\n                }\n            }\n            return M;\n        };\n        Descent.prototype.offsetDir = function () {\n            var _this = this;\n            var u = new Array(this.k);\n            var l = 0;\n            for (var i = 0; i < this.k; ++i) {\n                var x = u[i] = this.random.getNextBetween(0.01, 1) - 0.5;\n                l += x * x;\n            }\n            l = Math.sqrt(l);\n            return u.map(function (x) { return x *= _this.minD / l; });\n        };\n        // compute first and second derivative information storing results in this.g and this.H\n        Descent.prototype.computeDerivatives = function (x) {\n            var _this = this;\n            var n = this.n;\n            if (n < 1)\n                return;\n            var i;\n            /* DEBUG\n                        for (var u: number = 0; u < n; ++u)\n                            for (i = 0; i < this.k; ++i)\n                                if (isNaN(x[i][u])) debugger;\n            DEBUG */\n            var d = new Array(this.k);\n            var d2 = new Array(this.k);\n            var Huu = new Array(this.k);\n            var maxH = 0;\n            for (var u = 0; u < n; ++u) {\n                for (i = 0; i < this.k; ++i)\n                    Huu[i] = this.g[i][u] = 0;\n                for (var v = 0; v < n; ++v) {\n                    if (u === v)\n                        continue;\n                    // The following loop randomly displaces nodes that are at identical positions\n                    var maxDisplaces = n; // avoid infinite loop in the case of numerical issues, such as huge values\n                    while (maxDisplaces--) {\n                        var sd2 = 0;\n                        for (i = 0; i < this.k; ++i) {\n                            var dx = d[i] = x[i][u] - x[i][v];\n                            sd2 += d2[i] = dx * dx;\n                        }\n                        if (sd2 > 1e-9)\n                            break;\n                        var rd = this.offsetDir();\n                        for (i = 0; i < this.k; ++i)\n                            x[i][v] += rd[i];\n                    }\n                    var l = Math.sqrt(sd2);\n                    var D = this.D[u][v];\n                    var weight = this.G != null ? this.G[u][v] : 1;\n                    if (weight > 1 && l > D || !isFinite(D)) {\n                        for (i = 0; i < this.k; ++i)\n                            this.H[i][u][v] = 0;\n                        continue;\n                    }\n                    if (weight > 1) {\n                        weight = 1;\n                    }\n                    var D2 = D * D;\n                    var gs = 2 * weight * (l - D) / (D2 * l);\n                    var l3 = l * l * l;\n                    var hs = 2 * -weight / (D2 * l3);\n                    if (!isFinite(gs))\n                        console.log(gs);\n                    for (i = 0; i < this.k; ++i) {\n                        this.g[i][u] += d[i] * gs;\n                        Huu[i] -= this.H[i][u][v] = hs * (l3 + D * (d2[i] - sd2) + l * sd2);\n                    }\n                }\n                for (i = 0; i < this.k; ++i)\n                    maxH = Math.max(maxH, this.H[i][u][u] = Huu[i]);\n            }\n            // Grid snap forces\n            var r = this.snapGridSize / 2;\n            var g = this.snapGridSize;\n            var w = this.snapStrength;\n            var k = w / (r * r);\n            var numNodes = this.numGridSnapNodes;\n            //var numNodes = n;\n            for (var u = 0; u < numNodes; ++u) {\n                for (i = 0; i < this.k; ++i) {\n                    var xiu = this.x[i][u];\n                    var m = xiu / g;\n                    var f = m % 1;\n                    var q = m - f;\n                    var a = Math.abs(f);\n                    var dx = (a <= 0.5) ? xiu - q * g :\n                        (xiu > 0) ? xiu - (q + 1) * g : xiu - (q - 1) * g;\n                    if (-r < dx && dx <= r) {\n                        if (this.scaleSnapByMaxH) {\n                            this.g[i][u] += maxH * k * dx;\n                            this.H[i][u][u] += maxH * k;\n                        }\n                        else {\n                            this.g[i][u] += k * dx;\n                            this.H[i][u][u] += k;\n                        }\n                    }\n                }\n            }\n            if (!this.locks.isEmpty()) {\n                this.locks.apply(function (u, p) {\n                    for (i = 0; i < _this.k; ++i) {\n                        _this.H[i][u][u] += maxH;\n                        _this.g[i][u] -= maxH * (p[i] - x[i][u]);\n                    }\n                });\n            }\n            /* DEBUG\n                        for (var u: number = 0; u < n; ++u)\n                            for (i = 0; i < this.k; ++i) {\n                                if (isNaN(this.g[i][u])) debugger;\n                                for (var v: number = 0; v < n; ++v)\n                                    if (isNaN(this.H[i][u][v])) debugger;\n                            }\n            DEBUG */\n        };\n        Descent.dotProd = function (a, b) {\n            var x = 0, i = a.length;\n            while (i--)\n                x += a[i] * b[i];\n            return x;\n        };\n        // result r = matrix m * vector v\n        Descent.rightMultiply = function (m, v, r) {\n            var i = m.length;\n            while (i--)\n                r[i] = Descent.dotProd(m[i], v);\n        };\n        // computes the optimal step size to take in direction d using the\n        // derivative information in this.g and this.H\n        // returns the scalar multiplier to apply to d to get the optimal step\n        Descent.prototype.computeStepSize = function (d) {\n            var numerator = 0, denominator = 0;\n            for (var i = 0; i < this.k; ++i) {\n                numerator += Descent.dotProd(this.g[i], d[i]);\n                Descent.rightMultiply(this.H[i], d[i], this.Hd[i]);\n                denominator += Descent.dotProd(d[i], this.Hd[i]);\n            }\n            if (denominator === 0 || !isFinite(denominator))\n                return 0;\n            return 1 * numerator / denominator;\n        };\n        Descent.prototype.reduceStress = function () {\n            this.computeDerivatives(this.x);\n            var alpha = this.computeStepSize(this.g);\n            for (var i = 0; i < this.k; ++i) {\n                this.takeDescentStep(this.x[i], this.g[i], alpha);\n            }\n            return this.computeStress();\n        };\n        Descent.copy = function (a, b) {\n            var m = a.length, n = b[0].length;\n            for (var i = 0; i < m; ++i) {\n                for (var j = 0; j < n; ++j) {\n                    b[i][j] = a[i][j];\n                }\n            }\n        };\n        // takes a step of stepSize * d from x0, and then project against any constraints.\n        // result is returned in r.\n        // x0: starting positions\n        // r: result positions will be returned here\n        // d: unconstrained descent vector\n        // stepSize: amount to step along d\n        Descent.prototype.stepAndProject = function (x0, r, d, stepSize) {\n            Descent.copy(x0, r);\n            this.takeDescentStep(r[0], d[0], stepSize);\n            if (this.project)\n                this.project[0](x0[0], x0[1], r[0]);\n            this.takeDescentStep(r[1], d[1], stepSize);\n            if (this.project)\n                this.project[1](r[0], x0[1], r[1]);\n            // todo: allow projection against constraints in higher dimensions\n            for (var i = 2; i < this.k; i++)\n                this.takeDescentStep(r[i], d[i], stepSize);\n            // the following makes locks extra sticky... but hides the result of the projection from the consumer\n            //if (!this.locks.isEmpty()) {\n            //    this.locks.apply((u, p) => {\n            //        for (var i = 0; i < this.k; i++) {\n            //            r[i][u] = p[i];\n            //        }\n            //    });\n            //}\n        };\n        Descent.mApply = function (m, n, f) {\n            var i = m;\n            while (i-- > 0) {\n                var j = n;\n                while (j-- > 0)\n                    f(i, j);\n            }\n        };\n        Descent.prototype.matrixApply = function (f) {\n            Descent.mApply(this.k, this.n, f);\n        };\n        Descent.prototype.computeNextPosition = function (x0, r) {\n            var _this = this;\n            this.computeDerivatives(x0);\n            var alpha = this.computeStepSize(this.g);\n            this.stepAndProject(x0, r, this.g, alpha);\n            /* DEBUG\n                        for (var u: number = 0; u < this.n; ++u)\n                            for (var i = 0; i < this.k; ++i)\n                                if (isNaN(r[i][u])) debugger;\n            DEBUG */\n            if (this.project) {\n                this.matrixApply(function (i, j) { return _this.e[i][j] = x0[i][j] - r[i][j]; });\n                var beta = this.computeStepSize(this.e);\n                beta = Math.max(0.2, Math.min(beta, 1));\n                this.stepAndProject(x0, r, this.e, beta);\n            }\n        };\n        Descent.prototype.run = function (iterations) {\n            var stress = Number.MAX_VALUE, converged = false;\n            while (!converged && iterations-- > 0) {\n                var s = this.rungeKutta();\n                converged = Math.abs(stress / s - 1) < this.threshold;\n                stress = s;\n            }\n            return stress;\n        };\n        Descent.prototype.rungeKutta = function () {\n            var _this = this;\n            this.computeNextPosition(this.x, this.a);\n            Descent.mid(this.x, this.a, this.ia);\n            this.computeNextPosition(this.ia, this.b);\n            Descent.mid(this.x, this.b, this.ib);\n            this.computeNextPosition(this.ib, this.c);\n            this.computeNextPosition(this.c, this.d);\n            var disp = 0;\n            this.matrixApply(function (i, j) {\n                var x = (_this.a[i][j] + 2.0 * _this.b[i][j] + 2.0 * _this.c[i][j] + _this.d[i][j]) / 6.0, d = _this.x[i][j] - x;\n                disp += d * d;\n                _this.x[i][j] = x;\n            });\n            return disp;\n        };\n        Descent.mid = function (a, b, m) {\n            Descent.mApply(a.length, a[0].length, function (i, j) {\n                return m[i][j] = a[i][j] + (b[i][j] - a[i][j]) / 2.0;\n            });\n        };\n        Descent.prototype.takeDescentStep = function (x, d, stepSize) {\n            for (var i = 0; i < this.n; ++i) {\n                x[i] = x[i] - stepSize * d[i];\n            }\n        };\n        Descent.prototype.computeStress = function () {\n            var stress = 0;\n            for (var u = 0, nMinus1 = this.n - 1; u < nMinus1; ++u) {\n                for (var v = u + 1, n = this.n; v < n; ++v) {\n                    var l = 0;\n                    for (var i = 0; i < this.k; ++i) {\n                        var dx = this.x[i][u] - this.x[i][v];\n                        l += dx * dx;\n                    }\n                    l = Math.sqrt(l);\n                    var d = this.D[u][v];\n                    if (!isFinite(d))\n                        continue;\n                    var rl = d - l;\n                    var d2 = d * d;\n                    stress += rl * rl / d2;\n                }\n            }\n            return stress;\n        };\n        Descent.zeroDistance = 1e-10;\n        return Descent;\n    })();\n    cola.Descent = Descent;\n    // Linear congruential pseudo random number generator\n    var PseudoRandom = (function () {\n        function PseudoRandom(seed) {\n            if (seed === void 0) { seed = 1; }\n            this.seed = seed;\n            this.a = 214013;\n            this.c = 2531011;\n            this.m = 2147483648;\n            this.range = 32767;\n        }\n        // random real between 0 and 1\n        PseudoRandom.prototype.getNext = function () {\n            this.seed = (this.seed * this.a + this.c) % this.m;\n            return (this.seed >> 16) / this.range;\n        };\n        // random real between min and max\n        PseudoRandom.prototype.getNextBetween = function (min, max) {\n            return min + this.getNext() * (max - min);\n        };\n        return PseudoRandom;\n    })();\n    cola.PseudoRandom = PseudoRandom;\n})(cola || (cola = {}));\nvar cola = require('cytoscape-cola');;\n(function (cola) {\n    var powergraph;\n    (function (powergraph) {\n        var PowerEdge = (function () {\n            function PowerEdge(source, target, type) {\n                this.source = source;\n                this.target = target;\n                this.type = type;\n            }\n            return PowerEdge;\n        })();\n        powergraph.PowerEdge = PowerEdge;\n        var Configuration = (function () {\n            function Configuration(n, edges, linkAccessor, rootGroup) {\n                var _this = this;\n                this.linkAccessor = linkAccessor;\n                this.modules = new Array(n);\n                this.roots = [];\n                if (rootGroup) {\n                    this.initModulesFromGroup(rootGroup);\n                }\n                else {\n                    this.roots.push(new ModuleSet());\n                    for (var i = 0; i < n; ++i)\n                        this.roots[0].add(this.modules[i] = new Module(i));\n                }\n                this.R = edges.length;\n                edges.forEach(function (e) {\n                    var s = _this.modules[linkAccessor.getSourceIndex(e)], t = _this.modules[linkAccessor.getTargetIndex(e)], type = linkAccessor.getType(e);\n                    s.outgoing.add(type, t);\n                    t.incoming.add(type, s);\n                });\n            }\n            Configuration.prototype.initModulesFromGroup = function (group) {\n                var moduleSet = new ModuleSet();\n                this.roots.push(moduleSet);\n                for (var i = 0; i < group.leaves.length; ++i) {\n                    var node = group.leaves[i];\n                    var module = new Module(node.id);\n                    this.modules[node.id] = module;\n                    moduleSet.add(module);\n                }\n                if (group.groups) {\n                    for (var j = 0; j < group.groups.length; ++j) {\n                        var child = group.groups[j];\n                        // Propagate group properties (like padding, stiffness, ...) as module definition so that the generated power graph group will inherit it\n                        var definition = {};\n                        for (var prop in child)\n                            if (prop !== \"leaves\" && prop !== \"groups\" && child.hasOwnProperty(prop))\n                                definition[prop] = child[prop];\n                        // Use negative module id to avoid clashes between predefined and generated modules\n                        moduleSet.add(new Module(-1 - j, new LinkSets(), new LinkSets(), this.initModulesFromGroup(child), definition));\n                    }\n                }\n                return moduleSet;\n            };\n            // merge modules a and b keeping track of their power edges and removing the from roots\n            Configuration.prototype.merge = function (a, b, k) {\n                if (k === void 0) { k = 0; }\n                var inInt = a.incoming.intersection(b.incoming), outInt = a.outgoing.intersection(b.outgoing);\n                var children = new ModuleSet();\n                children.add(a);\n                children.add(b);\n                var m = new Module(this.modules.length, outInt, inInt, children);\n                this.modules.push(m);\n                var update = function (s, i, o) {\n                    s.forAll(function (ms, linktype) {\n                        ms.forAll(function (n) {\n                            var nls = n[i];\n                            nls.add(linktype, m);\n                            nls.remove(linktype, a);\n                            nls.remove(linktype, b);\n                            a[o].remove(linktype, n);\n                            b[o].remove(linktype, n);\n                        });\n                    });\n                };\n                update(outInt, \"incoming\", \"outgoing\");\n                update(inInt, \"outgoing\", \"incoming\");\n                this.R -= inInt.count() + outInt.count();\n                this.roots[k].remove(a);\n                this.roots[k].remove(b);\n                this.roots[k].add(m);\n                return m;\n            };\n            Configuration.prototype.rootMerges = function (k) {\n                if (k === void 0) { k = 0; }\n                var rs = this.roots[k].modules();\n                var n = rs.length;\n                var merges = new Array(n * (n - 1));\n                var ctr = 0;\n                for (var i = 0, i_ = n - 1; i < i_; ++i) {\n                    for (var j = i + 1; j < n; ++j) {\n                        var a = rs[i], b = rs[j];\n                        merges[ctr] = { id: ctr, nEdges: this.nEdges(a, b), a: a, b: b };\n                        ctr++;\n                    }\n                }\n                return merges;\n            };\n            Configuration.prototype.greedyMerge = function () {\n                for (var i = 0; i < this.roots.length; ++i) {\n                    // Handle single nested module case\n                    if (this.roots[i].modules().length < 2)\n                        continue;\n                    // find the merge that allows for the most edges to be removed.  secondary ordering based on arbitrary id (for predictability)\n                    var ms = this.rootMerges(i).sort(function (a, b) { return a.nEdges == b.nEdges ? a.id - b.id : a.nEdges - b.nEdges; });\n                    var m = ms[0];\n                    if (m.nEdges >= this.R)\n                        continue;\n                    this.merge(m.a, m.b, i);\n                    return true;\n                }\n            };\n            Configuration.prototype.nEdges = function (a, b) {\n                var inInt = a.incoming.intersection(b.incoming), outInt = a.outgoing.intersection(b.outgoing);\n                return this.R - inInt.count() - outInt.count();\n            };\n            Configuration.prototype.getGroupHierarchy = function (retargetedEdges) {\n                var _this = this;\n                var groups = [];\n                var root = {};\n                toGroups(this.roots[0], root, groups);\n                var es = this.allEdges();\n                es.forEach(function (e) {\n                    var a = _this.modules[e.source];\n                    var b = _this.modules[e.target];\n                    retargetedEdges.push(new PowerEdge(typeof a.gid === \"undefined\" ? e.source : groups[a.gid], typeof b.gid === \"undefined\" ? e.target : groups[b.gid], e.type));\n                });\n                return groups;\n            };\n            Configuration.prototype.allEdges = function () {\n                var es = [];\n                Configuration.getEdges(this.roots[0], es);\n                return es;\n            };\n            Configuration.getEdges = function (modules, es) {\n                modules.forAll(function (m) {\n                    m.getEdges(es);\n                    Configuration.getEdges(m.children, es);\n                });\n            };\n            return Configuration;\n        })();\n        powergraph.Configuration = Configuration;\n        function toGroups(modules, group, groups) {\n            modules.forAll(function (m) {\n                if (m.isLeaf()) {\n                    if (!group.leaves)\n                        group.leaves = [];\n                    group.leaves.push(m.id);\n                }\n                else {\n                    var g = group;\n                    m.gid = groups.length;\n                    if (!m.isIsland() || m.isPredefined()) {\n                        g = { id: m.gid };\n                        if (m.isPredefined())\n                            // Apply original group properties\n                            for (var prop in m.definition)\n                                g[prop] = m.definition[prop];\n                        if (!group.groups)\n                            group.groups = [];\n                        group.groups.push(m.gid);\n                        groups.push(g);\n                    }\n                    toGroups(m.children, g, groups);\n                }\n            });\n        }\n        var Module = (function () {\n            function Module(id, outgoing, incoming, children, definition) {\n                if (outgoing === void 0) { outgoing = new LinkSets(); }\n                if (incoming === void 0) { incoming = new LinkSets(); }\n                if (children === void 0) { children = new ModuleSet(); }\n                this.id = id;\n                this.outgoing = outgoing;\n                this.incoming = incoming;\n                this.children = children;\n                this.definition = definition;\n            }\n            Module.prototype.getEdges = function (es) {\n                var _this = this;\n                this.outgoing.forAll(function (ms, edgetype) {\n                    ms.forAll(function (target) {\n                        es.push(new PowerEdge(_this.id, target.id, edgetype));\n                    });\n                });\n            };\n            Module.prototype.isLeaf = function () {\n                return this.children.count() === 0;\n            };\n            Module.prototype.isIsland = function () {\n                return this.outgoing.count() === 0 && this.incoming.count() === 0;\n            };\n            Module.prototype.isPredefined = function () {\n                return typeof this.definition !== \"undefined\";\n            };\n            return Module;\n        })();\n        powergraph.Module = Module;\n        function intersection(m, n) {\n            var i = {};\n            for (var v in m)\n                if (v in n)\n                    i[v] = m[v];\n            return i;\n        }\n        var ModuleSet = (function () {\n            function ModuleSet() {\n                this.table = {};\n            }\n            ModuleSet.prototype.count = function () {\n                return Object.keys(this.table).length;\n            };\n            ModuleSet.prototype.intersection = function (other) {\n                var result = new ModuleSet();\n                result.table = intersection(this.table, other.table);\n                return result;\n            };\n            ModuleSet.prototype.intersectionCount = function (other) {\n                return this.intersection(other).count();\n            };\n            ModuleSet.prototype.contains = function (id) {\n                return id in this.table;\n            };\n            ModuleSet.prototype.add = function (m) {\n                this.table[m.id] = m;\n            };\n            ModuleSet.prototype.remove = function (m) {\n                delete this.table[m.id];\n            };\n            ModuleSet.prototype.forAll = function (f) {\n                for (var mid in this.table) {\n                    f(this.table[mid]);\n                }\n            };\n            ModuleSet.prototype.modules = function () {\n                var vs = [];\n                this.forAll(function (m) {\n                    if (!m.isPredefined())\n                        vs.push(m);\n                });\n                return vs;\n            };\n            return ModuleSet;\n        })();\n        powergraph.ModuleSet = ModuleSet;\n        var LinkSets = (function () {\n            function LinkSets() {\n                this.sets = {};\n                this.n = 0;\n            }\n            LinkSets.prototype.count = function () {\n                return this.n;\n            };\n            LinkSets.prototype.contains = function (id) {\n                var result = false;\n                this.forAllModules(function (m) {\n                    if (!result && m.id == id) {\n                        result = true;\n                    }\n                });\n                return result;\n            };\n            LinkSets.prototype.add = function (linktype, m) {\n                var s = linktype in this.sets ? this.sets[linktype] : this.sets[linktype] = new ModuleSet();\n                s.add(m);\n                ++this.n;\n            };\n            LinkSets.prototype.remove = function (linktype, m) {\n                var ms = this.sets[linktype];\n                ms.remove(m);\n                if (ms.count() === 0) {\n                    delete this.sets[linktype];\n                }\n                --this.n;\n            };\n            LinkSets.prototype.forAll = function (f) {\n                for (var linktype in this.sets) {\n                    f(this.sets[linktype], linktype);\n                }\n            };\n            LinkSets.prototype.forAllModules = function (f) {\n                this.forAll(function (ms, lt) { return ms.forAll(f); });\n            };\n            LinkSets.prototype.intersection = function (other) {\n                var result = new LinkSets();\n                this.forAll(function (ms, lt) {\n                    if (lt in other.sets) {\n                        var i = ms.intersection(other.sets[lt]), n = i.count();\n                        if (n > 0) {\n                            result.sets[lt] = i;\n                            result.n += n;\n                        }\n                    }\n                });\n                return result;\n            };\n            return LinkSets;\n        })();\n        powergraph.LinkSets = LinkSets;\n        function intersectionCount(m, n) {\n            return Object.keys(intersection(m, n)).length;\n        }\n        function getGroups(nodes, links, la, rootGroup) {\n            var n = nodes.length, c = new powergraph.Configuration(n, links, la, rootGroup);\n            while (c.greedyMerge())\n                ;\n            var powerEdges = [];\n            var g = c.getGroupHierarchy(powerEdges);\n            powerEdges.forEach(function (e) {\n                var f = function (end) {\n                    var g = e[end];\n                    if (typeof g == \"number\")\n                        e[end] = nodes[g];\n                };\n                f(\"source\");\n                f(\"target\");\n            });\n            return { groups: g, powerEdges: powerEdges };\n        }\n        powergraph.getGroups = getGroups;\n    })(powergraph = cola.powergraph || (cola.powergraph = {}));\n})(cola || (cola = {}));\n/**\n * @module cola\n */\nvar cola = require('cytoscape-cola');;\n(function (cola) {\n    // compute the size of the union of two sets a and b\n    function unionCount(a, b) {\n        var u = {};\n        for (var i in a)\n            u[i] = {};\n        for (var i in b)\n            u[i] = {};\n        return Object.keys(u).length;\n    }\n    // compute the size of the intersection of two sets a and b\n    function intersectionCount(a, b) {\n        var n = 0;\n        for (var i in a)\n            if (typeof b[i] !== 'undefined')\n                ++n;\n        return n;\n    }\n    function getNeighbours(links, la) {\n        var neighbours = {};\n        var addNeighbours = function (u, v) {\n            if (typeof neighbours[u] === 'undefined')\n                neighbours[u] = {};\n            neighbours[u][v] = {};\n        };\n        links.forEach(function (e) {\n            var u = la.getSourceIndex(e), v = la.getTargetIndex(e);\n            addNeighbours(u, v);\n            addNeighbours(v, u);\n        });\n        return neighbours;\n    }\n    // modify the lengths of the specified links by the result of function f weighted by w\n    function computeLinkLengths(links, w, f, la) {\n        var neighbours = getNeighbours(links, la);\n        links.forEach(function (l) {\n            var a = neighbours[la.getSourceIndex(l)];\n            var b = neighbours[la.getTargetIndex(l)];\n            la.setLength(l, 1 + w * f(a, b));\n        });\n    }\n    /** modify the specified link lengths based on the symmetric difference of their neighbours\n     * @class symmetricDiffLinkLengths\n     */\n    function symmetricDiffLinkLengths(links, la, w) {\n        if (w === void 0) { w = 1; }\n        computeLinkLengths(links, w, function (a, b) { return Math.sqrt(unionCount(a, b) - intersectionCount(a, b)); }, la);\n    }\n    cola.symmetricDiffLinkLengths = symmetricDiffLinkLengths;\n    /** modify the specified links lengths based on the jaccard difference between their neighbours\n     * @class jaccardLinkLengths\n     */\n    function jaccardLinkLengths(links, la, w) {\n        if (w === void 0) { w = 1; }\n        computeLinkLengths(links, w, function (a, b) {\n            return Math.min(Object.keys(a).length, Object.keys(b).length) < 1.1 ? 0 : intersectionCount(a, b) / unionCount(a, b);\n        }, la);\n    }\n    cola.jaccardLinkLengths = jaccardLinkLengths;\n    /** generate separation constraints for all edges unless both their source and sink are in the same strongly connected component\n     * @class generateDirectedEdgeConstraints\n     */\n    function generateDirectedEdgeConstraints(n, links, axis, la) {\n        var components = stronglyConnectedComponents(n, links, la);\n        var nodes = {};\n        components.forEach(function (c, i) {\n            return c.forEach(function (v) { return nodes[v] = i; });\n        });\n        var constraints = [];\n        links.forEach(function (l) {\n            var ui = la.getSourceIndex(l), vi = la.getTargetIndex(l), u = nodes[ui], v = nodes[vi];\n            if (u !== v) {\n                constraints.push({\n                    axis: axis,\n                    left: ui,\n                    right: vi,\n                    gap: la.getMinSeparation(l)\n                });\n            }\n        });\n        return constraints;\n    }\n    cola.generateDirectedEdgeConstraints = generateDirectedEdgeConstraints;\n    /**\n     * Tarjan's strongly connected components algorithm for directed graphs\n     * returns an array of arrays of node indicies in each of the strongly connected components.\n     * a vertex not in a SCC of two or more nodes is it's own SCC.\n     * adaptation of https://en.wikipedia.org/wiki/Tarjan%27s_strongly_connected_components_algorithm\n     */\n    function stronglyConnectedComponents(numVertices, edges, la) {\n        var nodes = [];\n        var index = 0;\n        var stack = [];\n        var components = [];\n        function strongConnect(v) {\n            // Set the depth index for v to the smallest unused index\n            v.index = v.lowlink = index++;\n            stack.push(v);\n            v.onStack = true;\n            // Consider successors of v\n            for (var _i = 0, _a = v.out; _i < _a.length; _i++) {\n                var w = _a[_i];\n                if (typeof w.index === 'undefined') {\n                    // Successor w has not yet been visited; recurse on it\n                    strongConnect(w);\n                    v.lowlink = Math.min(v.lowlink, w.lowlink);\n                }\n                else if (w.onStack) {\n                    // Successor w is in stack S and hence in the current SCC\n                    v.lowlink = Math.min(v.lowlink, w.index);\n                }\n            }\n            // If v is a root node, pop the stack and generate an SCC\n            if (v.lowlink === v.index) {\n                // start a new strongly connected component\n                var component = [];\n                while (stack.length) {\n                    w = stack.pop();\n                    w.onStack = false;\n                    //add w to current strongly connected component\n                    component.push(w);\n                    if (w === v)\n                        break;\n                }\n                // output the current strongly connected component\n                components.push(component.map(function (v) { return v.id; }));\n            }\n        }\n        for (var i = 0; i < numVertices; i++) {\n            nodes.push({ id: i, out: [] });\n        }\n        for (var _i = 0; _i < edges.length; _i++) {\n            var e = edges[_i];\n            var v_1 = nodes[la.getSourceIndex(e)], w = nodes[la.getTargetIndex(e)];\n            v_1.out.push(w);\n        }\n        for (var _a = 0; _a < nodes.length; _a++) {\n            var v = nodes[_a];\n            if (typeof v.index === 'undefined')\n                strongConnect(v);\n        }\n        return components;\n    }\n    cola.stronglyConnectedComponents = stronglyConnectedComponents;\n})(cola || (cola = {}));\nvar PairingHeap = (function () {\n    // from: https://gist.github.com/nervoussystem\n    //{elem:object, subheaps:[array of heaps]}\n    function PairingHeap(elem) {\n        this.elem = elem;\n        this.subheaps = [];\n    }\n    PairingHeap.prototype.toString = function (selector) {\n        var str = \"\", needComma = false;\n        for (var i = 0; i < this.subheaps.length; ++i) {\n            var subheap = this.subheaps[i];\n            if (!subheap.elem) {\n                needComma = false;\n                continue;\n            }\n            if (needComma) {\n                str = str + \",\";\n            }\n            str = str + subheap.toString(selector);\n            needComma = true;\n        }\n        if (str !== \"\") {\n            str = \"(\" + str + \")\";\n        }\n        return (this.elem ? selector(this.elem) : \"\") + str;\n    };\n    PairingHeap.prototype.forEach = function (f) {\n        if (!this.empty()) {\n            f(this.elem, this);\n            this.subheaps.forEach(function (s) { return s.forEach(f); });\n        }\n    };\n    PairingHeap.prototype.count = function () {\n        return this.empty() ? 0 : 1 + this.subheaps.reduce(function (n, h) {\n            return n + h.count();\n        }, 0);\n    };\n    PairingHeap.prototype.min = function () {\n        return this.elem;\n    };\n    PairingHeap.prototype.empty = function () {\n        return this.elem == null;\n    };\n    PairingHeap.prototype.contains = function (h) {\n        if (this === h)\n            return true;\n        for (var i = 0; i < this.subheaps.length; i++) {\n            if (this.subheaps[i].contains(h))\n                return true;\n        }\n        return false;\n    };\n    PairingHeap.prototype.isHeap = function (lessThan) {\n        var _this = this;\n        return this.subheaps.every(function (h) { return lessThan(_this.elem, h.elem) && h.isHeap(lessThan); });\n    };\n    PairingHeap.prototype.insert = function (obj, lessThan) {\n        return this.merge(new PairingHeap(obj), lessThan);\n    };\n    PairingHeap.prototype.merge = function (heap2, lessThan) {\n        if (this.empty())\n            return heap2;\n        else if (heap2.empty())\n            return this;\n        else if (lessThan(this.elem, heap2.elem)) {\n            this.subheaps.push(heap2);\n            return this;\n        }\n        else {\n            heap2.subheaps.push(this);\n            return heap2;\n        }\n    };\n    PairingHeap.prototype.removeMin = function (lessThan) {\n        if (this.empty())\n            return null;\n        else\n            return this.mergePairs(lessThan);\n    };\n    PairingHeap.prototype.mergePairs = function (lessThan) {\n        if (this.subheaps.length == 0)\n            return new PairingHeap(null);\n        else if (this.subheaps.length == 1) {\n            return this.subheaps[0];\n        }\n        else {\n            var firstPair = this.subheaps.pop().merge(this.subheaps.pop(), lessThan);\n            var remaining = this.mergePairs(lessThan);\n            return firstPair.merge(remaining, lessThan);\n        }\n    };\n    PairingHeap.prototype.decreaseKey = function (subheap, newValue, setHeapNode, lessThan) {\n        var newHeap = subheap.removeMin(lessThan);\n        //reassign subheap values to preserve tree\n        subheap.elem = newHeap.elem;\n        subheap.subheaps = newHeap.subheaps;\n        if (setHeapNode !== null && newHeap.elem !== null) {\n            setHeapNode(subheap.elem, subheap);\n        }\n        var pairingNode = new PairingHeap(newValue);\n        if (setHeapNode !== null) {\n            setHeapNode(newValue, pairingNode);\n        }\n        return this.merge(pairingNode, lessThan);\n    };\n    return PairingHeap;\n})();\n/**\n * @class PriorityQueue a min priority queue backed by a pairing heap\n */\nvar PriorityQueue = (function () {\n    function PriorityQueue(lessThan) {\n        this.lessThan = lessThan;\n    }\n    /**\n     * @method top\n     * @return the top element (the min element as defined by lessThan)\n     */\n    PriorityQueue.prototype.top = function () {\n        if (this.empty()) {\n            return null;\n        }\n        return this.root.elem;\n    };\n    /**\n     * @method push\n     * put things on the heap\n     */\n    PriorityQueue.prototype.push = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i - 0] = arguments[_i];\n        }\n        var pairingNode;\n        for (var i = 0, arg; arg = args[i]; ++i) {\n            pairingNode = new PairingHeap(arg);\n            this.root = this.empty() ?\n                pairingNode : this.root.merge(pairingNode, this.lessThan);\n        }\n        return pairingNode;\n    };\n    /**\n     * @method empty\n     * @return true if no more elements in queue\n     */\n    PriorityQueue.prototype.empty = function () {\n        return !this.root || !this.root.elem;\n    };\n    /**\n     * @method isHeap check heap condition (for testing)\n     * @return true if queue is in valid state\n     */\n    PriorityQueue.prototype.isHeap = function () {\n        return this.root.isHeap(this.lessThan);\n    };\n    /**\n     * @method forEach apply f to each element of the queue\n     * @param f function to apply\n     */\n    PriorityQueue.prototype.forEach = function (f) {\n        this.root.forEach(f);\n    };\n    /**\n     * @method pop remove and return the min element from the queue\n     */\n    PriorityQueue.prototype.pop = function () {\n        if (this.empty()) {\n            return null;\n        }\n        var obj = this.root.min();\n        this.root = this.root.removeMin(this.lessThan);\n        return obj;\n    };\n    /**\n     * @method reduceKey reduce the key value of the specified heap node\n     */\n    PriorityQueue.prototype.reduceKey = function (heapNode, newKey, setHeapNode) {\n        if (setHeapNode === void 0) { setHeapNode = null; }\n        this.root = this.root.decreaseKey(heapNode, newKey, setHeapNode, this.lessThan);\n    };\n    PriorityQueue.prototype.toString = function (selector) {\n        return this.root.toString(selector);\n    };\n    /**\n     * @method count\n     * @return number of elements in queue\n     */\n    PriorityQueue.prototype.count = function () {\n        return this.root.count();\n    };\n    return PriorityQueue;\n})();\n///<reference path=\"pqueue.ts\"/>\n/**\n * @module shortestpaths\n */\nvar cola = require('cytoscape-cola');;\n(function (cola) {\n    var shortestpaths;\n    (function (shortestpaths) {\n        var Neighbour = (function () {\n            function Neighbour(id, distance) {\n                this.id = id;\n                this.distance = distance;\n            }\n            return Neighbour;\n        })();\n        var Node = (function () {\n            function Node(id) {\n                this.id = id;\n                this.neighbours = [];\n            }\n            return Node;\n        })();\n        var QueueEntry = (function () {\n            function QueueEntry(node, prev, d) {\n                this.node = node;\n                this.prev = prev;\n                this.d = d;\n            }\n            return QueueEntry;\n        })();\n        /**\n         * calculates all-pairs shortest paths or shortest paths from a single node\n         * @class Calculator\n         * @constructor\n         * @param n {number} number of nodes\n         * @param es {Edge[]} array of edges\n         */\n        var Calculator = (function () {\n            function Calculator(n, es, getSourceIndex, getTargetIndex, getLength) {\n                this.n = n;\n                this.es = es;\n                this.neighbours = new Array(this.n);\n                var i = this.n;\n                while (i--)\n                    this.neighbours[i] = new Node(i);\n                i = this.es.length;\n                while (i--) {\n                    var e = this.es[i];\n                    var u = getSourceIndex(e), v = getTargetIndex(e);\n                    var d = getLength(e);\n                    this.neighbours[u].neighbours.push(new Neighbour(v, d));\n                    this.neighbours[v].neighbours.push(new Neighbour(u, d));\n                }\n            }\n            /**\n             * compute shortest paths for graph over n nodes with edges an array of source/target pairs\n             * edges may optionally have a length attribute.  1 is the default.\n             * Uses Johnson's algorithm.\n             *\n             * @method DistanceMatrix\n             * @return the distance matrix\n             */\n            Calculator.prototype.DistanceMatrix = function () {\n                var D = new Array(this.n);\n                for (var i = 0; i < this.n; ++i) {\n                    D[i] = this.dijkstraNeighbours(i);\n                }\n                return D;\n            };\n            /**\n             * get shortest paths from a specified start node\n             * @method DistancesFromNode\n             * @param start node index\n             * @return array of path lengths\n             */\n            Calculator.prototype.DistancesFromNode = function (start) {\n                return this.dijkstraNeighbours(start);\n            };\n            Calculator.prototype.PathFromNodeToNode = function (start, end) {\n                return this.dijkstraNeighbours(start, end);\n            };\n            // find shortest path from start to end, with the opportunity at\n            // each edge traversal to compute a custom cost based on the\n            // previous edge.  For example, to penalise bends.\n            Calculator.prototype.PathFromNodeToNodeWithPrevCost = function (start, end, prevCost) {\n                var q = new PriorityQueue(function (a, b) { return a.d <= b.d; }), u = this.neighbours[start], qu = new QueueEntry(u, null, 0), visitedFrom = {};\n                q.push(qu);\n                while (!q.empty()) {\n                    qu = q.pop();\n                    u = qu.node;\n                    if (u.id === end) {\n                        break;\n                    }\n                    var i = u.neighbours.length;\n                    while (i--) {\n                        var neighbour = u.neighbours[i], v = this.neighbours[neighbour.id];\n                        // don't double back\n                        if (qu.prev && v.id === qu.prev.node.id)\n                            continue;\n                        // don't retraverse an edge if it has already been explored\n                        // from a lower cost route\n                        var viduid = v.id + ',' + u.id;\n                        if (viduid in visitedFrom && visitedFrom[viduid] <= qu.d)\n                            continue;\n                        var cc = qu.prev ? prevCost(qu.prev.node.id, u.id, v.id) : 0, t = qu.d + neighbour.distance + cc;\n                        // store cost of this traversal\n                        visitedFrom[viduid] = t;\n                        q.push(new QueueEntry(v, qu, t));\n                    }\n                }\n                var path = [];\n                while (qu.prev) {\n                    qu = qu.prev;\n                    path.push(qu.node.id);\n                }\n                return path;\n            };\n            Calculator.prototype.dijkstraNeighbours = function (start, dest) {\n                if (dest === void 0) { dest = -1; }\n                var q = new PriorityQueue(function (a, b) { return a.d <= b.d; }), i = this.neighbours.length, d = new Array(i);\n                while (i--) {\n                    var node = this.neighbours[i];\n                    node.d = i === start ? 0 : Number.POSITIVE_INFINITY;\n                    node.q = q.push(node);\n                }\n                while (!q.empty()) {\n                    // console.log(q.toString(function (u) { return u.id + \"=\" + (u.d === Number.POSITIVE_INFINITY ? \"\\u221E\" : u.d.toFixed(2) )}));\n                    var u = q.pop();\n                    d[u.id] = u.d;\n                    if (u.id === dest) {\n                        var path = [];\n                        var v = u;\n                        while (typeof v.prev !== 'undefined') {\n                            path.push(v.prev.id);\n                            v = v.prev;\n                        }\n                        return path;\n                    }\n                    i = u.neighbours.length;\n                    while (i--) {\n                        var neighbour = u.neighbours[i];\n                        var v = this.neighbours[neighbour.id];\n                        var t = u.d + neighbour.distance;\n                        if (u.d !== Number.MAX_VALUE && v.d > t) {\n                            v.d = t;\n                            v.prev = u;\n                            q.reduceKey(v.q, v, function (e, q) { return e.q = q; });\n                        }\n                    }\n                }\n                return d;\n            };\n            return Calculator;\n        })();\n        shortestpaths.Calculator = Calculator;\n    })(shortestpaths = cola.shortestpaths || (cola.shortestpaths = {}));\n})(cola || (cola = {}));\n///<reference path=\"handledisconnected.ts\"/>\n///<reference path=\"geom.ts\"/>\n///<reference path=\"descent.ts\"/>\n///<reference path=\"powergraph.ts\"/>\n///<reference path=\"linklengths.ts\"/>\n///<reference path=\"shortestpaths.ts\"/>\n/**\n * @module cola\n */\nvar cola = require('cytoscape-cola');;\n(function (cola) {\n    /**\n     * The layout process fires three events:\n     *  - start: layout iterations started\n     *  - tick: fired once per iteration, listen to this to animate\n     *  - end: layout converged, you might like to zoom-to-fit or something at notification of this event\n     */\n    (function (EventType) {\n        EventType[EventType[\"start\"] = 0] = \"start\";\n        EventType[EventType[\"tick\"] = 1] = \"tick\";\n        EventType[EventType[\"end\"] = 2] = \"end\";\n    })(cola.EventType || (cola.EventType = {}));\n    var EventType = cola.EventType;\n    ;\n    function isGroup(g) {\n        return typeof g.leaves !== 'undefined' || typeof g.groups !== 'undefined';\n    }\n    /**\n     * Main interface to cola layout.\n     * @class Layout\n     */\n    var Layout = (function () {\n        function Layout() {\n            var _this = this;\n            this._canvasSize = [1, 1];\n            this._linkDistance = 20;\n            this._defaultNodeSize = 10;\n            this._linkLengthCalculator = null;\n            this._linkType = null;\n            this._avoidOverlaps = false;\n            this._handleDisconnected = true;\n            this._running = false;\n            this._nodes = [];\n            this._groups = [];\n            this._rootGroup = null;\n            this._links = [];\n            this._constraints = [];\n            this._distanceMatrix = null;\n            this._descent = null;\n            this._directedLinkConstraints = null;\n            this._threshold = 0.01;\n            this._visibilityGraph = null;\n            this._groupCompactness = 1e-6;\n            // sub-class and override this property to replace with a more sophisticated eventing mechanism\n            this.event = null;\n            this.linkAccessor = {\n                getSourceIndex: Layout.getSourceIndex,\n                getTargetIndex: Layout.getTargetIndex,\n                setLength: Layout.setLinkLength,\n                getType: function (l) { return typeof _this._linkType === \"function\" ? _this._linkType(l) : 0; }\n            };\n        }\n        // subscribe a listener to an event\n        // sub-class and override this method to replace with a more sophisticated eventing mechanism\n        Layout.prototype.on = function (e, listener) {\n            // override me!\n            if (!this.event)\n                this.event = {};\n            if (typeof e === 'string') {\n                this.event[EventType[e]] = listener;\n            }\n            else {\n                this.event[e] = listener;\n            }\n            return this;\n        };\n        // a function that is notified of events like \"tick\"\n        // sub-class and override this method to replace with a more sophisticated eventing mechanism\n        Layout.prototype.trigger = function (e) {\n            if (this.event && typeof this.event[e.type] !== 'undefined') {\n                this.event[e.type](e);\n            }\n        };\n        // a function that kicks off the iteration tick loop\n        // it calls tick() repeatedly until tick returns true (is converged)\n        // subclass and override it with something fancier (e.g. dispatch tick on a timer)\n        Layout.prototype.kick = function () {\n            while (!this.tick())\n                ;\n        };\n        /**\n         * iterate the layout.  Returns true when layout converged.\n         */\n        Layout.prototype.tick = function () {\n            if (this._alpha < this._threshold) {\n                this._running = false;\n                this.trigger({ type: EventType.end, alpha: this._alpha = 0, stress: this._lastStress });\n                return true;\n            }\n            var n = this._nodes.length, m = this._links.length;\n            var o, i;\n            this._descent.locks.clear();\n            for (i = 0; i < n; ++i) {\n                o = this._nodes[i];\n                if (o.fixed) {\n                    if (typeof o.px === 'undefined' || typeof o.py === 'undefined') {\n                        o.px = o.x;\n                        o.py = o.y;\n                    }\n                    var p = [o.px, o.py];\n                    this._descent.locks.add(i, p);\n                }\n            }\n            var s1 = this._descent.rungeKutta();\n            //var s1 = descent.reduceStress();\n            if (s1 === 0) {\n                this._alpha = 0;\n            }\n            else if (typeof this._lastStress !== 'undefined') {\n                this._alpha = s1; //Math.abs(Math.abs(this._lastStress / s1) - 1);\n            }\n            this._lastStress = s1;\n            this.updateNodePositions();\n            this.trigger({ type: EventType.tick, alpha: this._alpha, stress: this._lastStress });\n            return false;\n        };\n        // copy positions out of descent instance into each of the nodes' center coords\n        Layout.prototype.updateNodePositions = function () {\n            var x = this._descent.x[0], y = this._descent.x[1];\n            var o, i = this._nodes.length;\n            while (i--) {\n                o = this._nodes[i];\n                o.x = x[i];\n                o.y = y[i];\n            }\n        };\n        Layout.prototype.nodes = function (v) {\n            if (!v) {\n                if (this._nodes.length === 0 && this._links.length > 0) {\n                    // if we have links but no nodes, create the nodes array now with empty objects for the links to point at.\n                    // in this case the links are expected to be numeric indices for nodes in the range 0..n-1 where n is the number of nodes\n                    var n = 0;\n                    this._links.forEach(function (l) {\n                        n = Math.max(n, l.source, l.target);\n                    });\n                    this._nodes = new Array(++n);\n                    for (var i = 0; i < n; ++i) {\n                        this._nodes[i] = {};\n                    }\n                }\n                return this._nodes;\n            }\n            this._nodes = v;\n            return this;\n        };\n        Layout.prototype.groups = function (x) {\n            var _this = this;\n            if (!x)\n                return this._groups;\n            this._groups = x;\n            this._rootGroup = {};\n            this._groups.forEach(function (g) {\n                if (typeof g.padding === \"undefined\")\n                    g.padding = 1;\n                if (typeof g.leaves !== \"undefined\") {\n                    g.leaves.forEach(function (v, i) {\n                        if (typeof v === 'number')\n                            (g.leaves[i] = _this._nodes[v]).parent = g;\n                    });\n                }\n                if (typeof g.groups !== \"undefined\") {\n                    g.groups.forEach(function (gi, i) {\n                        if (typeof gi === 'number')\n                            (g.groups[i] = _this._groups[gi]).parent = g;\n                    });\n                }\n            });\n            this._rootGroup.leaves = this._nodes.filter(function (v) { return typeof v.parent === 'undefined'; });\n            this._rootGroup.groups = this._groups.filter(function (g) { return typeof g.parent === 'undefined'; });\n            return this;\n        };\n        Layout.prototype.powerGraphGroups = function (f) {\n            var g = cola.powergraph.getGroups(this._nodes, this._links, this.linkAccessor, this._rootGroup);\n            this.groups(g.groups);\n            f(g);\n            return this;\n        };\n        Layout.prototype.avoidOverlaps = function (v) {\n            if (!arguments.length)\n                return this._avoidOverlaps;\n            this._avoidOverlaps = v;\n            return this;\n        };\n        Layout.prototype.handleDisconnected = function (v) {\n            if (!arguments.length)\n                return this._handleDisconnected;\n            this._handleDisconnected = v;\n            return this;\n        };\n        /**\n         * causes constraints to be generated such that directed graphs are laid out either from left-to-right or top-to-bottom.\n         * a separation constraint is generated in the selected axis for each edge that is not involved in a cycle (part of a strongly connected component)\n         * @param axis {string} 'x' for left-to-right, 'y' for top-to-bottom\n         * @param minSeparation {number|link=>number} either a number specifying a minimum spacing required across all links or a function to return the minimum spacing for each link\n         */\n        Layout.prototype.flowLayout = function (axis, minSeparation) {\n            if (!arguments.length)\n                axis = 'y';\n            this._directedLinkConstraints = {\n                axis: axis,\n                getMinSeparation: typeof minSeparation === 'number' ? function () { return minSeparation; } : minSeparation\n            };\n            return this;\n        };\n        Layout.prototype.links = function (x) {\n            if (!arguments.length)\n                return this._links;\n            this._links = x;\n            return this;\n        };\n        Layout.prototype.constraints = function (c) {\n            if (!arguments.length)\n                return this._constraints;\n            this._constraints = c;\n            return this;\n        };\n        Layout.prototype.distanceMatrix = function (d) {\n            if (!arguments.length)\n                return this._distanceMatrix;\n            this._distanceMatrix = d;\n            return this;\n        };\n        Layout.prototype.size = function (x) {\n            if (!x)\n                return this._canvasSize;\n            this._canvasSize = x;\n            return this;\n        };\n        Layout.prototype.defaultNodeSize = function (x) {\n            if (!x)\n                return this._defaultNodeSize;\n            this._defaultNodeSize = x;\n            return this;\n        };\n        Layout.prototype.groupCompactness = function (x) {\n            if (!x)\n                return this._groupCompactness;\n            this._groupCompactness = x;\n            return this;\n        };\n        Layout.prototype.linkDistance = function (x) {\n            if (!x) {\n                return this._linkDistance;\n            }\n            this._linkDistance = typeof x === \"function\" ? x : +x;\n            this._linkLengthCalculator = null;\n            return this;\n        };\n        Layout.prototype.linkType = function (f) {\n            this._linkType = f;\n            return this;\n        };\n        Layout.prototype.convergenceThreshold = function (x) {\n            if (!x)\n                return this._threshold;\n            this._threshold = typeof x === \"function\" ? x : +x;\n            return this;\n        };\n        Layout.prototype.alpha = function (x) {\n            if (!arguments.length)\n                return this._alpha;\n            else {\n                x = +x;\n                if (this._alpha) {\n                    if (x > 0)\n                        this._alpha = x; // we might keep it hot\n                    else\n                        this._alpha = 0; // or, next tick will dispatch \"end\"\n                }\n                else if (x > 0) {\n                    if (!this._running) {\n                        this._running = true;\n                        this.trigger({ type: EventType.start, alpha: this._alpha = x });\n                        this.kick();\n                    }\n                }\n                return this;\n            }\n        };\n        Layout.prototype.getLinkLength = function (link) {\n            return typeof this._linkDistance === \"function\" ? +(this._linkDistance(link)) : this._linkDistance;\n        };\n        Layout.setLinkLength = function (link, length) {\n            link.length = length;\n        };\n        Layout.prototype.getLinkType = function (link) {\n            return typeof this._linkType === \"function\" ? this._linkType(link) : 0;\n        };\n        /**\n         * compute an ideal length for each link based on the graph structure around that link.\n         * you can use this (for example) to create extra space around hub-nodes in dense graphs.\n         * In particular this calculation is based on the \"symmetric difference\" in the neighbour sets of the source and target:\n         * i.e. if neighbours of source is a and neighbours of target are b then calculation is: sqrt(|a union b| - |a intersection b|)\n         * Actual computation based on inspection of link structure occurs in start(), so links themselves\n         * don't have to have been assigned before invoking this function.\n         * @param {number} [idealLength] the base length for an edge when its source and start have no other common neighbours (e.g. 40)\n         * @param {number} [w] a multiplier for the effect of the length adjustment (e.g. 0.7)\n         */\n        Layout.prototype.symmetricDiffLinkLengths = function (idealLength, w) {\n            var _this = this;\n            if (w === void 0) { w = 1; }\n            this.linkDistance(function (l) { return idealLength * l.length; });\n            this._linkLengthCalculator = function () { return cola.symmetricDiffLinkLengths(_this._links, _this.linkAccessor, w); };\n            return this;\n        };\n        /**\n         * compute an ideal length for each link based on the graph structure around that link.\n         * you can use this (for example) to create extra space around hub-nodes in dense graphs.\n         * In particular this calculation is based on the \"symmetric difference\" in the neighbour sets of the source and target:\n         * i.e. if neighbours of source is a and neighbours of target are b then calculation is: |a intersection b|/|a union b|\n         * Actual computation based on inspection of link structure occurs in start(), so links themselves\n         * don't have to have been assigned before invoking this function.\n         * @param {number} [idealLength] the base length for an edge when its source and start have no other common neighbours (e.g. 40)\n         * @param {number} [w] a multiplier for the effect of the length adjustment (e.g. 0.7)\n         */\n        Layout.prototype.jaccardLinkLengths = function (idealLength, w) {\n            var _this = this;\n            if (w === void 0) { w = 1; }\n            this.linkDistance(function (l) { return idealLength * l.length; });\n            this._linkLengthCalculator = function () { return cola.jaccardLinkLengths(_this._links, _this.linkAccessor, w); };\n            return this;\n        };\n        /**\n         * start the layout process\n         * @method start\n         * @param {number} [initialUnconstrainedIterations=0] unconstrained initial layout iterations\n         * @param {number} [initialUserConstraintIterations=0] initial layout iterations with user-specified constraints\n         * @param {number} [initialAllConstraintsIterations=0] initial layout iterations with all constraints including non-overlap\n         * @param {number} [gridSnapIterations=0] iterations of \"grid snap\", which pulls nodes towards grid cell centers - grid of size node[0].width - only really makes sense if all nodes have the same width and height\n         * @param [keepRunning=true] keep iterating asynchronously via the tick method\n         */\n        Layout.prototype.start = function (initialUnconstrainedIterations, initialUserConstraintIterations, initialAllConstraintsIterations, gridSnapIterations, keepRunning) {\n            var _this = this;\n            if (initialUnconstrainedIterations === void 0) { initialUnconstrainedIterations = 0; }\n            if (initialUserConstraintIterations === void 0) { initialUserConstraintIterations = 0; }\n            if (initialAllConstraintsIterations === void 0) { initialAllConstraintsIterations = 0; }\n            if (gridSnapIterations === void 0) { gridSnapIterations = 0; }\n            if (keepRunning === void 0) { keepRunning = true; }\n            var i, j, n = this.nodes().length, N = n + 2 * this._groups.length, m = this._links.length, w = this._canvasSize[0], h = this._canvasSize[1];\n            var x = new Array(N), y = new Array(N);\n            var G = null;\n            var ao = this._avoidOverlaps;\n            this._nodes.forEach(function (v, i) {\n                v.index = i;\n                if (typeof v.x === 'undefined') {\n                    v.x = w / 2, v.y = h / 2;\n                }\n                x[i] = v.x, y[i] = v.y;\n            });\n            if (this._linkLengthCalculator)\n                this._linkLengthCalculator();\n            //should we do this to clearly label groups?\n            //this._groups.forEach((g, i) => g.groupIndex = i);\n            var distances;\n            if (this._distanceMatrix) {\n                // use the user specified distanceMatrix\n                distances = this._distanceMatrix;\n            }\n            else {\n                // construct an n X n distance matrix based on shortest paths through graph (with respect to edge.length).\n                distances = (new cola.shortestpaths.Calculator(N, this._links, Layout.getSourceIndex, Layout.getTargetIndex, function (l) { return _this.getLinkLength(l); })).DistanceMatrix();\n                // G is a square matrix with G[i][j] = 1 iff there exists an edge between node i and node j\n                // otherwise 2. (\n                G = cola.Descent.createSquareMatrix(N, function () { return 2; });\n                this._links.forEach(function (l) {\n                    if (typeof l.source == \"number\")\n                        l.source = _this._nodes[l.source];\n                    if (typeof l.target == \"number\")\n                        l.target = _this._nodes[l.target];\n                });\n                this._links.forEach(function (e) {\n                    var u = Layout.getSourceIndex(e), v = Layout.getTargetIndex(e);\n                    G[u][v] = G[v][u] = e.weight || 1;\n                });\n            }\n            var D = cola.Descent.createSquareMatrix(N, function (i, j) {\n                return distances[i][j];\n            });\n            if (this._rootGroup && typeof this._rootGroup.groups !== 'undefined') {\n                var i = n;\n                var addAttraction = function (i, j, strength, idealDistance) {\n                    G[i][j] = G[j][i] = strength;\n                    D[i][j] = D[j][i] = idealDistance;\n                };\n                this._groups.forEach(function (g) {\n                    addAttraction(i, i + 1, _this._groupCompactness, 0.1);\n                    // todo: add terms here attracting children of the group to the group dummy nodes\n                    //if (typeof g.leaves !== 'undefined')\n                    //    g.leaves.forEach(l => {\n                    //        addAttraction(l.index, i, 1e-4, 0.1);\n                    //        addAttraction(l.index, i + 1, 1e-4, 0.1);\n                    //    });\n                    //if (typeof g.groups !== 'undefined')\n                    //    g.groups.forEach(g => {\n                    //        var gid = n + g.groupIndex * 2;\n                    //        addAttraction(gid, i, 0.1, 0.1);\n                    //        addAttraction(gid + 1, i, 0.1, 0.1);\n                    //        addAttraction(gid, i + 1, 0.1, 0.1);\n                    //        addAttraction(gid + 1, i + 1, 0.1, 0.1);\n                    //    });\n                    x[i] = 0, y[i++] = 0;\n                    x[i] = 0, y[i++] = 0;\n                });\n            }\n            else\n                this._rootGroup = { leaves: this._nodes, groups: [] };\n            var curConstraints = this._constraints || [];\n            if (this._directedLinkConstraints) {\n                this.linkAccessor.getMinSeparation = this._directedLinkConstraints.getMinSeparation;\n                curConstraints = curConstraints.concat(cola.generateDirectedEdgeConstraints(n, this._links, this._directedLinkConstraints.axis, (this.linkAccessor)));\n            }\n            this.avoidOverlaps(false);\n            this._descent = new cola.Descent([x, y], D);\n            this._descent.locks.clear();\n            for (var i = 0; i < n; ++i) {\n                var o = this._nodes[i];\n                if (o.fixed) {\n                    o.px = o.x;\n                    o.py = o.y;\n                    var p = [o.x, o.y];\n                    this._descent.locks.add(i, p);\n                }\n            }\n            this._descent.threshold = this._threshold;\n            // apply initialIterations without user constraints or nonoverlap constraints\n            // if groups are specified, dummy nodes and edges will be added to untangle\n            // with respect to group connectivity\n            this.initialLayout(initialUnconstrainedIterations, x, y);\n            // apply initialIterations with user constraints but no nonoverlap constraints\n            if (curConstraints.length > 0)\n                this._descent.project = new cola.vpsc.Projection(this._nodes, this._groups, this._rootGroup, curConstraints).projectFunctions();\n            this._descent.run(initialUserConstraintIterations);\n            this.separateOverlappingComponents(w, h);\n            // subsequent iterations will apply all constraints\n            this.avoidOverlaps(ao);\n            if (ao) {\n                this._nodes.forEach(function (v, i) { v.x = x[i], v.y = y[i]; });\n                this._descent.project = new cola.vpsc.Projection(this._nodes, this._groups, this._rootGroup, curConstraints, true).projectFunctions();\n                this._nodes.forEach(function (v, i) { x[i] = v.x, y[i] = v.y; });\n            }\n            // allow not immediately connected nodes to relax apart (p-stress)\n            this._descent.G = G;\n            this._descent.run(initialAllConstraintsIterations);\n            if (gridSnapIterations) {\n                this._descent.snapStrength = 1000;\n                this._descent.snapGridSize = this._nodes[0].width;\n                this._descent.numGridSnapNodes = n;\n                this._descent.scaleSnapByMaxH = n != N; // if we have groups then need to scale hessian so grid forces still apply\n                var G0 = cola.Descent.createSquareMatrix(N, function (i, j) {\n                    if (i >= n || j >= n)\n                        return G[i][j];\n                    return 0;\n                });\n                this._descent.G = G0;\n                this._descent.run(gridSnapIterations);\n            }\n            this.updateNodePositions();\n            this.separateOverlappingComponents(w, h);\n            return keepRunning ? this.resume() : this;\n        };\n        Layout.prototype.initialLayout = function (iterations, x, y) {\n            if (this._groups.length > 0 && iterations > 0) {\n                // construct a flat graph with dummy nodes for the groups and edges connecting group dummy nodes to their children\n                // todo: edges attached to groups are replaced with edges connected to the corresponding group dummy node\n                var n = this._nodes.length;\n                var edges = this._links.map(function (e) { return { source: e.source.index, target: e.target.index }; });\n                var vs = this._nodes.map(function (v) { return { index: v.index }; });\n                this._groups.forEach(function (g, i) {\n                    vs.push({ index: g.index = n + i });\n                });\n                this._groups.forEach(function (g, i) {\n                    if (typeof g.leaves !== 'undefined')\n                        g.leaves.forEach(function (v) { return edges.push({ source: g.index, target: v.index }); });\n                    if (typeof g.groups !== 'undefined')\n                        g.groups.forEach(function (gg) { return edges.push({ source: g.index, target: gg.index }); });\n                });\n                // layout the flat graph with dummy nodes and edges\n                new cola.Layout()\n                    .size(this.size())\n                    .nodes(vs)\n                    .links(edges)\n                    .avoidOverlaps(false)\n                    .linkDistance(this.linkDistance())\n                    .symmetricDiffLinkLengths(5)\n                    .convergenceThreshold(1e-4)\n                    .start(iterations, 0, 0, 0, false);\n                this._nodes.forEach(function (v) {\n                    x[v.index] = vs[v.index].x;\n                    y[v.index] = vs[v.index].y;\n                });\n            }\n            else {\n                this._descent.run(iterations);\n            }\n        };\n        // recalculate nodes position for disconnected graphs\n        Layout.prototype.separateOverlappingComponents = function (width, height) {\n            var _this = this;\n            // recalculate nodes position for disconnected graphs\n            if (!this._distanceMatrix && this._handleDisconnected) {\n                var x = this._descent.x[0], y = this._descent.x[1];\n                this._nodes.forEach(function (v, i) { v.x = x[i], v.y = y[i]; });\n                var graphs = cola.separateGraphs(this._nodes, this._links);\n                cola.applyPacking(graphs, width, height, this._defaultNodeSize);\n                this._nodes.forEach(function (v, i) {\n                    _this._descent.x[0][i] = v.x, _this._descent.x[1][i] = v.y;\n                    if (v.bounds) {\n                        v.bounds.setXCentre(v.x);\n                        v.bounds.setYCentre(v.y);\n                    }\n                });\n            }\n        };\n        Layout.prototype.resume = function () {\n            return this.alpha(0.1);\n        };\n        Layout.prototype.stop = function () {\n            return this.alpha(0);\n        };\n        /// find a visibility graph over the set of nodes.  assumes all nodes have a\n        /// bounds property (a rectangle) and that no pair of bounds overlaps.\n        Layout.prototype.prepareEdgeRouting = function (nodeMargin) {\n            if (nodeMargin === void 0) { nodeMargin = 0; }\n            this._visibilityGraph = new cola.geom.TangentVisibilityGraph(this._nodes.map(function (v) {\n                return v.bounds.inflate(-nodeMargin).vertices();\n            }));\n        };\n        /// find a route avoiding node bounds for the given edge.\n        /// assumes the visibility graph has been created (by prepareEdgeRouting method)\n        /// and also assumes that nodes have an index property giving their position in the\n        /// node array.  This index property is created by the start() method.\n        Layout.prototype.routeEdge = function (edge, draw) {\n            var lineData = [];\n            //if (d.source.id === 10 && d.target.id === 11) {\n            //    debugger;\n            //}\n            var vg2 = new cola.geom.TangentVisibilityGraph(this._visibilityGraph.P, { V: this._visibilityGraph.V, E: this._visibilityGraph.E }), port1 = { x: edge.source.x, y: edge.source.y }, port2 = { x: edge.target.x, y: edge.target.y }, start = vg2.addPoint(port1, edge.source.index), end = vg2.addPoint(port2, edge.target.index);\n            vg2.addEdgeIfVisible(port1, port2, edge.source.index, edge.target.index);\n            if (typeof draw !== 'undefined') {\n                draw(vg2);\n            }\n            var sourceInd = function (e) { return e.source.id; }, targetInd = function (e) { return e.target.id; }, length = function (e) { return e.length(); }, spCalc = new cola.shortestpaths.Calculator(vg2.V.length, vg2.E, sourceInd, targetInd, length), shortestPath = spCalc.PathFromNodeToNode(start.id, end.id);\n            if (shortestPath.length === 1 || shortestPath.length === vg2.V.length) {\n                var route = cola.vpsc.makeEdgeBetween(edge.source.innerBounds, edge.target.innerBounds, 5);\n                lineData = [route.sourceIntersection, route.arrowStart];\n            }\n            else {\n                var n = shortestPath.length - 2, p = vg2.V[shortestPath[n]].p, q = vg2.V[shortestPath[0]].p, lineData = [edge.source.innerBounds.rayIntersection(p.x, p.y)];\n                for (var i = n; i >= 0; --i)\n                    lineData.push(vg2.V[shortestPath[i]].p);\n                lineData.push(cola.vpsc.makeEdgeTo(q, edge.target.innerBounds, 5));\n            }\n            //lineData.forEach((v, i) => {\n            //    if (i > 0) {\n            //        var u = lineData[i - 1];\n            //        this._nodes.forEach(function (node) {\n            //            if (node.id === getSourceIndex(d) || node.id === getTargetIndex(d)) return;\n            //            var ints = node.innerBounds.lineIntersections(u.x, u.y, v.x, v.y);\n            //            if (ints.length > 0) {\n            //                debugger;\n            //            }\n            //        })\n            //    }\n            //})\n            return lineData;\n        };\n        //The link source and target may be just a node index, or they may be references to nodes themselves.\n        Layout.getSourceIndex = function (e) {\n            return typeof e.source === 'number' ? e.source : e.source.index;\n        };\n        //The link source and target may be just a node index, or they may be references to nodes themselves.\n        Layout.getTargetIndex = function (e) {\n            return typeof e.target === 'number' ? e.target : e.target.index;\n        };\n        // Get a string ID for a given link.\n        Layout.linkId = function (e) {\n            return Layout.getSourceIndex(e) + \"-\" + Layout.getTargetIndex(e);\n        };\n        // The fixed property has three bits:\n        // Bit 1 can be set externally (e.g., d.fixed = true) and show persist.\n        // Bit 2 stores the dragging state, from mousedown to mouseup.\n        // Bit 3 stores the hover state, from mouseover to mouseout.\n        Layout.dragStart = function (d) {\n            if (isGroup(d)) {\n                Layout.storeOffset(d, Layout.dragOrigin(d));\n            }\n            else {\n                Layout.stopNode(d);\n                d.fixed |= 2; // set bit 2\n            }\n        };\n        // we clobber any existing desired positions for nodes\n        // in case another tick event occurs before the drag\n        Layout.stopNode = function (v) {\n            v.px = v.x;\n            v.py = v.y;\n        };\n        // we store offsets for each node relative to the centre of the ancestor group\n        // being dragged in a pair of properties on the node\n        Layout.storeOffset = function (d, origin) {\n            if (typeof d.leaves !== 'undefined') {\n                d.leaves.forEach(function (v) {\n                    v.fixed |= 2;\n                    Layout.stopNode(v);\n                    v._dragGroupOffsetX = v.x - origin.x;\n                    v._dragGroupOffsetY = v.y - origin.y;\n                });\n            }\n            if (typeof d.groups !== 'undefined') {\n                d.groups.forEach(function (g) { return Layout.storeOffset(g, origin); });\n            }\n        };\n        // the drag origin is taken as the centre of the node or group\n        Layout.dragOrigin = function (d) {\n            if (isGroup(d)) {\n                return {\n                    x: d.bounds.cx(),\n                    y: d.bounds.cy()\n                };\n            }\n            else {\n                return d;\n            }\n        };\n        // for groups, the drag translation is propagated down to all of the children of\n        // the group.\n        Layout.drag = function (d, position) {\n            if (isGroup(d)) {\n                if (typeof d.leaves !== 'undefined') {\n                    d.leaves.forEach(function (v) {\n                        d.bounds.setXCentre(position.x);\n                        d.bounds.setYCentre(position.y);\n                        v.px = v._dragGroupOffsetX + position.x;\n                        v.py = v._dragGroupOffsetY + position.y;\n                    });\n                }\n                if (typeof d.groups !== 'undefined') {\n                    d.groups.forEach(function (g) { return Layout.drag(g, position); });\n                }\n            }\n            else {\n                d.px = position.x;\n                d.py = position.y;\n            }\n        };\n        // we unset only bits 2 and 3 so that the user can fix nodes with another a different\n        // bit such that the lock persists between drags\n        Layout.dragEnd = function (d) {\n            if (isGroup(d)) {\n                if (typeof d.leaves !== 'undefined') {\n                    d.leaves.forEach(function (v) {\n                        Layout.dragEnd(v);\n                        delete v._dragGroupOffsetX;\n                        delete v._dragGroupOffsetY;\n                    });\n                }\n                if (typeof d.groups !== 'undefined') {\n                    d.groups.forEach(Layout.dragEnd);\n                }\n            }\n            else {\n                d.fixed &= ~6; // unset bits 2 and 3\n            }\n        };\n        // in d3 hover temporarily locks nodes, currently not used in cola\n        Layout.mouseOver = function (d) {\n            d.fixed |= 4; // set bit 3\n            d.px = d.x, d.py = d.y; // set velocity to zero\n        };\n        // in d3 hover temporarily locks nodes, currently not used in cola\n        Layout.mouseOut = function (d) {\n            d.fixed &= ~4; // unset bit 3\n        };\n        return Layout;\n    })();\n    cola.Layout = Layout;\n})(cola || (cola = {}));\n///<reference path=\"layout.ts\"/>\nvar cola = require('cytoscape-cola');;\n(function (cola) {\n    var LayoutAdaptor = (function (_super) {\n        __extends(LayoutAdaptor, _super);\n        function LayoutAdaptor(options) {\n            _super.call(this);\n            // take in implementation as defined by client\n            var self = this;\n            var o = options;\n            if (o.trigger) {\n                this.trigger = o.trigger;\n            }\n            if (o.kick) {\n                this.kick = o.kick;\n            }\n            if (o.drag) {\n                this.drag = o.drag;\n            }\n            if (o.on) {\n                this.on = o.on;\n            }\n            this.dragstart = this.dragStart = cola.Layout.dragStart;\n            this.dragend = this.dragEnd = cola.Layout.dragEnd;\n        }\n        // dummy functions in case not defined by client\n        LayoutAdaptor.prototype.trigger = function (e) { };\n        ;\n        LayoutAdaptor.prototype.kick = function () { };\n        ;\n        LayoutAdaptor.prototype.drag = function () { };\n        ;\n        LayoutAdaptor.prototype.on = function (eventType, listener) { return this; };\n        ;\n        return LayoutAdaptor;\n    })(cola.Layout);\n    cola.LayoutAdaptor = LayoutAdaptor;\n    /**\n     * provides an interface for use with any external graph system (e.g. Cytoscape.js):\n     */\n    function adaptor(options) {\n        return new LayoutAdaptor(options);\n    }\n    cola.adaptor = adaptor;\n})(cola || (cola = {}));\nvar cola = require('cytoscape-cola');;\n(function (cola) {\n    function gridify(pgLayout, nudgeGap, margin, groupMargin) {\n        pgLayout.cola.start(0, 0, 0, 10, false);\n        var gridrouter = route(pgLayout.cola.nodes(), pgLayout.cola.groups(), margin, groupMargin);\n        return gridrouter.routeEdges(pgLayout.powerGraph.powerEdges, nudgeGap, function (e) { return e.source.routerNode.id; }, function (e) { return e.target.routerNode.id; });\n    }\n    cola.gridify = gridify;\n    function route(nodes, groups, margin, groupMargin) {\n        nodes.forEach(function (d) {\n            d.routerNode = {\n                name: d.name,\n                bounds: d.bounds.inflate(-margin)\n            };\n        });\n        groups.forEach(function (d) {\n            d.routerNode = {\n                bounds: d.bounds.inflate(-groupMargin),\n                children: (typeof d.groups !== 'undefined' ? d.groups.map(function (c) { return nodes.length + c.id; }) : [])\n                    .concat(typeof d.leaves !== 'undefined' ? d.leaves.map(function (c) { return c.index; }) : [])\n            };\n        });\n        var gridRouterNodes = nodes.concat(groups).map(function (d, i) {\n            d.routerNode.id = i;\n            return d.routerNode;\n        });\n        return new cola.GridRouter(gridRouterNodes, {\n            getChildren: function (v) { return v.children; },\n            getBounds: function (v) { return v.bounds; }\n        }, margin - groupMargin);\n    }\n    function powerGraphGridLayout(graph, size, grouppadding, margin, groupMargin) {\n        // compute power graph\n        var powerGraph;\n        graph.nodes.forEach(function (v, i) { return v.index = i; });\n        new cola.Layout()\n            .avoidOverlaps(false)\n            .nodes(graph.nodes)\n            .links(graph.links)\n            .powerGraphGroups(function (d) {\n            powerGraph = d;\n            powerGraph.groups.forEach(function (v) { return v.padding = grouppadding; });\n        });\n        // construct a flat graph with dummy nodes for the groups and edges connecting group dummy nodes to their children\n        // power edges attached to groups are replaced with edges connected to the corresponding group dummy node\n        var n = graph.nodes.length;\n        var edges = [];\n        var vs = graph.nodes.slice(0);\n        vs.forEach(function (v, i) { return v.index = i; });\n        powerGraph.groups.forEach(function (g) {\n            var sourceInd = g.index = g.id + n;\n            vs.push(g);\n            if (typeof g.leaves !== 'undefined')\n                g.leaves.forEach(function (v) { return edges.push({ source: sourceInd, target: v.index }); });\n            if (typeof g.groups !== 'undefined')\n                g.groups.forEach(function (gg) { return edges.push({ source: sourceInd, target: gg.id + n }); });\n        });\n        powerGraph.powerEdges.forEach(function (e) {\n            edges.push({ source: e.source.index, target: e.target.index });\n        });\n        // layout the flat graph with dummy nodes and edges\n        new cola.Layout()\n            .size(size)\n            .nodes(vs)\n            .links(edges)\n            .avoidOverlaps(false)\n            .linkDistance(30)\n            .symmetricDiffLinkLengths(5)\n            .convergenceThreshold(1e-4)\n            .start(100, 0, 0, 0, false);\n        // final layout taking node positions from above as starting positions\n        // subject to group containment constraints\n        // and then gridifying the layout\n        return {\n            cola: new cola.Layout()\n                .convergenceThreshold(1e-3)\n                .size(size)\n                .avoidOverlaps(true)\n                .nodes(graph.nodes)\n                .links(graph.links)\n                .groupCompactness(1e-4)\n                .linkDistance(30)\n                .symmetricDiffLinkLengths(5)\n                .powerGraphGroups(function (d) {\n                powerGraph = d;\n                powerGraph.groups.forEach(function (v) {\n                    v.padding = grouppadding;\n                });\n            }).start(50, 0, 100, 0, false),\n            powerGraph: powerGraph\n        };\n    }\n    cola.powerGraphGridLayout = powerGraphGridLayout;\n})(cola || (cola = {}));\n///<reference path=\"../extern/d3.d.ts\"/>\n///<reference path=\"layout.ts\"/>\nvar cola = require('cytoscape-cola');;\n(function (cola) {\n    var D3StyleLayoutAdaptor = (function (_super) {\n        __extends(D3StyleLayoutAdaptor, _super);\n        function D3StyleLayoutAdaptor() {\n            _super.call(this);\n            this.event = d3.dispatch(cola.EventType[cola.EventType.start], cola.EventType[cola.EventType.tick], cola.EventType[cola.EventType.end]);\n            // bit of trickyness remapping 'this' so we can reference it in the function body.\n            var d3layout = this;\n            var drag;\n            this.drag = function () {\n                if (!drag) {\n                    var drag = d3.behavior.drag()\n                        .origin(cola.Layout.dragOrigin)\n                        .on(\"dragstart.d3adaptor\", cola.Layout.dragStart)\n                        .on(\"drag.d3adaptor\", function (d) {\n                        cola.Layout.drag(d, d3.event);\n                        d3layout.resume(); // restart annealing\n                    })\n                        .on(\"dragend.d3adaptor\", cola.Layout.dragEnd);\n                }\n                if (!arguments.length)\n                    return drag;\n                // this is the context of the function, i.e. the d3 selection\n                this //.on(\"mouseover.adaptor\", colaMouseover)\n                    .call(drag);\n            };\n        }\n        D3StyleLayoutAdaptor.prototype.trigger = function (e) {\n            var d3event = { type: cola.EventType[e.type], alpha: e.alpha, stress: e.stress };\n            this.event[d3event.type](d3event); // via d3 dispatcher, e.g. event.start(e);\n        };\n        // iterate layout using a d3.timer, which queues calls to tick repeatedly until tick returns true\n        D3StyleLayoutAdaptor.prototype.kick = function () {\n            var _this = this;\n            d3.timer(function () { return _super.prototype.tick.call(_this); });\n        };\n        // a function for binding to events on the adapter\n        D3StyleLayoutAdaptor.prototype.on = function (eventType, listener) {\n            if (typeof eventType === 'string') {\n                this.event.on(eventType, listener);\n            }\n            else {\n                this.event.on(cola.EventType[eventType], listener);\n            }\n            return this;\n        };\n        return D3StyleLayoutAdaptor;\n    })(cola.Layout);\n    cola.D3StyleLayoutAdaptor = D3StyleLayoutAdaptor;\n    /**\n     * provides an interface for use with d3:\n     * - uses the d3 event system to dispatch layout events such as:\n     *   o \"start\" (start layout process)\n     *   o \"tick\" (after each layout iteration)\n     *   o \"end\" (layout converged and complete).\n     * - uses the d3 timer to queue layout iterations.\n     * - sets up d3.behavior.drag to drag nodes\n     *   o use `node.call(<the returned instance of Layout>.drag)` to make nodes draggable\n     * returns an instance of the cola.Layout itself with which the user\n     * can interact directly.\n     */\n    function d3adaptor() {\n        return new D3StyleLayoutAdaptor();\n    }\n    cola.d3adaptor = d3adaptor;\n})(cola || (cola = {}));\n/// <reference path=\"rectangle.ts\"/>\n/// <reference path=\"shortestpaths.ts\"/>\n/// <reference path=\"geom.ts\"/>\n/// <reference path=\"vpsc.ts\"/>\nvar cola = require('cytoscape-cola');;\n(function (cola) {\n    var NodeWrapper = (function () {\n        function NodeWrapper(id, rect, children) {\n            this.id = id;\n            this.rect = rect;\n            this.children = children;\n            this.leaf = typeof children === 'undefined' || children.length === 0;\n        }\n        return NodeWrapper;\n    })();\n    cola.NodeWrapper = NodeWrapper;\n    var Vert = (function () {\n        function Vert(id, x, y, node, line) {\n            if (node === void 0) { node = null; }\n            if (line === void 0) { line = null; }\n            this.id = id;\n            this.x = x;\n            this.y = y;\n            this.node = node;\n            this.line = line;\n        }\n        return Vert;\n    })();\n    cola.Vert = Vert;\n    var LongestCommonSubsequence = (function () {\n        function LongestCommonSubsequence(s, t) {\n            this.s = s;\n            this.t = t;\n            var mf = LongestCommonSubsequence.findMatch(s, t);\n            var tr = t.slice(0).reverse();\n            var mr = LongestCommonSubsequence.findMatch(s, tr);\n            if (mf.length >= mr.length) {\n                this.length = mf.length;\n                this.si = mf.si;\n                this.ti = mf.ti;\n                this.reversed = false;\n            }\n            else {\n                this.length = mr.length;\n                this.si = mr.si;\n                this.ti = t.length - mr.ti - mr.length;\n                this.reversed = true;\n            }\n        }\n        LongestCommonSubsequence.findMatch = function (s, t) {\n            var m = s.length;\n            var n = t.length;\n            var match = { length: 0, si: -1, ti: -1 };\n            var l = new Array(m);\n            for (var i = 0; i < m; i++) {\n                l[i] = new Array(n);\n                for (var j = 0; j < n; j++)\n                    if (s[i] === t[j]) {\n                        var v = l[i][j] = (i === 0 || j === 0) ? 1 : l[i - 1][j - 1] + 1;\n                        if (v > match.length) {\n                            match.length = v;\n                            match.si = i - v + 1;\n                            match.ti = j - v + 1;\n                        }\n                        ;\n                    }\n                    else\n                        l[i][j] = 0;\n            }\n            return match;\n        };\n        LongestCommonSubsequence.prototype.getSequence = function () {\n            return this.length >= 0 ? this.s.slice(this.si, this.si + this.length) : [];\n        };\n        return LongestCommonSubsequence;\n    })();\n    cola.LongestCommonSubsequence = LongestCommonSubsequence;\n    var GridRouter = (function () {\n        function GridRouter(originalnodes, accessor, groupPadding) {\n            var _this = this;\n            if (groupPadding === void 0) { groupPadding = 12; }\n            this.originalnodes = originalnodes;\n            this.groupPadding = groupPadding;\n            this.leaves = null;\n            this.nodes = originalnodes.map(function (v, i) { return new NodeWrapper(i, accessor.getBounds(v), accessor.getChildren(v)); });\n            this.leaves = this.nodes.filter(function (v) { return v.leaf; });\n            this.groups = this.nodes.filter(function (g) { return !g.leaf; });\n            this.cols = this.getGridLines('x');\n            this.rows = this.getGridLines('y');\n            // create parents for each node or group that is a member of another's children\n            this.groups.forEach(function (v) {\n                return v.children.forEach(function (c) { return _this.nodes[c].parent = v; });\n            });\n            // root claims the remaining orphans\n            this.root = { children: [] };\n            this.nodes.forEach(function (v) {\n                if (typeof v.parent === 'undefined') {\n                    v.parent = _this.root;\n                    _this.root.children.push(v.id);\n                }\n                // each node will have grid vertices associated with it,\n                // some inside the node and some on the boundary\n                // leaf nodes will have exactly one internal node at the center\n                // and four boundary nodes\n                // groups will have potentially many of each\n                v.ports = [];\n            });\n            // nodes ordered by their position in the group hierarchy\n            this.backToFront = this.nodes.slice(0);\n            this.backToFront.sort(function (x, y) { return _this.getDepth(x) - _this.getDepth(y); });\n            // compute boundary rectangles for each group\n            // has to be done from front to back, i.e. inside groups to outside groups\n            // such that each can be made large enough to enclose its interior\n            var frontToBackGroups = this.backToFront.slice(0).reverse().filter(function (g) { return !g.leaf; });\n            frontToBackGroups.forEach(function (v) {\n                var r = cola.vpsc.Rectangle.empty();\n                v.children.forEach(function (c) { return r = r.union(_this.nodes[c].rect); });\n                v.rect = r.inflate(_this.groupPadding);\n            });\n            var colMids = this.midPoints(this.cols.map(function (r) { return r.pos; }));\n            var rowMids = this.midPoints(this.rows.map(function (r) { return r.pos; }));\n            // setup extents of lines\n            var rowx = colMids[0], rowX = colMids[colMids.length - 1];\n            var coly = rowMids[0], colY = rowMids[rowMids.length - 1];\n            // horizontal lines\n            var hlines = this.rows.map(function (r) { return { x1: rowx, x2: rowX, y1: r.pos, y2: r.pos }; })\n                .concat(rowMids.map(function (m) { return { x1: rowx, x2: rowX, y1: m, y2: m }; }));\n            // vertical lines\n            var vlines = this.cols.map(function (c) { return { x1: c.pos, x2: c.pos, y1: coly, y2: colY }; })\n                .concat(colMids.map(function (m) { return { x1: m, x2: m, y1: coly, y2: colY }; }));\n            // the full set of lines\n            var lines = hlines.concat(vlines);\n            // we record the vertices associated with each line\n            lines.forEach(function (l) { return l.verts = []; });\n            // the routing graph\n            this.verts = [];\n            this.edges = [];\n            // create vertices at the crossings of horizontal and vertical grid-lines\n            hlines.forEach(function (h) {\n                return vlines.forEach(function (v) {\n                    var p = new Vert(_this.verts.length, v.x1, h.y1);\n                    h.verts.push(p);\n                    v.verts.push(p);\n                    _this.verts.push(p);\n                    // assign vertices to the nodes immediately under them\n                    var i = _this.backToFront.length;\n                    while (i-- > 0) {\n                        var node = _this.backToFront[i], r = node.rect;\n                        var dx = Math.abs(p.x - r.cx()), dy = Math.abs(p.y - r.cy());\n                        if (dx < r.width() / 2 && dy < r.height() / 2) {\n                            p.node = node;\n                            break;\n                        }\n                    }\n                });\n            });\n            lines.forEach(function (l, li) {\n                // create vertices at the intersections of nodes and lines\n                _this.nodes.forEach(function (v, i) {\n                    v.rect.lineIntersections(l.x1, l.y1, l.x2, l.y2).forEach(function (intersect, j) {\n                        //console.log(li+','+i+','+j+':'+intersect.x + ',' + intersect.y);\n                        var p = new Vert(_this.verts.length, intersect.x, intersect.y, v, l);\n                        _this.verts.push(p);\n                        l.verts.push(p);\n                        v.ports.push(p);\n                    });\n                });\n                // split lines into edges joining vertices\n                var isHoriz = Math.abs(l.y1 - l.y2) < 0.1;\n                var delta = function (a, b) { return isHoriz ? b.x - a.x : b.y - a.y; };\n                l.verts.sort(delta);\n                for (var i = 1; i < l.verts.length; i++) {\n                    var u = l.verts[i - 1], v = l.verts[i];\n                    if (u.node && u.node === v.node && u.node.leaf)\n                        continue;\n                    _this.edges.push({ source: u.id, target: v.id, length: Math.abs(delta(u, v)) });\n                }\n            });\n        }\n        GridRouter.prototype.avg = function (a) { return a.reduce(function (x, y) { return x + y; }) / a.length; };\n        // in the given axis, find sets of leaves overlapping in that axis\n        // center of each GridLine is average of all nodes in column\n        GridRouter.prototype.getGridLines = function (axis) {\n            var columns = [];\n            var ls = this.leaves.slice(0, this.leaves.length);\n            while (ls.length > 0) {\n                // find a column of all leaves overlapping in axis with the first leaf\n                var overlapping = ls.filter(function (v) { return v.rect['overlap' + axis.toUpperCase()](ls[0].rect); });\n                var col = {\n                    nodes: overlapping,\n                    pos: this.avg(overlapping.map(function (v) { return v.rect['c' + axis](); }))\n                };\n                columns.push(col);\n                col.nodes.forEach(function (v) { return ls.splice(ls.indexOf(v), 1); });\n            }\n            columns.sort(function (a, b) { return a.pos - b.pos; });\n            return columns;\n        };\n        // get the depth of the given node in the group hierarchy\n        GridRouter.prototype.getDepth = function (v) {\n            var depth = 0;\n            while (v.parent !== this.root) {\n                depth++;\n                v = v.parent;\n            }\n            return depth;\n        };\n        // medial axes between node centres and also boundary lines for the grid\n        GridRouter.prototype.midPoints = function (a) {\n            var gap = a[1] - a[0];\n            var mids = [a[0] - gap / 2];\n            for (var i = 1; i < a.length; i++) {\n                mids.push((a[i] + a[i - 1]) / 2);\n            }\n            mids.push(a[a.length - 1] + gap / 2);\n            return mids;\n        };\n        // find path from v to root including both v and root\n        GridRouter.prototype.findLineage = function (v) {\n            var lineage = [v];\n            do {\n                v = v.parent;\n                lineage.push(v);\n            } while (v !== this.root);\n            return lineage.reverse();\n        };\n        // find path connecting a and b through their lowest common ancestor\n        GridRouter.prototype.findAncestorPathBetween = function (a, b) {\n            var aa = this.findLineage(a), ba = this.findLineage(b), i = 0;\n            while (aa[i] === ba[i])\n                i++;\n            // i-1 to include common ancestor only once (as first element)\n            return { commonAncestor: aa[i - 1], lineages: aa.slice(i).concat(ba.slice(i)) };\n        };\n        // when finding a path between two nodes a and b, siblings of a and b on the\n        // paths from a and b to their least common ancestor are obstacles\n        GridRouter.prototype.siblingObstacles = function (a, b) {\n            var _this = this;\n            var path = this.findAncestorPathBetween(a, b);\n            var lineageLookup = {};\n            path.lineages.forEach(function (v) { return lineageLookup[v.id] = {}; });\n            var obstacles = path.commonAncestor.children.filter(function (v) { return !(v in lineageLookup); });\n            path.lineages\n                .filter(function (v) { return v.parent !== path.commonAncestor; })\n                .forEach(function (v) { return obstacles = obstacles.concat(v.parent.children.filter(function (c) { return c !== v.id; })); });\n            return obstacles.map(function (v) { return _this.nodes[v]; });\n        };\n        // for the given routes, extract all the segments orthogonal to the axis x\n        // and return all them grouped by x position\n        GridRouter.getSegmentSets = function (routes, x, y) {\n            // vsegments is a list of vertical segments sorted by x position\n            var vsegments = [];\n            for (var ei = 0; ei < routes.length; ei++) {\n                var route = routes[ei];\n                for (var si = 0; si < route.length; si++) {\n                    var s = route[si];\n                    s.edgeid = ei;\n                    s.i = si;\n                    var sdx = s[1][x] - s[0][x];\n                    if (Math.abs(sdx) < 0.1) {\n                        vsegments.push(s);\n                    }\n                }\n            }\n            vsegments.sort(function (a, b) { return a[0][x] - b[0][x]; });\n            // vsegmentsets is a set of sets of segments grouped by x position\n            var vsegmentsets = [];\n            var segmentset = null;\n            for (var i = 0; i < vsegments.length; i++) {\n                var s = vsegments[i];\n                if (!segmentset || Math.abs(s[0][x] - segmentset.pos) > 0.1) {\n                    segmentset = { pos: s[0][x], segments: [] };\n                    vsegmentsets.push(segmentset);\n                }\n                segmentset.segments.push(s);\n            }\n            return vsegmentsets;\n        };\n        // for all segments in this bundle create a vpsc problem such that\n        // each segment's x position is a variable and separation constraints\n        // are given by the partial order over the edges to which the segments belong\n        // for each pair s1,s2 of segments in the open set:\n        //   e1 = edge of s1, e2 = edge of s2\n        //   if leftOf(e1,e2) create constraint s1.x + gap <= s2.x\n        //   else if leftOf(e2,e1) create cons. s2.x + gap <= s1.x\n        GridRouter.nudgeSegs = function (x, y, routes, segments, leftOf, gap) {\n            var n = segments.length;\n            if (n <= 1)\n                return;\n            var vs = segments.map(function (s) { return new cola.vpsc.Variable(s[0][x]); });\n            var cs = [];\n            for (var i = 0; i < n; i++) {\n                for (var j = 0; j < n; j++) {\n                    if (i === j)\n                        continue;\n                    var s1 = segments[i], s2 = segments[j], e1 = s1.edgeid, e2 = s2.edgeid, lind = -1, rind = -1;\n                    // in page coordinates (not cartesian) the notion of 'leftof' is flipped in the horizontal axis from the vertical axis\n                    // that is, when nudging vertical segments, if they increase in the y(conj) direction the segment belonging to the\n                    // 'left' edge actually needs to be nudged to the right\n                    // when nudging horizontal segments, if the segments increase in the x direction\n                    // then the 'left' segment needs to go higher, i.e. to have y pos less than that of the right\n                    if (x == 'x') {\n                        if (leftOf(e1, e2)) {\n                            //console.log('s1: ' + s1[0][x] + ',' + s1[0][y] + '-' + s1[1][x] + ',' + s1[1][y]);\n                            if (s1[0][y] < s1[1][y]) {\n                                lind = j, rind = i;\n                            }\n                            else {\n                                lind = i, rind = j;\n                            }\n                        }\n                    }\n                    else {\n                        if (leftOf(e1, e2)) {\n                            if (s1[0][y] < s1[1][y]) {\n                                lind = i, rind = j;\n                            }\n                            else {\n                                lind = j, rind = i;\n                            }\n                        }\n                    }\n                    if (lind >= 0) {\n                        //console.log(x+' constraint: ' + lind + '<' + rind);\n                        cs.push(new cola.vpsc.Constraint(vs[lind], vs[rind], gap));\n                    }\n                }\n            }\n            var solver = new cola.vpsc.Solver(vs, cs);\n            solver.solve();\n            vs.forEach(function (v, i) {\n                var s = segments[i];\n                var pos = v.position();\n                s[0][x] = s[1][x] = pos;\n                var route = routes[s.edgeid];\n                if (s.i > 0)\n                    route[s.i - 1][1][x] = pos;\n                if (s.i < route.length - 1)\n                    route[s.i + 1][0][x] = pos;\n            });\n        };\n        GridRouter.nudgeSegments = function (routes, x, y, leftOf, gap) {\n            var vsegmentsets = GridRouter.getSegmentSets(routes, x, y);\n            // scan the grouped (by x) segment sets to find co-linear bundles\n            for (var i = 0; i < vsegmentsets.length; i++) {\n                var ss = vsegmentsets[i];\n                var events = [];\n                for (var j = 0; j < ss.segments.length; j++) {\n                    var s = ss.segments[j];\n                    events.push({ type: 0, s: s, pos: Math.min(s[0][y], s[1][y]) });\n                    events.push({ type: 1, s: s, pos: Math.max(s[0][y], s[1][y]) });\n                }\n                events.sort(function (a, b) { return a.pos - b.pos + a.type - b.type; });\n                var open = [];\n                var openCount = 0;\n                events.forEach(function (e) {\n                    if (e.type === 0) {\n                        open.push(e.s);\n                        openCount++;\n                    }\n                    else {\n                        openCount--;\n                    }\n                    if (openCount == 0) {\n                        GridRouter.nudgeSegs(x, y, routes, open, leftOf, gap);\n                        open = [];\n                    }\n                });\n            }\n        };\n        // obtain routes for the specified edges, nicely nudged apart\n        // warning: edge paths may be reversed such that common paths are ordered consistently within bundles!\n        // @param edges list of edges\n        // @param nudgeGap how much to space parallel edge segements\n        // @param source function to retrieve the index of the source node for a given edge\n        // @param target function to retrieve the index of the target node for a given edge\n        // @returns an array giving, for each edge, an array of segments, each segment a pair of points in an array\n        GridRouter.prototype.routeEdges = function (edges, nudgeGap, source, target) {\n            var _this = this;\n            var routePaths = edges.map(function (e) { return _this.route(source(e), target(e)); });\n            var order = cola.GridRouter.orderEdges(routePaths);\n            var routes = routePaths.map(function (e) { return cola.GridRouter.makeSegments(e); });\n            cola.GridRouter.nudgeSegments(routes, 'x', 'y', order, nudgeGap);\n            cola.GridRouter.nudgeSegments(routes, 'y', 'x', order, nudgeGap);\n            cola.GridRouter.unreverseEdges(routes, routePaths);\n            return routes;\n        };\n        // path may have been reversed by the subsequence processing in orderEdges\n        // so now we need to restore the original order\n        GridRouter.unreverseEdges = function (routes, routePaths) {\n            routes.forEach(function (segments, i) {\n                var path = routePaths[i];\n                if (path.reversed) {\n                    segments.reverse(); // reverse order of segments\n                    segments.forEach(function (segment) {\n                        segment.reverse(); // reverse each segment\n                    });\n                }\n            });\n        };\n        GridRouter.angleBetween2Lines = function (line1, line2) {\n            var angle1 = Math.atan2(line1[0].y - line1[1].y, line1[0].x - line1[1].x);\n            var angle2 = Math.atan2(line2[0].y - line2[1].y, line2[0].x - line2[1].x);\n            var diff = angle1 - angle2;\n            if (diff > Math.PI || diff < -Math.PI) {\n                diff = angle2 - angle1;\n            }\n            return diff;\n        };\n        // does the path a-b-c describe a left turn?\n        GridRouter.isLeft = function (a, b, c) {\n            return ((b.x - a.x) * (c.y - a.y) - (b.y - a.y) * (c.x - a.x)) <= 0;\n        };\n        // for the given list of ordered pairs, returns a function that (efficiently) looks-up a specific pair to\n        // see if it exists in the list\n        GridRouter.getOrder = function (pairs) {\n            var outgoing = {};\n            for (var i = 0; i < pairs.length; i++) {\n                var p = pairs[i];\n                if (typeof outgoing[p.l] === 'undefined')\n                    outgoing[p.l] = {};\n                outgoing[p.l][p.r] = true;\n            }\n            return function (l, r) { return typeof outgoing[l] !== 'undefined' && outgoing[l][r]; };\n        };\n        // returns an ordering (a lookup function) that determines the correct order to nudge the\n        // edge paths apart to minimize crossings\n        GridRouter.orderEdges = function (edges) {\n            var edgeOrder = [];\n            for (var i = 0; i < edges.length - 1; i++) {\n                for (var j = i + 1; j < edges.length; j++) {\n                    var e = edges[i], f = edges[j], lcs = new cola.LongestCommonSubsequence(e, f);\n                    var u, vi, vj;\n                    if (lcs.length === 0)\n                        continue; // no common subpath\n                    if (lcs.reversed) {\n                        // if we found a common subpath but one of the edges runs the wrong way,\n                        // then reverse f.\n                        f.reverse();\n                        f.reversed = true;\n                        lcs = new cola.LongestCommonSubsequence(e, f);\n                    }\n                    if ((lcs.si <= 0 || lcs.ti <= 0) &&\n                        (lcs.si + lcs.length >= e.length || lcs.ti + lcs.length >= f.length)) {\n                        // the paths do not diverge, so make an arbitrary ordering decision\n                        edgeOrder.push({ l: i, r: j });\n                        continue;\n                    }\n                    if (lcs.si + lcs.length >= e.length || lcs.ti + lcs.length >= f.length) {\n                        // if the common subsequence of the\n                        // two edges being considered goes all the way to the\n                        // end of one (or both) of the lines then we have to\n                        // base our ordering decision on the other end of the\n                        // common subsequence\n                        u = e[lcs.si + 1];\n                        vj = e[lcs.si - 1];\n                        vi = f[lcs.ti - 1];\n                    }\n                    else {\n                        u = e[lcs.si + lcs.length - 2];\n                        vi = e[lcs.si + lcs.length];\n                        vj = f[lcs.ti + lcs.length];\n                    }\n                    if (GridRouter.isLeft(u, vi, vj)) {\n                        edgeOrder.push({ l: j, r: i });\n                    }\n                    else {\n                        edgeOrder.push({ l: i, r: j });\n                    }\n                }\n            }\n            //edgeOrder.forEach(function (e) { console.log('l:' + e.l + ',r:' + e.r) });\n            return cola.GridRouter.getOrder(edgeOrder);\n        };\n        // for an orthogonal path described by a sequence of points, create a list of segments\n        // if consecutive segments would make a straight line they are merged into a single segment\n        // segments are over cloned points, not the original vertices\n        GridRouter.makeSegments = function (path) {\n            function copyPoint(p) {\n                return { x: p.x, y: p.y };\n            }\n            var isStraight = function (a, b, c) { return Math.abs((b.x - a.x) * (c.y - a.y) - (b.y - a.y) * (c.x - a.x)) < 0.001; };\n            var segments = [];\n            var a = copyPoint(path[0]);\n            for (var i = 1; i < path.length; i++) {\n                var b = copyPoint(path[i]), c = i < path.length - 1 ? path[i + 1] : null;\n                if (!c || !isStraight(a, b, c)) {\n                    segments.push([a, b]);\n                    a = b;\n                }\n            }\n            return segments;\n        };\n        // find a route between node s and node t\n        // returns an array of indices to verts\n        GridRouter.prototype.route = function (s, t) {\n            var _this = this;\n            var source = this.nodes[s], target = this.nodes[t];\n            this.obstacles = this.siblingObstacles(source, target);\n            var obstacleLookup = {};\n            this.obstacles.forEach(function (o) { return obstacleLookup[o.id] = o; });\n            this.passableEdges = this.edges.filter(function (e) {\n                var u = _this.verts[e.source], v = _this.verts[e.target];\n                return !(u.node && u.node.id in obstacleLookup\n                    || v.node && v.node.id in obstacleLookup);\n            });\n            // add dummy segments linking ports inside source and target\n            for (var i = 1; i < source.ports.length; i++) {\n                var u = source.ports[0].id;\n                var v = source.ports[i].id;\n                this.passableEdges.push({\n                    source: u,\n                    target: v,\n                    length: 0\n                });\n            }\n            for (var i = 1; i < target.ports.length; i++) {\n                var u = target.ports[0].id;\n                var v = target.ports[i].id;\n                this.passableEdges.push({\n                    source: u,\n                    target: v,\n                    length: 0\n                });\n            }\n            var getSource = function (e) { return e.source; }, getTarget = function (e) { return e.target; }, getLength = function (e) { return e.length; };\n            var shortestPathCalculator = new cola.shortestpaths.Calculator(this.verts.length, this.passableEdges, getSource, getTarget, getLength);\n            var bendPenalty = function (u, v, w) {\n                var a = _this.verts[u], b = _this.verts[v], c = _this.verts[w];\n                var dx = Math.abs(c.x - a.x), dy = Math.abs(c.y - a.y);\n                // don't count bends from internal node edges\n                if (a.node === source && a.node === b.node || b.node === target && b.node === c.node)\n                    return 0;\n                return dx > 1 && dy > 1 ? 1000 : 0;\n            };\n            // get shortest path\n            var shortestPath = shortestPathCalculator.PathFromNodeToNodeWithPrevCost(source.ports[0].id, target.ports[0].id, bendPenalty);\n            // shortest path is reversed and does not include the target port\n            var pathPoints = shortestPath.reverse().map(function (vi) { return _this.verts[vi]; });\n            pathPoints.push(this.nodes[target.id].ports[0]);\n            // filter out any extra end points that are inside the source or target (i.e. the dummy segments above)\n            return pathPoints.filter(function (v, i) {\n                return !(i < pathPoints.length - 1 && pathPoints[i + 1].node === source && v.node === source\n                    || i > 0 && v.node === target && pathPoints[i - 1].node === target);\n            });\n        };\n        GridRouter.getRoutePath = function (route, cornerradius, arrowwidth, arrowheight) {\n            var result = {\n                routepath: 'M ' + route[0][0].x + ' ' + route[0][0].y + ' ',\n                arrowpath: ''\n            };\n            if (route.length > 1) {\n                for (var i = 0; i < route.length; i++) {\n                    var li = route[i];\n                    var x = li[1].x, y = li[1].y;\n                    var dx = x - li[0].x;\n                    var dy = y - li[0].y;\n                    if (i < route.length - 1) {\n                        if (Math.abs(dx) > 0) {\n                            x -= dx / Math.abs(dx) * cornerradius;\n                        }\n                        else {\n                            y -= dy / Math.abs(dy) * cornerradius;\n                        }\n                        result.routepath += 'L ' + x + ' ' + y + ' ';\n                        var l = route[i + 1];\n                        var x0 = l[0].x, y0 = l[0].y;\n                        var x1 = l[1].x;\n                        var y1 = l[1].y;\n                        dx = x1 - x0;\n                        dy = y1 - y0;\n                        var angle = GridRouter.angleBetween2Lines(li, l) < 0 ? 1 : 0;\n                        //console.log(cola.GridRouter.angleBetween2Lines(li, l))\n                        var x2, y2;\n                        if (Math.abs(dx) > 0) {\n                            x2 = x0 + dx / Math.abs(dx) * cornerradius;\n                            y2 = y0;\n                        }\n                        else {\n                            x2 = x0;\n                            y2 = y0 + dy / Math.abs(dy) * cornerradius;\n                        }\n                        var cx = Math.abs(x2 - x);\n                        var cy = Math.abs(y2 - y);\n                        result.routepath += 'A ' + cx + ' ' + cy + ' 0 0 ' + angle + ' ' + x2 + ' ' + y2 + ' ';\n                    }\n                    else {\n                        var arrowtip = [x, y];\n                        var arrowcorner1, arrowcorner2;\n                        if (Math.abs(dx) > 0) {\n                            x -= dx / Math.abs(dx) * arrowheight;\n                            arrowcorner1 = [x, y + arrowwidth];\n                            arrowcorner2 = [x, y - arrowwidth];\n                        }\n                        else {\n                            y -= dy / Math.abs(dy) * arrowheight;\n                            arrowcorner1 = [x + arrowwidth, y];\n                            arrowcorner2 = [x - arrowwidth, y];\n                        }\n                        result.routepath += 'L ' + x + ' ' + y + ' ';\n                        if (arrowheight > 0) {\n                            result.arrowpath = 'M ' + arrowtip[0] + ' ' + arrowtip[1] + ' L ' + arrowcorner1[0] + ' ' + arrowcorner1[1]\n                                + ' L ' + arrowcorner2[0] + ' ' + arrowcorner2[1];\n                        }\n                    }\n                }\n            }\n            else {\n                var li = route[0];\n                var x = li[1].x, y = li[1].y;\n                var dx = x - li[0].x;\n                var dy = y - li[0].y;\n                var arrowtip = [x, y];\n                var arrowcorner1, arrowcorner2;\n                if (Math.abs(dx) > 0) {\n                    x -= dx / Math.abs(dx) * arrowheight;\n                    arrowcorner1 = [x, y + arrowwidth];\n                    arrowcorner2 = [x, y - arrowwidth];\n                }\n                else {\n                    y -= dy / Math.abs(dy) * arrowheight;\n                    arrowcorner1 = [x + arrowwidth, y];\n                    arrowcorner2 = [x - arrowwidth, y];\n                }\n                result.routepath += 'L ' + x + ' ' + y + ' ';\n                if (arrowheight > 0) {\n                    result.arrowpath = 'M ' + arrowtip[0] + ' ' + arrowtip[1] + ' L ' + arrowcorner1[0] + ' ' + arrowcorner1[1]\n                        + ' L ' + arrowcorner2[0] + ' ' + arrowcorner2[1];\n                }\n            }\n            return result;\n        };\n        return GridRouter;\n    })();\n    cola.GridRouter = GridRouter;\n})(cola || (cola = {}));\n/**\n * Use cola to do a layout in 3D!! Yay.\n * Pretty simple for the moment.\n */\nvar cola = require('cytoscape-cola');;\n(function (cola) {\n    var Link3D = (function () {\n        function Link3D(source, target) {\n            this.source = source;\n            this.target = target;\n        }\n        Link3D.prototype.actualLength = function (x) {\n            var _this = this;\n            return Math.sqrt(x.reduce(function (c, v) {\n                var dx = v[_this.target] - v[_this.source];\n                return c + dx * dx;\n            }, 0));\n        };\n        return Link3D;\n    })();\n    cola.Link3D = Link3D;\n    var Node3D = (function () {\n        function Node3D(x, y, z) {\n            if (x === void 0) { x = 0; }\n            if (y === void 0) { y = 0; }\n            if (z === void 0) { z = 0; }\n            this.x = x;\n            this.y = y;\n            this.z = z;\n        }\n        return Node3D;\n    })();\n    cola.Node3D = Node3D;\n    var Layout3D = (function () {\n        function Layout3D(nodes, links, idealLinkLength) {\n            var _this = this;\n            if (idealLinkLength === void 0) { idealLinkLength = 1; }\n            this.nodes = nodes;\n            this.links = links;\n            this.idealLinkLength = idealLinkLength;\n            this.constraints = null;\n            this.useJaccardLinkLengths = true;\n            this.result = new Array(Layout3D.k);\n            for (var i = 0; i < Layout3D.k; ++i) {\n                this.result[i] = new Array(nodes.length);\n            }\n            nodes.forEach(function (v, i) {\n                for (var _i = 0, _a = Layout3D.dims; _i < _a.length; _i++) {\n                    var dim = _a[_i];\n                    if (typeof v[dim] == 'undefined')\n                        v[dim] = Math.random();\n                }\n                _this.result[0][i] = v.x;\n                _this.result[1][i] = v.y;\n                _this.result[2][i] = v.z;\n            });\n        }\n        ;\n        Layout3D.prototype.linkLength = function (l) {\n            return l.actualLength(this.result);\n        };\n        Layout3D.prototype.start = function (iterations) {\n            var _this = this;\n            if (iterations === void 0) { iterations = 100; }\n            var n = this.nodes.length;\n            var linkAccessor = new LinkAccessor();\n            if (this.useJaccardLinkLengths)\n                cola.jaccardLinkLengths(this.links, linkAccessor, 1.5);\n            this.links.forEach(function (e) { return e.length *= _this.idealLinkLength; });\n            // Create the distance matrix that Cola needs\n            var distanceMatrix = (new cola.shortestpaths.Calculator(n, this.links, function (e) { return e.source; }, function (e) { return e.target; }, function (e) { return e.length; })).DistanceMatrix();\n            var D = cola.Descent.createSquareMatrix(n, function (i, j) { return distanceMatrix[i][j]; });\n            // G is a square matrix with G[i][j] = 1 iff there exists an edge between node i and node j\n            // otherwise 2.\n            var G = cola.Descent.createSquareMatrix(n, function () { return 2; });\n            this.links.forEach(function (_a) {\n                var source = _a.source, target = _a.target;\n                return G[source][target] = G[target][source] = 1;\n            });\n            this.descent = new cola.Descent(this.result, D);\n            this.descent.threshold = 1e-3;\n            this.descent.G = G;\n            //let constraints = this.links.map(e=> <any>{\n            //    axis: 'y', left: e.source, right: e.target, gap: e.length*1.5\n            //});\n            if (this.constraints)\n                this.descent.project = new cola.vpsc.Projection(this.nodes, null, null, this.constraints).projectFunctions();\n            for (var i = 0; i < this.nodes.length; i++) {\n                var v = this.nodes[i];\n                if (v.fixed) {\n                    this.descent.locks.add(i, [v.x, v.y, v.z]);\n                }\n            }\n            this.descent.run(iterations);\n            return this;\n        };\n        Layout3D.prototype.tick = function () {\n            this.descent.locks.clear();\n            for (var i = 0; i < this.nodes.length; i++) {\n                var v = this.nodes[i];\n                if (v.fixed) {\n                    this.descent.locks.add(i, [v.x, v.y, v.z]);\n                }\n            }\n            return this.descent.rungeKutta();\n        };\n        Layout3D.dims = ['x', 'y', 'z'];\n        Layout3D.k = Layout3D.dims.length;\n        return Layout3D;\n    })();\n    cola.Layout3D = Layout3D;\n    var LinkAccessor = (function () {\n        function LinkAccessor() {\n        }\n        LinkAccessor.prototype.getSourceIndex = function (e) { return e.source; };\n        LinkAccessor.prototype.getTargetIndex = function (e) { return e.target; };\n        LinkAccessor.prototype.getLength = function (e) { return e.length; };\n        LinkAccessor.prototype.setLength = function (e, l) { e.length = l; };\n        return LinkAccessor;\n    })();\n})(cola || (cola = {}));\n\n\n// patch in conditional cola commonjs support\nif( typeof module !== 'undefined' ){\n  module.exports = cola;\n}\n"]}